
achen115_lab5_part1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000164  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000110  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000164  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000194  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000001d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000083d  00000000  00000000  000001f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000799  00000000  00000000  00000a31  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000290  00000000  00000000  000011ca  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  0000145c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003f2  00000000  00000000  00001480  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000010  00000000  00000000  00001872  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	02 d0       	rcall	.+4      	; 0x9e <main>
  9a:	38 c0       	rjmp	.+112    	; 0x10c <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <main>:


int main(void)
{
    /* Replace with your application code */
	DDRA = 0;	PINA = -1;
  9e:	11 b8       	out	0x01, r1	; 1
  a0:	8f ef       	ldi	r24, 0xFF	; 255
  a2:	80 b9       	out	0x00, r24	; 0
	DDRC = -1;	PORTC = 0;
  a4:	87 b9       	out	0x07, r24	; 7
  a6:	18 b8       	out	0x08, r1	; 8
    while (1) 
    {
		char fuel = ~(PINA | 0xF0);
		PORTB = ((fuel < 5) << 6) | ((fuel > 0) << 5) | ((fuel > 2) << 4) | ((fuel > 4) << 3) | ((fuel > 6) << 2) | ((fuel > 9) << 1) | (fuel > 12);
  a8:	50 e0       	ldi	r21, 0x00	; 0
  aa:	b8 e0       	ldi	r27, 0x08	; 8
  ac:	a0 e1       	ldi	r26, 0x10	; 16
  ae:	f4 e0       	ldi	r31, 0x04	; 4
  b0:	e2 e0       	ldi	r30, 0x02	; 2
  b2:	71 e0       	ldi	r23, 0x01	; 1
    /* Replace with your application code */
	DDRA = 0;	PINA = -1;
	DDRC = -1;	PORTC = 0;
    while (1) 
    {
		char fuel = ~(PINA | 0xF0);
  b4:	80 b1       	in	r24, 0x00	; 0
  b6:	80 6f       	ori	r24, 0xF0	; 240
  b8:	80 95       	com	r24
		PORTB = ((fuel < 5) << 6) | ((fuel > 0) << 5) | ((fuel > 2) << 4) | ((fuel > 4) << 3) | ((fuel > 6) << 2) | ((fuel > 9) << 1) | (fuel > 12);
  ba:	85 30       	cpi	r24, 0x05	; 5
  bc:	10 f0       	brcs	.+4      	; 0xc2 <main+0x24>
  be:	95 2f       	mov	r25, r21
  c0:	01 c0       	rjmp	.+2      	; 0xc4 <main+0x26>
  c2:	90 e4       	ldi	r25, 0x40	; 64
  c4:	88 23       	and	r24, r24
  c6:	59 f0       	breq	.+22     	; 0xde <main+0x40>
  c8:	90 62       	ori	r25, 0x20	; 32
  ca:	83 30       	cpi	r24, 0x03	; 3
  cc:	10 f4       	brcc	.+4      	; 0xd2 <main+0x34>
  ce:	25 2f       	mov	r18, r21
  d0:	01 c0       	rjmp	.+2      	; 0xd4 <main+0x36>
  d2:	2a 2f       	mov	r18, r26
  d4:	92 2b       	or	r25, r18
  d6:	85 30       	cpi	r24, 0x05	; 5
  d8:	20 f4       	brcc	.+8      	; 0xe2 <main+0x44>
  da:	25 2f       	mov	r18, r21
  dc:	03 c0       	rjmp	.+6      	; 0xe4 <main+0x46>
  de:	25 2f       	mov	r18, r21
  e0:	01 c0       	rjmp	.+2      	; 0xe4 <main+0x46>
  e2:	2b 2f       	mov	r18, r27
  e4:	87 30       	cpi	r24, 0x07	; 7
  e6:	10 f4       	brcc	.+4      	; 0xec <main+0x4e>
  e8:	45 2f       	mov	r20, r21
  ea:	01 c0       	rjmp	.+2      	; 0xee <main+0x50>
  ec:	4f 2f       	mov	r20, r31
  ee:	8a 30       	cpi	r24, 0x0A	; 10
  f0:	10 f4       	brcc	.+4      	; 0xf6 <main+0x58>
  f2:	35 2f       	mov	r19, r21
  f4:	01 c0       	rjmp	.+2      	; 0xf8 <main+0x5a>
  f6:	3e 2f       	mov	r19, r30
  f8:	67 2f       	mov	r22, r23
  fa:	8d 30       	cpi	r24, 0x0D	; 13
  fc:	08 f4       	brcc	.+2      	; 0x100 <main+0x62>
  fe:	65 2f       	mov	r22, r21
 100:	96 2b       	or	r25, r22
 102:	92 2b       	or	r25, r18
 104:	94 2b       	or	r25, r20
 106:	93 2b       	or	r25, r19
 108:	95 b9       	out	0x05, r25	; 5
    }
 10a:	d4 cf       	rjmp	.-88     	; 0xb4 <main+0x16>

0000010c <_exit>:
 10c:	f8 94       	cli

0000010e <__stop_program>:
 10e:	ff cf       	rjmp	.-2      	; 0x10e <__stop_program>
