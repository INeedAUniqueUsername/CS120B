
achen115_project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000054  00800100  000029c2  00002a56  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000029c2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000031f  00800154  00800154  00002aaa  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002aaa  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002adc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001f0  00000000  00000000  00002b1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c2e  00000000  00000000  00002d0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000adb  00000000  00000000  0000493a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001678  00000000  00000000  00005415  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000810  00000000  00000000  00006a90  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000085c  00000000  00000000  000072a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000011b8  00000000  00000000  00007afc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001e0  00000000  00000000  00008cb4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	43 c1       	rjmp	.+646    	; 0x288 <__ctors_end>
       2:	00 00       	nop
       4:	60 c1       	rjmp	.+704    	; 0x2c6 <__bad_interrupt>
       6:	00 00       	nop
       8:	5e c1       	rjmp	.+700    	; 0x2c6 <__bad_interrupt>
       a:	00 00       	nop
       c:	5c c1       	rjmp	.+696    	; 0x2c6 <__bad_interrupt>
       e:	00 00       	nop
      10:	5a c1       	rjmp	.+692    	; 0x2c6 <__bad_interrupt>
      12:	00 00       	nop
      14:	58 c1       	rjmp	.+688    	; 0x2c6 <__bad_interrupt>
      16:	00 00       	nop
      18:	56 c1       	rjmp	.+684    	; 0x2c6 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	54 c1       	rjmp	.+680    	; 0x2c6 <__bad_interrupt>
      1e:	00 00       	nop
      20:	52 c1       	rjmp	.+676    	; 0x2c6 <__bad_interrupt>
      22:	00 00       	nop
      24:	50 c1       	rjmp	.+672    	; 0x2c6 <__bad_interrupt>
      26:	00 00       	nop
      28:	4e c1       	rjmp	.+668    	; 0x2c6 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4c c1       	rjmp	.+664    	; 0x2c6 <__bad_interrupt>
      2e:	00 00       	nop
      30:	4a c1       	rjmp	.+660    	; 0x2c6 <__bad_interrupt>
      32:	00 00       	nop
      34:	44 c5       	rjmp	.+2696   	; 0xabe <__vector_13>
      36:	00 00       	nop
      38:	46 c1       	rjmp	.+652    	; 0x2c6 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	44 c1       	rjmp	.+648    	; 0x2c6 <__bad_interrupt>
      3e:	00 00       	nop
      40:	42 c1       	rjmp	.+644    	; 0x2c6 <__bad_interrupt>
      42:	00 00       	nop
      44:	40 c1       	rjmp	.+640    	; 0x2c6 <__bad_interrupt>
      46:	00 00       	nop
      48:	3e c1       	rjmp	.+636    	; 0x2c6 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3c c1       	rjmp	.+632    	; 0x2c6 <__bad_interrupt>
      4e:	00 00       	nop
      50:	3a c1       	rjmp	.+628    	; 0x2c6 <__bad_interrupt>
      52:	00 00       	nop
      54:	38 c1       	rjmp	.+624    	; 0x2c6 <__bad_interrupt>
      56:	00 00       	nop
      58:	36 c1       	rjmp	.+620    	; 0x2c6 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	34 c1       	rjmp	.+616    	; 0x2c6 <__bad_interrupt>
      5e:	00 00       	nop
      60:	32 c1       	rjmp	.+612    	; 0x2c6 <__bad_interrupt>
      62:	00 00       	nop
      64:	30 c1       	rjmp	.+608    	; 0x2c6 <__bad_interrupt>
      66:	00 00       	nop
      68:	2e c1       	rjmp	.+604    	; 0x2c6 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2c c1       	rjmp	.+600    	; 0x2c6 <__bad_interrupt>
      6e:	00 00       	nop
      70:	2a c1       	rjmp	.+596    	; 0x2c6 <__bad_interrupt>
      72:	00 00       	nop
      74:	28 c1       	rjmp	.+592    	; 0x2c6 <__bad_interrupt>
      76:	00 00       	nop
      78:	26 c1       	rjmp	.+588    	; 0x2c6 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	24 c1       	rjmp	.+584    	; 0x2c6 <__bad_interrupt>
      7e:	00 00       	nop
      80:	22 c1       	rjmp	.+580    	; 0x2c6 <__bad_interrupt>
      82:	00 00       	nop
      84:	20 c1       	rjmp	.+576    	; 0x2c6 <__bad_interrupt>
      86:	00 00       	nop
      88:	1e c1       	rjmp	.+572    	; 0x2c6 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	3a 0e       	add	r3, r26
      8e:	40 0e       	add	r4, r16
      90:	49 0e       	add	r4, r25
      92:	43 0e       	add	r4, r19
      94:	49 0e       	add	r4, r25
      96:	49 0e       	add	r4, r25
      98:	49 0e       	add	r4, r25
      9a:	e3 0f       	add	r30, r19
      9c:	e9 0f       	add	r30, r25
      9e:	ef 0f       	add	r30, r31
      a0:	f5 0f       	add	r31, r21
      a2:	fe 0f       	add	r31, r30
      a4:	06 10       	cpse	r0, r6
      a6:	0c 10       	cpse	r0, r12

000000a8 <CHARSET>:
      a8:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
      b8:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
      c8:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
      d8:	1c 00 14 08 3e 08 14 08 08 3e 08 08 00 50 30 00     ....>....>...P0.
      e8:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
      f8:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
     108:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
     118:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
     128:	29 1e 00 36 36 00 00 00 56 36 00 00 08 14 22 41     )..66...V6...."A
     138:	00 14 14 14 14 14 00 41 22 14 08 02 01 51 09 06     .......A"....Q..
     148:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
     158:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
     168:	09 09 01 3e 41 49 49 7a 7f 08 08 08 7f 00 41 7f     ...>AIIz......A.
     178:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
     188:	40 7f 02 0c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
     198:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
     1a8:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
     1b8:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 07 08 70     @ .?@8@?c...c..p
     1c8:	08 07 61 51 49 45 43 00 7f 41 41 00 02 04 08 10     ..aQIEC..AA.....
     1d8:	20 00 41 41 7f 00 04 02 01 02 04 40 40 40 40 40      .AA.......@@@@@
     1e8:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
     1f8:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
     208:	09 01 02 0c 52 52 52 3e 7f 08 04 04 78 00 44 7d     ....RRR>....x.D}
     218:	40 00 20 40 44 3d 00 7f 10 28 44 00 00 41 7f 40     @. @D=...(D..A.@
     228:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
     238:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
     248:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
     258:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
     268:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
     278:	00 00 41 36 08 00 10 08 08 10 08 00 00 00 00 00     ..A6............

00000288 <__ctors_end>:
     288:	11 24       	eor	r1, r1
     28a:	1f be       	out	0x3f, r1	; 63
     28c:	cf ef       	ldi	r28, 0xFF	; 255
     28e:	d0 e4       	ldi	r29, 0x40	; 64
     290:	de bf       	out	0x3e, r29	; 62
     292:	cd bf       	out	0x3d, r28	; 61

00000294 <__do_copy_data>:
     294:	11 e0       	ldi	r17, 0x01	; 1
     296:	a0 e0       	ldi	r26, 0x00	; 0
     298:	b1 e0       	ldi	r27, 0x01	; 1
     29a:	e2 ec       	ldi	r30, 0xC2	; 194
     29c:	f9 e2       	ldi	r31, 0x29	; 41
     29e:	00 e0       	ldi	r16, 0x00	; 0
     2a0:	0b bf       	out	0x3b, r16	; 59
     2a2:	02 c0       	rjmp	.+4      	; 0x2a8 <__do_copy_data+0x14>
     2a4:	07 90       	elpm	r0, Z+
     2a6:	0d 92       	st	X+, r0
     2a8:	a4 35       	cpi	r26, 0x54	; 84
     2aa:	b1 07       	cpc	r27, r17
     2ac:	d9 f7       	brne	.-10     	; 0x2a4 <__do_copy_data+0x10>

000002ae <__do_clear_bss>:
     2ae:	24 e0       	ldi	r18, 0x04	; 4
     2b0:	a4 e5       	ldi	r26, 0x54	; 84
     2b2:	b1 e0       	ldi	r27, 0x01	; 1
     2b4:	01 c0       	rjmp	.+2      	; 0x2b8 <.do_clear_bss_start>

000002b6 <.do_clear_bss_loop>:
     2b6:	1d 92       	st	X+, r1

000002b8 <.do_clear_bss_start>:
     2b8:	a3 37       	cpi	r26, 0x73	; 115
     2ba:	b2 07       	cpc	r27, r18
     2bc:	e1 f7       	brne	.-8      	; 0x2b6 <.do_clear_bss_loop>
     2be:	0e 94 c2 12 	call	0x2584	; 0x2584 <main>
     2c2:	0c 94 df 14 	jmp	0x29be	; 0x29be <_exit>

000002c6 <__bad_interrupt>:
     2c6:	9c ce       	rjmp	.-712    	; 0x0 <__vectors>

000002c8 <write>:
		Point p = getTile(t, i);
		if(inBoundsPoint(g, &p)) {
			g->tiles[p.x][p.y] = 0;
		}
	}
}
     2c8:	1f 93       	push	r17
     2ca:	cf 93       	push	r28
     2cc:	df 93       	push	r29
     2ce:	00 d0       	rcall	.+0      	; 0x2d0 <write+0x8>
     2d0:	cd b7       	in	r28, 0x3d	; 61
     2d2:	de b7       	in	r29, 0x3e	; 62
     2d4:	89 83       	std	Y+1, r24	; 0x01
     2d6:	6a 83       	std	Y+2, r22	; 0x02
     2d8:	82 e2       	ldi	r24, 0x22	; 34
     2da:	90 e0       	ldi	r25, 0x00	; 0
     2dc:	22 e2       	ldi	r18, 0x22	; 34
     2de:	30 e0       	ldi	r19, 0x00	; 0
     2e0:	f9 01       	movw	r30, r18
     2e2:	20 81       	ld	r18, Z
     2e4:	2d 7f       	andi	r18, 0xFD	; 253
     2e6:	fc 01       	movw	r30, r24
     2e8:	20 83       	st	Z, r18
     2ea:	8a 81       	ldd	r24, Y+2	; 0x02
     2ec:	88 23       	and	r24, r24
     2ee:	51 f0       	breq	.+20     	; 0x304 <write+0x3c>
     2f0:	82 e2       	ldi	r24, 0x22	; 34
     2f2:	90 e0       	ldi	r25, 0x00	; 0
     2f4:	22 e2       	ldi	r18, 0x22	; 34
     2f6:	30 e0       	ldi	r19, 0x00	; 0
     2f8:	f9 01       	movw	r30, r18
     2fa:	20 81       	ld	r18, Z
     2fc:	28 60       	ori	r18, 0x08	; 8
     2fe:	fc 01       	movw	r30, r24
     300:	20 83       	st	Z, r18
     302:	09 c0       	rjmp	.+18     	; 0x316 <write+0x4e>
     304:	82 e2       	ldi	r24, 0x22	; 34
     306:	90 e0       	ldi	r25, 0x00	; 0
     308:	22 e2       	ldi	r18, 0x22	; 34
     30a:	30 e0       	ldi	r19, 0x00	; 0
     30c:	f9 01       	movw	r30, r18
     30e:	20 81       	ld	r18, Z
     310:	27 7f       	andi	r18, 0xF7	; 247
     312:	fc 01       	movw	r30, r24
     314:	20 83       	st	Z, r18
     316:	10 e0       	ldi	r17, 0x00	; 0
     318:	3c c0       	rjmp	.+120    	; 0x392 <write+0xca>
     31a:	89 81       	ldd	r24, Y+1	; 0x01
     31c:	88 2f       	mov	r24, r24
     31e:	90 e0       	ldi	r25, 0x00	; 0
     320:	21 2f       	mov	r18, r17
     322:	30 e0       	ldi	r19, 0x00	; 0
     324:	47 e0       	ldi	r20, 0x07	; 7
     326:	50 e0       	ldi	r21, 0x00	; 0
     328:	ba 01       	movw	r22, r20
     32a:	62 1b       	sub	r22, r18
     32c:	73 0b       	sbc	r23, r19
     32e:	9b 01       	movw	r18, r22
     330:	02 c0       	rjmp	.+4      	; 0x336 <write+0x6e>
     332:	95 95       	asr	r25
     334:	87 95       	ror	r24
     336:	2a 95       	dec	r18
     338:	e2 f7       	brpl	.-8      	; 0x332 <write+0x6a>
     33a:	81 70       	andi	r24, 0x01	; 1
     33c:	99 27       	eor	r25, r25
     33e:	89 2b       	or	r24, r25
     340:	51 f0       	breq	.+20     	; 0x356 <write+0x8e>
     342:	82 e2       	ldi	r24, 0x22	; 34
     344:	90 e0       	ldi	r25, 0x00	; 0
     346:	22 e2       	ldi	r18, 0x22	; 34
     348:	30 e0       	ldi	r19, 0x00	; 0
     34a:	f9 01       	movw	r30, r18
     34c:	20 81       	ld	r18, Z
     34e:	20 61       	ori	r18, 0x10	; 16
     350:	fc 01       	movw	r30, r24
     352:	20 83       	st	Z, r18
     354:	09 c0       	rjmp	.+18     	; 0x368 <write+0xa0>
     356:	82 e2       	ldi	r24, 0x22	; 34
     358:	90 e0       	ldi	r25, 0x00	; 0
     35a:	22 e2       	ldi	r18, 0x22	; 34
     35c:	30 e0       	ldi	r19, 0x00	; 0
     35e:	f9 01       	movw	r30, r18
     360:	20 81       	ld	r18, Z
     362:	2f 7e       	andi	r18, 0xEF	; 239
     364:	fc 01       	movw	r30, r24
     366:	20 83       	st	Z, r18
     368:	82 e2       	ldi	r24, 0x22	; 34
     36a:	90 e0       	ldi	r25, 0x00	; 0
     36c:	22 e2       	ldi	r18, 0x22	; 34
     36e:	30 e0       	ldi	r19, 0x00	; 0
     370:	f9 01       	movw	r30, r18
     372:	20 81       	ld	r18, Z
     374:	20 62       	ori	r18, 0x20	; 32
     376:	fc 01       	movw	r30, r24
     378:	20 83       	st	Z, r18
     37a:	82 e2       	ldi	r24, 0x22	; 34
     37c:	90 e0       	ldi	r25, 0x00	; 0
     37e:	22 e2       	ldi	r18, 0x22	; 34
     380:	30 e0       	ldi	r19, 0x00	; 0
     382:	f9 01       	movw	r30, r18
     384:	20 81       	ld	r18, Z
     386:	2f 7d       	andi	r18, 0xDF	; 223
     388:	fc 01       	movw	r30, r24
     38a:	20 83       	st	Z, r18
     38c:	81 2f       	mov	r24, r17
     38e:	11 e0       	ldi	r17, 0x01	; 1
     390:	18 0f       	add	r17, r24
     392:	18 30       	cpi	r17, 0x08	; 8
     394:	10 f2       	brcs	.-124    	; 0x31a <write+0x52>
     396:	82 e2       	ldi	r24, 0x22	; 34
     398:	90 e0       	ldi	r25, 0x00	; 0
     39a:	22 e2       	ldi	r18, 0x22	; 34
     39c:	30 e0       	ldi	r19, 0x00	; 0
     39e:	f9 01       	movw	r30, r18
     3a0:	20 81       	ld	r18, Z
     3a2:	22 60       	ori	r18, 0x02	; 2
     3a4:	fc 01       	movw	r30, r24
     3a6:	20 83       	st	Z, r18
     3a8:	00 00       	nop
     3aa:	0f 90       	pop	r0
     3ac:	0f 90       	pop	r0
     3ae:	df 91       	pop	r29
     3b0:	cf 91       	pop	r28
     3b2:	1f 91       	pop	r17
     3b4:	08 95       	ret

000003b6 <write_cmd>:
     3b6:	cf 93       	push	r28
     3b8:	df 93       	push	r29
     3ba:	1f 92       	push	r1
     3bc:	cd b7       	in	r28, 0x3d	; 61
     3be:	de b7       	in	r29, 0x3e	; 62
     3c0:	89 83       	std	Y+1, r24	; 0x01
     3c2:	60 e0       	ldi	r22, 0x00	; 0
     3c4:	89 81       	ldd	r24, Y+1	; 0x01
     3c6:	80 df       	rcall	.-256    	; 0x2c8 <write>
     3c8:	00 00       	nop
     3ca:	0f 90       	pop	r0
     3cc:	df 91       	pop	r29
     3ce:	cf 91       	pop	r28
     3d0:	08 95       	ret

000003d2 <write_data>:
     3d2:	cf 93       	push	r28
     3d4:	df 93       	push	r29
     3d6:	1f 92       	push	r1
     3d8:	cd b7       	in	r28, 0x3d	; 61
     3da:	de b7       	in	r29, 0x3e	; 62
     3dc:	89 83       	std	Y+1, r24	; 0x01
     3de:	61 e0       	ldi	r22, 0x01	; 1
     3e0:	89 81       	ldd	r24, Y+1	; 0x01
     3e2:	72 df       	rcall	.-284    	; 0x2c8 <write>
     3e4:	00 00       	nop
     3e6:	0f 90       	pop	r0
     3e8:	df 91       	pop	r29
     3ea:	cf 91       	pop	r28
     3ec:	08 95       	ret

000003ee <nokia_lcd_init>:
     3ee:	0f 93       	push	r16
     3f0:	1f 93       	push	r17
     3f2:	cf 93       	push	r28
     3f4:	df 93       	push	r29
     3f6:	cd b7       	in	r28, 0x3d	; 61
     3f8:	de b7       	in	r29, 0x3e	; 62
     3fa:	6c 97       	sbiw	r28, 0x1c	; 28
     3fc:	0f b6       	in	r0, 0x3f	; 63
     3fe:	f8 94       	cli
     400:	de bf       	out	0x3e, r29	; 62
     402:	0f be       	out	0x3f, r0	; 63
     404:	cd bf       	out	0x3d, r28	; 61
     406:	81 e2       	ldi	r24, 0x21	; 33
     408:	90 e0       	ldi	r25, 0x00	; 0
     40a:	21 e2       	ldi	r18, 0x21	; 33
     40c:	30 e0       	ldi	r19, 0x00	; 0
     40e:	f9 01       	movw	r30, r18
     410:	20 81       	ld	r18, Z
     412:	22 60       	ori	r18, 0x02	; 2
     414:	fc 01       	movw	r30, r24
     416:	20 83       	st	Z, r18
     418:	81 e2       	ldi	r24, 0x21	; 33
     41a:	90 e0       	ldi	r25, 0x00	; 0
     41c:	21 e2       	ldi	r18, 0x21	; 33
     41e:	30 e0       	ldi	r19, 0x00	; 0
     420:	f9 01       	movw	r30, r18
     422:	20 81       	ld	r18, Z
     424:	24 60       	ori	r18, 0x04	; 4
     426:	fc 01       	movw	r30, r24
     428:	20 83       	st	Z, r18
     42a:	81 e2       	ldi	r24, 0x21	; 33
     42c:	90 e0       	ldi	r25, 0x00	; 0
     42e:	21 e2       	ldi	r18, 0x21	; 33
     430:	30 e0       	ldi	r19, 0x00	; 0
     432:	f9 01       	movw	r30, r18
     434:	20 81       	ld	r18, Z
     436:	28 60       	ori	r18, 0x08	; 8
     438:	fc 01       	movw	r30, r24
     43a:	20 83       	st	Z, r18
     43c:	81 e2       	ldi	r24, 0x21	; 33
     43e:	90 e0       	ldi	r25, 0x00	; 0
     440:	21 e2       	ldi	r18, 0x21	; 33
     442:	30 e0       	ldi	r19, 0x00	; 0
     444:	f9 01       	movw	r30, r18
     446:	20 81       	ld	r18, Z
     448:	20 61       	ori	r18, 0x10	; 16
     44a:	fc 01       	movw	r30, r24
     44c:	20 83       	st	Z, r18
     44e:	81 e2       	ldi	r24, 0x21	; 33
     450:	90 e0       	ldi	r25, 0x00	; 0
     452:	21 e2       	ldi	r18, 0x21	; 33
     454:	30 e0       	ldi	r19, 0x00	; 0
     456:	f9 01       	movw	r30, r18
     458:	20 81       	ld	r18, Z
     45a:	20 62       	ori	r18, 0x20	; 32
     45c:	fc 01       	movw	r30, r24
     45e:	20 83       	st	Z, r18
     460:	82 e2       	ldi	r24, 0x22	; 34
     462:	90 e0       	ldi	r25, 0x00	; 0
     464:	22 e2       	ldi	r18, 0x22	; 34
     466:	30 e0       	ldi	r19, 0x00	; 0
     468:	f9 01       	movw	r30, r18
     46a:	20 81       	ld	r18, Z
     46c:	24 60       	ori	r18, 0x04	; 4
     46e:	fc 01       	movw	r30, r24
     470:	20 83       	st	Z, r18
     472:	82 e2       	ldi	r24, 0x22	; 34
     474:	90 e0       	ldi	r25, 0x00	; 0
     476:	22 e2       	ldi	r18, 0x22	; 34
     478:	30 e0       	ldi	r19, 0x00	; 0
     47a:	f9 01       	movw	r30, r18
     47c:	20 81       	ld	r18, Z
     47e:	22 60       	ori	r18, 0x02	; 2
     480:	fc 01       	movw	r30, r24
     482:	20 83       	st	Z, r18
     484:	80 e0       	ldi	r24, 0x00	; 0
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	a0 e2       	ldi	r26, 0x20	; 32
     48a:	b1 e4       	ldi	r27, 0x41	; 65
     48c:	89 83       	std	Y+1, r24	; 0x01
     48e:	9a 83       	std	Y+2, r25	; 0x02
     490:	ab 83       	std	Y+3, r26	; 0x03
     492:	bc 83       	std	Y+4, r27	; 0x04
     494:	20 e0       	ldi	r18, 0x00	; 0
     496:	30 e0       	ldi	r19, 0x00	; 0
     498:	4a e7       	ldi	r20, 0x7A	; 122
     49a:	53 e4       	ldi	r21, 0x43	; 67
     49c:	69 81       	ldd	r22, Y+1	; 0x01
     49e:	7a 81       	ldd	r23, Y+2	; 0x02
     4a0:	8b 81       	ldd	r24, Y+3	; 0x03
     4a2:	9c 81       	ldd	r25, Y+4	; 0x04
     4a4:	0e 94 66 13 	call	0x26cc	; 0x26cc <__mulsf3>
     4a8:	dc 01       	movw	r26, r24
     4aa:	cb 01       	movw	r24, r22
     4ac:	8b 8b       	std	Y+19, r24	; 0x13
     4ae:	9c 8b       	std	Y+20, r25	; 0x14
     4b0:	ad 8b       	std	Y+21, r26	; 0x15
     4b2:	be 8b       	std	Y+22, r27	; 0x16
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	30 e0       	ldi	r19, 0x00	; 0
     4b8:	40 e8       	ldi	r20, 0x80	; 128
     4ba:	5f e3       	ldi	r21, 0x3F	; 63
     4bc:	6b 89       	ldd	r22, Y+19	; 0x13
     4be:	7c 89       	ldd	r23, Y+20	; 0x14
     4c0:	8d 89       	ldd	r24, Y+21	; 0x15
     4c2:	9e 89       	ldd	r25, Y+22	; 0x16
     4c4:	0e 94 e5 12 	call	0x25ca	; 0x25ca <__cmpsf2>
     4c8:	88 23       	and	r24, r24
     4ca:	2c f4       	brge	.+10     	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
     4cc:	81 e0       	ldi	r24, 0x01	; 1
     4ce:	90 e0       	ldi	r25, 0x00	; 0
     4d0:	98 8f       	std	Y+24, r25	; 0x18
     4d2:	8f 8b       	std	Y+23, r24	; 0x17
     4d4:	3f c0       	rjmp	.+126    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
     4d6:	20 e0       	ldi	r18, 0x00	; 0
     4d8:	3f ef       	ldi	r19, 0xFF	; 255
     4da:	4f e7       	ldi	r20, 0x7F	; 127
     4dc:	57 e4       	ldi	r21, 0x47	; 71
     4de:	6b 89       	ldd	r22, Y+19	; 0x13
     4e0:	7c 89       	ldd	r23, Y+20	; 0x14
     4e2:	8d 89       	ldd	r24, Y+21	; 0x15
     4e4:	9e 89       	ldd	r25, Y+22	; 0x16
     4e6:	0e 94 62 13 	call	0x26c4	; 0x26c4 <__gesf2>
     4ea:	18 16       	cp	r1, r24
     4ec:	4c f5       	brge	.+82     	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
     4ee:	20 e0       	ldi	r18, 0x00	; 0
     4f0:	30 e0       	ldi	r19, 0x00	; 0
     4f2:	40 e2       	ldi	r20, 0x20	; 32
     4f4:	51 e4       	ldi	r21, 0x41	; 65
     4f6:	69 81       	ldd	r22, Y+1	; 0x01
     4f8:	7a 81       	ldd	r23, Y+2	; 0x02
     4fa:	8b 81       	ldd	r24, Y+3	; 0x03
     4fc:	9c 81       	ldd	r25, Y+4	; 0x04
     4fe:	0e 94 66 13 	call	0x26cc	; 0x26cc <__mulsf3>
     502:	dc 01       	movw	r26, r24
     504:	cb 01       	movw	r24, r22
     506:	bc 01       	movw	r22, r24
     508:	cd 01       	movw	r24, r26
     50a:	0e 94 e9 12 	call	0x25d2	; 0x25d2 <__fixunssfsi>
     50e:	dc 01       	movw	r26, r24
     510:	cb 01       	movw	r24, r22
     512:	98 8f       	std	Y+24, r25	; 0x18
     514:	8f 8b       	std	Y+23, r24	; 0x17
     516:	0f c0       	rjmp	.+30     	; 0x536 <__LOCK_REGION_LENGTH__+0x136>
     518:	89 e1       	ldi	r24, 0x19	; 25
     51a:	90 e0       	ldi	r25, 0x00	; 0
     51c:	9a 8f       	std	Y+26, r25	; 0x1a
     51e:	89 8f       	std	Y+25, r24	; 0x19
     520:	89 8d       	ldd	r24, Y+25	; 0x19
     522:	9a 8d       	ldd	r25, Y+26	; 0x1a
     524:	01 97       	sbiw	r24, 0x01	; 1
     526:	f1 f7       	brne	.-4      	; 0x524 <__LOCK_REGION_LENGTH__+0x124>
     528:	9a 8f       	std	Y+26, r25	; 0x1a
     52a:	89 8f       	std	Y+25, r24	; 0x19
     52c:	8f 89       	ldd	r24, Y+23	; 0x17
     52e:	98 8d       	ldd	r25, Y+24	; 0x18
     530:	01 97       	sbiw	r24, 0x01	; 1
     532:	98 8f       	std	Y+24, r25	; 0x18
     534:	8f 8b       	std	Y+23, r24	; 0x17
     536:	8f 89       	ldd	r24, Y+23	; 0x17
     538:	98 8d       	ldd	r25, Y+24	; 0x18
     53a:	89 2b       	or	r24, r25
     53c:	69 f7       	brne	.-38     	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
     53e:	14 c0       	rjmp	.+40     	; 0x568 <__LOCK_REGION_LENGTH__+0x168>
     540:	6b 89       	ldd	r22, Y+19	; 0x13
     542:	7c 89       	ldd	r23, Y+20	; 0x14
     544:	8d 89       	ldd	r24, Y+21	; 0x15
     546:	9e 89       	ldd	r25, Y+22	; 0x16
     548:	0e 94 e9 12 	call	0x25d2	; 0x25d2 <__fixunssfsi>
     54c:	dc 01       	movw	r26, r24
     54e:	cb 01       	movw	r24, r22
     550:	98 8f       	std	Y+24, r25	; 0x18
     552:	8f 8b       	std	Y+23, r24	; 0x17
     554:	8f 89       	ldd	r24, Y+23	; 0x17
     556:	98 8d       	ldd	r25, Y+24	; 0x18
     558:	9c 8f       	std	Y+28, r25	; 0x1c
     55a:	8b 8f       	std	Y+27, r24	; 0x1b
     55c:	8b 8d       	ldd	r24, Y+27	; 0x1b
     55e:	9c 8d       	ldd	r25, Y+28	; 0x1c
     560:	01 97       	sbiw	r24, 0x01	; 1
     562:	f1 f7       	brne	.-4      	; 0x560 <__LOCK_REGION_LENGTH__+0x160>
     564:	9c 8f       	std	Y+28, r25	; 0x1c
     566:	8b 8f       	std	Y+27, r24	; 0x1b
     568:	82 e2       	ldi	r24, 0x22	; 34
     56a:	90 e0       	ldi	r25, 0x00	; 0
     56c:	22 e2       	ldi	r18, 0x22	; 34
     56e:	30 e0       	ldi	r19, 0x00	; 0
     570:	f9 01       	movw	r30, r18
     572:	20 81       	ld	r18, Z
     574:	2b 7f       	andi	r18, 0xFB	; 251
     576:	fc 01       	movw	r30, r24
     578:	20 83       	st	Z, r18
     57a:	80 e0       	ldi	r24, 0x00	; 0
     57c:	90 e0       	ldi	r25, 0x00	; 0
     57e:	ac e8       	ldi	r26, 0x8C	; 140
     580:	b2 e4       	ldi	r27, 0x42	; 66
     582:	8d 83       	std	Y+5, r24	; 0x05
     584:	9e 83       	std	Y+6, r25	; 0x06
     586:	af 83       	std	Y+7, r26	; 0x07
     588:	b8 87       	std	Y+8, r27	; 0x08
     58a:	20 e0       	ldi	r18, 0x00	; 0
     58c:	30 e0       	ldi	r19, 0x00	; 0
     58e:	4a e7       	ldi	r20, 0x7A	; 122
     590:	53 e4       	ldi	r21, 0x43	; 67
     592:	6d 81       	ldd	r22, Y+5	; 0x05
     594:	7e 81       	ldd	r23, Y+6	; 0x06
     596:	8f 81       	ldd	r24, Y+7	; 0x07
     598:	98 85       	ldd	r25, Y+8	; 0x08
     59a:	0e 94 66 13 	call	0x26cc	; 0x26cc <__mulsf3>
     59e:	dc 01       	movw	r26, r24
     5a0:	cb 01       	movw	r24, r22
     5a2:	89 87       	std	Y+9, r24	; 0x09
     5a4:	9a 87       	std	Y+10, r25	; 0x0a
     5a6:	ab 87       	std	Y+11, r26	; 0x0b
     5a8:	bc 87       	std	Y+12, r27	; 0x0c
     5aa:	20 e0       	ldi	r18, 0x00	; 0
     5ac:	30 e0       	ldi	r19, 0x00	; 0
     5ae:	40 e8       	ldi	r20, 0x80	; 128
     5b0:	5f e3       	ldi	r21, 0x3F	; 63
     5b2:	69 85       	ldd	r22, Y+9	; 0x09
     5b4:	7a 85       	ldd	r23, Y+10	; 0x0a
     5b6:	8b 85       	ldd	r24, Y+11	; 0x0b
     5b8:	9c 85       	ldd	r25, Y+12	; 0x0c
     5ba:	0e 94 e5 12 	call	0x25ca	; 0x25ca <__cmpsf2>
     5be:	88 23       	and	r24, r24
     5c0:	2c f4       	brge	.+10     	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
     5c2:	81 e0       	ldi	r24, 0x01	; 1
     5c4:	90 e0       	ldi	r25, 0x00	; 0
     5c6:	9e 87       	std	Y+14, r25	; 0x0e
     5c8:	8d 87       	std	Y+13, r24	; 0x0d
     5ca:	3f c0       	rjmp	.+126    	; 0x64a <__LOCK_REGION_LENGTH__+0x24a>
     5cc:	20 e0       	ldi	r18, 0x00	; 0
     5ce:	3f ef       	ldi	r19, 0xFF	; 255
     5d0:	4f e7       	ldi	r20, 0x7F	; 127
     5d2:	57 e4       	ldi	r21, 0x47	; 71
     5d4:	69 85       	ldd	r22, Y+9	; 0x09
     5d6:	7a 85       	ldd	r23, Y+10	; 0x0a
     5d8:	8b 85       	ldd	r24, Y+11	; 0x0b
     5da:	9c 85       	ldd	r25, Y+12	; 0x0c
     5dc:	0e 94 62 13 	call	0x26c4	; 0x26c4 <__gesf2>
     5e0:	18 16       	cp	r1, r24
     5e2:	4c f5       	brge	.+82     	; 0x636 <__LOCK_REGION_LENGTH__+0x236>
     5e4:	20 e0       	ldi	r18, 0x00	; 0
     5e6:	30 e0       	ldi	r19, 0x00	; 0
     5e8:	40 e2       	ldi	r20, 0x20	; 32
     5ea:	51 e4       	ldi	r21, 0x41	; 65
     5ec:	6d 81       	ldd	r22, Y+5	; 0x05
     5ee:	7e 81       	ldd	r23, Y+6	; 0x06
     5f0:	8f 81       	ldd	r24, Y+7	; 0x07
     5f2:	98 85       	ldd	r25, Y+8	; 0x08
     5f4:	0e 94 66 13 	call	0x26cc	; 0x26cc <__mulsf3>
     5f8:	dc 01       	movw	r26, r24
     5fa:	cb 01       	movw	r24, r22
     5fc:	bc 01       	movw	r22, r24
     5fe:	cd 01       	movw	r24, r26
     600:	0e 94 e9 12 	call	0x25d2	; 0x25d2 <__fixunssfsi>
     604:	dc 01       	movw	r26, r24
     606:	cb 01       	movw	r24, r22
     608:	9e 87       	std	Y+14, r25	; 0x0e
     60a:	8d 87       	std	Y+13, r24	; 0x0d
     60c:	0f c0       	rjmp	.+30     	; 0x62c <__LOCK_REGION_LENGTH__+0x22c>
     60e:	89 e1       	ldi	r24, 0x19	; 25
     610:	90 e0       	ldi	r25, 0x00	; 0
     612:	98 8b       	std	Y+16, r25	; 0x10
     614:	8f 87       	std	Y+15, r24	; 0x0f
     616:	8f 85       	ldd	r24, Y+15	; 0x0f
     618:	98 89       	ldd	r25, Y+16	; 0x10
     61a:	01 97       	sbiw	r24, 0x01	; 1
     61c:	f1 f7       	brne	.-4      	; 0x61a <__LOCK_REGION_LENGTH__+0x21a>
     61e:	98 8b       	std	Y+16, r25	; 0x10
     620:	8f 87       	std	Y+15, r24	; 0x0f
     622:	8d 85       	ldd	r24, Y+13	; 0x0d
     624:	9e 85       	ldd	r25, Y+14	; 0x0e
     626:	01 97       	sbiw	r24, 0x01	; 1
     628:	9e 87       	std	Y+14, r25	; 0x0e
     62a:	8d 87       	std	Y+13, r24	; 0x0d
     62c:	8d 85       	ldd	r24, Y+13	; 0x0d
     62e:	9e 85       	ldd	r25, Y+14	; 0x0e
     630:	89 2b       	or	r24, r25
     632:	69 f7       	brne	.-38     	; 0x60e <__LOCK_REGION_LENGTH__+0x20e>
     634:	14 c0       	rjmp	.+40     	; 0x65e <__LOCK_REGION_LENGTH__+0x25e>
     636:	69 85       	ldd	r22, Y+9	; 0x09
     638:	7a 85       	ldd	r23, Y+10	; 0x0a
     63a:	8b 85       	ldd	r24, Y+11	; 0x0b
     63c:	9c 85       	ldd	r25, Y+12	; 0x0c
     63e:	0e 94 e9 12 	call	0x25d2	; 0x25d2 <__fixunssfsi>
     642:	dc 01       	movw	r26, r24
     644:	cb 01       	movw	r24, r22
     646:	9e 87       	std	Y+14, r25	; 0x0e
     648:	8d 87       	std	Y+13, r24	; 0x0d
     64a:	8d 85       	ldd	r24, Y+13	; 0x0d
     64c:	9e 85       	ldd	r25, Y+14	; 0x0e
     64e:	9a 8b       	std	Y+18, r25	; 0x12
     650:	89 8b       	std	Y+17, r24	; 0x11
     652:	89 89       	ldd	r24, Y+17	; 0x11
     654:	9a 89       	ldd	r25, Y+18	; 0x12
     656:	01 97       	sbiw	r24, 0x01	; 1
     658:	f1 f7       	brne	.-4      	; 0x656 <__LOCK_REGION_LENGTH__+0x256>
     65a:	9a 8b       	std	Y+18, r25	; 0x12
     65c:	89 8b       	std	Y+17, r24	; 0x11
     65e:	82 e2       	ldi	r24, 0x22	; 34
     660:	90 e0       	ldi	r25, 0x00	; 0
     662:	22 e2       	ldi	r18, 0x22	; 34
     664:	30 e0       	ldi	r19, 0x00	; 0
     666:	f9 01       	movw	r30, r18
     668:	20 81       	ld	r18, Z
     66a:	24 60       	ori	r18, 0x04	; 4
     66c:	fc 01       	movw	r30, r24
     66e:	20 83       	st	Z, r18
     670:	82 e2       	ldi	r24, 0x22	; 34
     672:	90 e0       	ldi	r25, 0x00	; 0
     674:	22 e2       	ldi	r18, 0x22	; 34
     676:	30 e0       	ldi	r19, 0x00	; 0
     678:	f9 01       	movw	r30, r18
     67a:	20 81       	ld	r18, Z
     67c:	2d 7f       	andi	r18, 0xFD	; 253
     67e:	fc 01       	movw	r30, r24
     680:	20 83       	st	Z, r18
     682:	81 e2       	ldi	r24, 0x21	; 33
     684:	98 de       	rcall	.-720    	; 0x3b6 <write_cmd>
     686:	83 e1       	ldi	r24, 0x13	; 19
     688:	96 de       	rcall	.-724    	; 0x3b6 <write_cmd>
     68a:	86 e0       	ldi	r24, 0x06	; 6
     68c:	94 de       	rcall	.-728    	; 0x3b6 <write_cmd>
     68e:	82 ec       	ldi	r24, 0xC2	; 194
     690:	92 de       	rcall	.-732    	; 0x3b6 <write_cmd>
     692:	80 e2       	ldi	r24, 0x20	; 32
     694:	90 de       	rcall	.-736    	; 0x3b6 <write_cmd>
     696:	89 e0       	ldi	r24, 0x09	; 9
     698:	8e de       	rcall	.-740    	; 0x3b6 <write_cmd>
     69a:	80 e8       	ldi	r24, 0x80	; 128
     69c:	8c de       	rcall	.-744    	; 0x3b6 <write_cmd>
     69e:	80 e4       	ldi	r24, 0x40	; 64
     6a0:	8a de       	rcall	.-748    	; 0x3b6 <write_cmd>
     6a2:	00 e0       	ldi	r16, 0x00	; 0
     6a4:	10 e0       	ldi	r17, 0x00	; 0
     6a6:	04 c0       	rjmp	.+8      	; 0x6b0 <__LOCK_REGION_LENGTH__+0x2b0>
     6a8:	80 e0       	ldi	r24, 0x00	; 0
     6aa:	93 de       	rcall	.-730    	; 0x3d2 <write_data>
     6ac:	0f 5f       	subi	r16, 0xFF	; 255
     6ae:	1f 4f       	sbci	r17, 0xFF	; 255
     6b0:	08 3f       	cpi	r16, 0xF8	; 248
     6b2:	f1 e0       	ldi	r31, 0x01	; 1
     6b4:	1f 07       	cpc	r17, r31
     6b6:	c0 f3       	brcs	.-16     	; 0x6a8 <__LOCK_REGION_LENGTH__+0x2a8>
     6b8:	88 e0       	ldi	r24, 0x08	; 8
     6ba:	7d de       	rcall	.-774    	; 0x3b6 <write_cmd>
     6bc:	8c e0       	ldi	r24, 0x0C	; 12
     6be:	7b de       	rcall	.-778    	; 0x3b6 <write_cmd>
     6c0:	00 00       	nop
     6c2:	6c 96       	adiw	r28, 0x1c	; 28
     6c4:	0f b6       	in	r0, 0x3f	; 63
     6c6:	f8 94       	cli
     6c8:	de bf       	out	0x3e, r29	; 62
     6ca:	0f be       	out	0x3f, r0	; 63
     6cc:	cd bf       	out	0x3d, r28	; 61
     6ce:	df 91       	pop	r29
     6d0:	cf 91       	pop	r28
     6d2:	1f 91       	pop	r17
     6d4:	0f 91       	pop	r16
     6d6:	08 95       	ret

000006d8 <nokia_lcd_clear>:
     6d8:	0f 93       	push	r16
     6da:	1f 93       	push	r17
     6dc:	cf 93       	push	r28
     6de:	df 93       	push	r29
     6e0:	cd b7       	in	r28, 0x3d	; 61
     6e2:	de b7       	in	r29, 0x3e	; 62
     6e4:	80 e8       	ldi	r24, 0x80	; 128
     6e6:	67 de       	rcall	.-818    	; 0x3b6 <write_cmd>
     6e8:	80 e4       	ldi	r24, 0x40	; 64
     6ea:	65 de       	rcall	.-822    	; 0x3b6 <write_cmd>
     6ec:	10 92 4c 03 	sts	0x034C, r1	; 0x80034c <__data_end+0x1f8>
     6f0:	10 92 4d 03 	sts	0x034D, r1	; 0x80034d <__data_end+0x1f9>
     6f4:	00 e0       	ldi	r16, 0x00	; 0
     6f6:	10 e0       	ldi	r17, 0x00	; 0
     6f8:	07 c0       	rjmp	.+14     	; 0x708 <nokia_lcd_clear+0x30>
     6fa:	c8 01       	movw	r24, r16
     6fc:	8c 5a       	subi	r24, 0xAC	; 172
     6fe:	9e 4f       	sbci	r25, 0xFE	; 254
     700:	fc 01       	movw	r30, r24
     702:	10 82       	st	Z, r1
     704:	0f 5f       	subi	r16, 0xFF	; 255
     706:	1f 4f       	sbci	r17, 0xFF	; 255
     708:	08 3f       	cpi	r16, 0xF8	; 248
     70a:	f1 e0       	ldi	r31, 0x01	; 1
     70c:	1f 07       	cpc	r17, r31
     70e:	a8 f3       	brcs	.-22     	; 0x6fa <nokia_lcd_clear+0x22>
     710:	00 00       	nop
     712:	df 91       	pop	r29
     714:	cf 91       	pop	r28
     716:	1f 91       	pop	r17
     718:	0f 91       	pop	r16
     71a:	08 95       	ret

0000071c <nokia_lcd_set_pixel>:
     71c:	cf 93       	push	r28
     71e:	df 93       	push	r29
     720:	00 d0       	rcall	.+0      	; 0x722 <nokia_lcd_set_pixel+0x6>
     722:	00 d0       	rcall	.+0      	; 0x724 <nokia_lcd_set_pixel+0x8>
     724:	1f 92       	push	r1
     726:	cd b7       	in	r28, 0x3d	; 61
     728:	de b7       	in	r29, 0x3e	; 62
     72a:	8b 83       	std	Y+3, r24	; 0x03
     72c:	6c 83       	std	Y+4, r22	; 0x04
     72e:	4d 83       	std	Y+5, r20	; 0x05
     730:	8c 81       	ldd	r24, Y+4	; 0x04
     732:	86 95       	lsr	r24
     734:	86 95       	lsr	r24
     736:	86 95       	lsr	r24
     738:	88 2f       	mov	r24, r24
     73a:	90 e0       	ldi	r25, 0x00	; 0
     73c:	44 e5       	ldi	r20, 0x54	; 84
     73e:	48 9f       	mul	r20, r24
     740:	90 01       	movw	r18, r0
     742:	49 9f       	mul	r20, r25
     744:	30 0d       	add	r19, r0
     746:	11 24       	eor	r1, r1
     748:	8b 81       	ldd	r24, Y+3	; 0x03
     74a:	88 2f       	mov	r24, r24
     74c:	90 e0       	ldi	r25, 0x00	; 0
     74e:	82 0f       	add	r24, r18
     750:	93 1f       	adc	r25, r19
     752:	8c 5a       	subi	r24, 0xAC	; 172
     754:	9e 4f       	sbci	r25, 0xFE	; 254
     756:	9a 83       	std	Y+2, r25	; 0x02
     758:	89 83       	std	Y+1, r24	; 0x01
     75a:	8d 81       	ldd	r24, Y+5	; 0x05
     75c:	88 23       	and	r24, r24
     75e:	c9 f0       	breq	.+50     	; 0x792 <nokia_lcd_set_pixel+0x76>
     760:	89 81       	ldd	r24, Y+1	; 0x01
     762:	9a 81       	ldd	r25, Y+2	; 0x02
     764:	fc 01       	movw	r30, r24
     766:	80 81       	ld	r24, Z
     768:	48 2f       	mov	r20, r24
     76a:	8c 81       	ldd	r24, Y+4	; 0x04
     76c:	88 2f       	mov	r24, r24
     76e:	90 e0       	ldi	r25, 0x00	; 0
     770:	9c 01       	movw	r18, r24
     772:	27 70       	andi	r18, 0x07	; 7
     774:	33 27       	eor	r19, r19
     776:	81 e0       	ldi	r24, 0x01	; 1
     778:	90 e0       	ldi	r25, 0x00	; 0
     77a:	02 c0       	rjmp	.+4      	; 0x780 <nokia_lcd_set_pixel+0x64>
     77c:	88 0f       	add	r24, r24
     77e:	99 1f       	adc	r25, r25
     780:	2a 95       	dec	r18
     782:	e2 f7       	brpl	.-8      	; 0x77c <nokia_lcd_set_pixel+0x60>
     784:	84 2b       	or	r24, r20
     786:	28 2f       	mov	r18, r24
     788:	89 81       	ldd	r24, Y+1	; 0x01
     78a:	9a 81       	ldd	r25, Y+2	; 0x02
     78c:	fc 01       	movw	r30, r24
     78e:	20 83       	st	Z, r18
     790:	19 c0       	rjmp	.+50     	; 0x7c4 <nokia_lcd_set_pixel+0xa8>
     792:	89 81       	ldd	r24, Y+1	; 0x01
     794:	9a 81       	ldd	r25, Y+2	; 0x02
     796:	fc 01       	movw	r30, r24
     798:	80 81       	ld	r24, Z
     79a:	48 2f       	mov	r20, r24
     79c:	8c 81       	ldd	r24, Y+4	; 0x04
     79e:	88 2f       	mov	r24, r24
     7a0:	90 e0       	ldi	r25, 0x00	; 0
     7a2:	9c 01       	movw	r18, r24
     7a4:	27 70       	andi	r18, 0x07	; 7
     7a6:	33 27       	eor	r19, r19
     7a8:	81 e0       	ldi	r24, 0x01	; 1
     7aa:	90 e0       	ldi	r25, 0x00	; 0
     7ac:	02 c0       	rjmp	.+4      	; 0x7b2 <nokia_lcd_set_pixel+0x96>
     7ae:	88 0f       	add	r24, r24
     7b0:	99 1f       	adc	r25, r25
     7b2:	2a 95       	dec	r18
     7b4:	e2 f7       	brpl	.-8      	; 0x7ae <nokia_lcd_set_pixel+0x92>
     7b6:	80 95       	com	r24
     7b8:	84 23       	and	r24, r20
     7ba:	28 2f       	mov	r18, r24
     7bc:	89 81       	ldd	r24, Y+1	; 0x01
     7be:	9a 81       	ldd	r25, Y+2	; 0x02
     7c0:	fc 01       	movw	r30, r24
     7c2:	20 83       	st	Z, r18
     7c4:	00 00       	nop
     7c6:	0f 90       	pop	r0
     7c8:	0f 90       	pop	r0
     7ca:	0f 90       	pop	r0
     7cc:	0f 90       	pop	r0
     7ce:	0f 90       	pop	r0
     7d0:	df 91       	pop	r29
     7d2:	cf 91       	pop	r28
     7d4:	08 95       	ret

000007d6 <nokia_lcd_write_char>:
     7d6:	0f 93       	push	r16
     7d8:	1f 93       	push	r17
     7da:	cf 93       	push	r28
     7dc:	df 93       	push	r29
     7de:	00 d0       	rcall	.+0      	; 0x7e0 <nokia_lcd_write_char+0xa>
     7e0:	00 d0       	rcall	.+0      	; 0x7e2 <nokia_lcd_write_char+0xc>
     7e2:	1f 92       	push	r1
     7e4:	cd b7       	in	r28, 0x3d	; 61
     7e6:	de b7       	in	r29, 0x3e	; 62
     7e8:	8c 83       	std	Y+4, r24	; 0x04
     7ea:	6d 83       	std	Y+5, r22	; 0x05
     7ec:	10 e0       	ldi	r17, 0x00	; 0
     7ee:	63 c0       	rjmp	.+198    	; 0x8b6 <nokia_lcd_write_char+0xe0>
     7f0:	00 e0       	ldi	r16, 0x00	; 0
     7f2:	4c c0       	rjmp	.+152    	; 0x88c <nokia_lcd_write_char+0xb6>
     7f4:	8c 81       	ldd	r24, Y+4	; 0x04
     7f6:	88 2f       	mov	r24, r24
     7f8:	90 e0       	ldi	r25, 0x00	; 0
     7fa:	9c 01       	movw	r18, r24
     7fc:	20 52       	subi	r18, 0x20	; 32
     7fe:	31 09       	sbc	r19, r1
     800:	9d 81       	ldd	r25, Y+5	; 0x05
     802:	81 2f       	mov	r24, r17
     804:	69 2f       	mov	r22, r25
     806:	0e 94 f1 13 	call	0x27e2	; 0x27e2 <__udivmodqi4>
     80a:	48 2f       	mov	r20, r24
     80c:	50 e0       	ldi	r21, 0x00	; 0
     80e:	c9 01       	movw	r24, r18
     810:	88 0f       	add	r24, r24
     812:	99 1f       	adc	r25, r25
     814:	88 0f       	add	r24, r24
     816:	99 1f       	adc	r25, r25
     818:	82 0f       	add	r24, r18
     81a:	93 1f       	adc	r25, r19
     81c:	84 0f       	add	r24, r20
     81e:	95 1f       	adc	r25, r21
     820:	88 55       	subi	r24, 0x58	; 88
     822:	9f 4f       	sbci	r25, 0xFF	; 255
     824:	9a 83       	std	Y+2, r25	; 0x02
     826:	89 83       	std	Y+1, r24	; 0x01
     828:	89 81       	ldd	r24, Y+1	; 0x01
     82a:	9a 81       	ldd	r25, Y+2	; 0x02
     82c:	fc 01       	movw	r30, r24
     82e:	84 91       	lpm	r24, Z
     830:	8b 83       	std	Y+3, r24	; 0x03
     832:	8b 81       	ldd	r24, Y+3	; 0x03
     834:	28 2f       	mov	r18, r24
     836:	30 e0       	ldi	r19, 0x00	; 0
     838:	9d 81       	ldd	r25, Y+5	; 0x05
     83a:	80 2f       	mov	r24, r16
     83c:	69 2f       	mov	r22, r25
     83e:	0e 94 f1 13 	call	0x27e2	; 0x27e2 <__udivmodqi4>
     842:	88 2f       	mov	r24, r24
     844:	90 e0       	ldi	r25, 0x00	; 0
     846:	a9 01       	movw	r20, r18
     848:	02 c0       	rjmp	.+4      	; 0x84e <nokia_lcd_write_char+0x78>
     84a:	55 95       	asr	r21
     84c:	47 95       	ror	r20
     84e:	8a 95       	dec	r24
     850:	e2 f7       	brpl	.-8      	; 0x84a <nokia_lcd_write_char+0x74>
     852:	ca 01       	movw	r24, r20
     854:	81 70       	andi	r24, 0x01	; 1
     856:	99 27       	eor	r25, r25
     858:	89 2b       	or	r24, r25
     85a:	59 f0       	breq	.+22     	; 0x872 <nokia_lcd_write_char+0x9c>
     85c:	80 91 4d 03 	lds	r24, 0x034D	; 0x80034d <__data_end+0x1f9>
     860:	98 2f       	mov	r25, r24
     862:	90 0f       	add	r25, r16
     864:	80 91 4c 03 	lds	r24, 0x034C	; 0x80034c <__data_end+0x1f8>
     868:	81 0f       	add	r24, r17
     86a:	41 e0       	ldi	r20, 0x01	; 1
     86c:	69 2f       	mov	r22, r25
     86e:	56 df       	rcall	.-340    	; 0x71c <nokia_lcd_set_pixel>
     870:	0a c0       	rjmp	.+20     	; 0x886 <nokia_lcd_write_char+0xb0>
     872:	80 91 4d 03 	lds	r24, 0x034D	; 0x80034d <__data_end+0x1f9>
     876:	98 2f       	mov	r25, r24
     878:	90 0f       	add	r25, r16
     87a:	80 91 4c 03 	lds	r24, 0x034C	; 0x80034c <__data_end+0x1f8>
     87e:	81 0f       	add	r24, r17
     880:	40 e0       	ldi	r20, 0x00	; 0
     882:	69 2f       	mov	r22, r25
     884:	4b df       	rcall	.-362    	; 0x71c <nokia_lcd_set_pixel>
     886:	80 2f       	mov	r24, r16
     888:	01 e0       	ldi	r16, 0x01	; 1
     88a:	08 0f       	add	r16, r24
     88c:	40 2f       	mov	r20, r16
     88e:	50 e0       	ldi	r21, 0x00	; 0
     890:	8d 81       	ldd	r24, Y+5	; 0x05
     892:	28 2f       	mov	r18, r24
     894:	30 e0       	ldi	r19, 0x00	; 0
     896:	c9 01       	movw	r24, r18
     898:	88 0f       	add	r24, r24
     89a:	99 1f       	adc	r25, r25
     89c:	88 0f       	add	r24, r24
     89e:	99 1f       	adc	r25, r25
     8a0:	88 0f       	add	r24, r24
     8a2:	99 1f       	adc	r25, r25
     8a4:	82 1b       	sub	r24, r18
     8a6:	93 0b       	sbc	r25, r19
     8a8:	48 17       	cp	r20, r24
     8aa:	59 07       	cpc	r21, r25
     8ac:	0c f4       	brge	.+2      	; 0x8b0 <nokia_lcd_write_char+0xda>
     8ae:	a2 cf       	rjmp	.-188    	; 0x7f4 <nokia_lcd_write_char+0x1e>
     8b0:	81 2f       	mov	r24, r17
     8b2:	11 e0       	ldi	r17, 0x01	; 1
     8b4:	18 0f       	add	r17, r24
     8b6:	41 2f       	mov	r20, r17
     8b8:	50 e0       	ldi	r21, 0x00	; 0
     8ba:	8d 81       	ldd	r24, Y+5	; 0x05
     8bc:	28 2f       	mov	r18, r24
     8be:	30 e0       	ldi	r19, 0x00	; 0
     8c0:	c9 01       	movw	r24, r18
     8c2:	88 0f       	add	r24, r24
     8c4:	99 1f       	adc	r25, r25
     8c6:	88 0f       	add	r24, r24
     8c8:	99 1f       	adc	r25, r25
     8ca:	82 0f       	add	r24, r18
     8cc:	93 1f       	adc	r25, r19
     8ce:	48 17       	cp	r20, r24
     8d0:	59 07       	cpc	r21, r25
     8d2:	0c f4       	brge	.+2      	; 0x8d6 <nokia_lcd_write_char+0x100>
     8d4:	8d cf       	rjmp	.-230    	; 0x7f0 <nokia_lcd_write_char+0x1a>
     8d6:	20 91 4c 03 	lds	r18, 0x034C	; 0x80034c <__data_end+0x1f8>
     8da:	9d 81       	ldd	r25, Y+5	; 0x05
     8dc:	89 2f       	mov	r24, r25
     8de:	88 0f       	add	r24, r24
     8e0:	88 0f       	add	r24, r24
     8e2:	89 0f       	add	r24, r25
     8e4:	82 0f       	add	r24, r18
     8e6:	8f 5f       	subi	r24, 0xFF	; 255
     8e8:	80 93 4c 03 	sts	0x034C, r24	; 0x80034c <__data_end+0x1f8>
     8ec:	80 91 4c 03 	lds	r24, 0x034C	; 0x80034c <__data_end+0x1f8>
     8f0:	84 35       	cpi	r24, 0x54	; 84
     8f2:	70 f0       	brcs	.+28     	; 0x910 <nokia_lcd_write_char+0x13a>
     8f4:	10 92 4c 03 	sts	0x034C, r1	; 0x80034c <__data_end+0x1f8>
     8f8:	20 91 4d 03 	lds	r18, 0x034D	; 0x80034d <__data_end+0x1f9>
     8fc:	9d 81       	ldd	r25, Y+5	; 0x05
     8fe:	89 2f       	mov	r24, r25
     900:	88 0f       	add	r24, r24
     902:	88 0f       	add	r24, r24
     904:	88 0f       	add	r24, r24
     906:	89 1b       	sub	r24, r25
     908:	82 0f       	add	r24, r18
     90a:	8f 5f       	subi	r24, 0xFF	; 255
     90c:	80 93 4d 03 	sts	0x034D, r24	; 0x80034d <__data_end+0x1f9>
     910:	80 91 4d 03 	lds	r24, 0x034D	; 0x80034d <__data_end+0x1f9>
     914:	80 33       	cpi	r24, 0x30	; 48
     916:	20 f0       	brcs	.+8      	; 0x920 <nokia_lcd_write_char+0x14a>
     918:	10 92 4c 03 	sts	0x034C, r1	; 0x80034c <__data_end+0x1f8>
     91c:	10 92 4d 03 	sts	0x034D, r1	; 0x80034d <__data_end+0x1f9>
     920:	00 00       	nop
     922:	0f 90       	pop	r0
     924:	0f 90       	pop	r0
     926:	0f 90       	pop	r0
     928:	0f 90       	pop	r0
     92a:	0f 90       	pop	r0
     92c:	df 91       	pop	r29
     92e:	cf 91       	pop	r28
     930:	1f 91       	pop	r17
     932:	0f 91       	pop	r16
     934:	08 95       	ret

00000936 <nokia_lcd_write_string>:
     936:	cf 93       	push	r28
     938:	df 93       	push	r29
     93a:	00 d0       	rcall	.+0      	; 0x93c <nokia_lcd_write_string+0x6>
     93c:	1f 92       	push	r1
     93e:	cd b7       	in	r28, 0x3d	; 61
     940:	de b7       	in	r29, 0x3e	; 62
     942:	9a 83       	std	Y+2, r25	; 0x02
     944:	89 83       	std	Y+1, r24	; 0x01
     946:	6b 83       	std	Y+3, r22	; 0x03
     948:	0b c0       	rjmp	.+22     	; 0x960 <nokia_lcd_write_string+0x2a>
     94a:	89 81       	ldd	r24, Y+1	; 0x01
     94c:	9a 81       	ldd	r25, Y+2	; 0x02
     94e:	9c 01       	movw	r18, r24
     950:	2f 5f       	subi	r18, 0xFF	; 255
     952:	3f 4f       	sbci	r19, 0xFF	; 255
     954:	3a 83       	std	Y+2, r19	; 0x02
     956:	29 83       	std	Y+1, r18	; 0x01
     958:	fc 01       	movw	r30, r24
     95a:	80 81       	ld	r24, Z
     95c:	6b 81       	ldd	r22, Y+3	; 0x03
     95e:	3b df       	rcall	.-394    	; 0x7d6 <nokia_lcd_write_char>
     960:	89 81       	ldd	r24, Y+1	; 0x01
     962:	9a 81       	ldd	r25, Y+2	; 0x02
     964:	fc 01       	movw	r30, r24
     966:	80 81       	ld	r24, Z
     968:	88 23       	and	r24, r24
     96a:	79 f7       	brne	.-34     	; 0x94a <nokia_lcd_write_string+0x14>
     96c:	00 00       	nop
     96e:	0f 90       	pop	r0
     970:	0f 90       	pop	r0
     972:	0f 90       	pop	r0
     974:	df 91       	pop	r29
     976:	cf 91       	pop	r28
     978:	08 95       	ret

0000097a <nokia_lcd_set_cursor>:
     97a:	cf 93       	push	r28
     97c:	df 93       	push	r29
     97e:	00 d0       	rcall	.+0      	; 0x980 <nokia_lcd_set_cursor+0x6>
     980:	cd b7       	in	r28, 0x3d	; 61
     982:	de b7       	in	r29, 0x3e	; 62
     984:	89 83       	std	Y+1, r24	; 0x01
     986:	6a 83       	std	Y+2, r22	; 0x02
     988:	89 81       	ldd	r24, Y+1	; 0x01
     98a:	80 93 4c 03 	sts	0x034C, r24	; 0x80034c <__data_end+0x1f8>
     98e:	8a 81       	ldd	r24, Y+2	; 0x02
     990:	80 93 4d 03 	sts	0x034D, r24	; 0x80034d <__data_end+0x1f9>
     994:	00 00       	nop
     996:	0f 90       	pop	r0
     998:	0f 90       	pop	r0
     99a:	df 91       	pop	r29
     99c:	cf 91       	pop	r28
     99e:	08 95       	ret

000009a0 <nokia_lcd_render>:
     9a0:	0f 93       	push	r16
     9a2:	1f 93       	push	r17
     9a4:	cf 93       	push	r28
     9a6:	df 93       	push	r29
     9a8:	cd b7       	in	r28, 0x3d	; 61
     9aa:	de b7       	in	r29, 0x3e	; 62
     9ac:	80 e8       	ldi	r24, 0x80	; 128
     9ae:	03 dd       	rcall	.-1530   	; 0x3b6 <write_cmd>
     9b0:	80 e4       	ldi	r24, 0x40	; 64
     9b2:	01 dd       	rcall	.-1534   	; 0x3b6 <write_cmd>
     9b4:	00 e0       	ldi	r16, 0x00	; 0
     9b6:	10 e0       	ldi	r17, 0x00	; 0
     9b8:	08 c0       	rjmp	.+16     	; 0x9ca <nokia_lcd_render+0x2a>
     9ba:	c8 01       	movw	r24, r16
     9bc:	8c 5a       	subi	r24, 0xAC	; 172
     9be:	9e 4f       	sbci	r25, 0xFE	; 254
     9c0:	fc 01       	movw	r30, r24
     9c2:	80 81       	ld	r24, Z
     9c4:	06 dd       	rcall	.-1524   	; 0x3d2 <write_data>
     9c6:	0f 5f       	subi	r16, 0xFF	; 255
     9c8:	1f 4f       	sbci	r17, 0xFF	; 255
     9ca:	08 3f       	cpi	r16, 0xF8	; 248
     9cc:	f1 e0       	ldi	r31, 0x01	; 1
     9ce:	1f 07       	cpc	r17, r31
     9d0:	a0 f3       	brcs	.-24     	; 0x9ba <nokia_lcd_render+0x1a>
     9d2:	00 00       	nop
     9d4:	df 91       	pop	r29
     9d6:	cf 91       	pop	r28
     9d8:	1f 91       	pop	r17
     9da:	0f 91       	pop	r16
     9dc:	08 95       	ret

000009de <TimerSet>:
     9de:	cf 93       	push	r28
     9e0:	df 93       	push	r29
     9e2:	00 d0       	rcall	.+0      	; 0x9e4 <TimerSet+0x6>
     9e4:	00 d0       	rcall	.+0      	; 0x9e6 <TimerSet+0x8>
     9e6:	cd b7       	in	r28, 0x3d	; 61
     9e8:	de b7       	in	r29, 0x3e	; 62
     9ea:	69 83       	std	Y+1, r22	; 0x01
     9ec:	7a 83       	std	Y+2, r23	; 0x02
     9ee:	8b 83       	std	Y+3, r24	; 0x03
     9f0:	9c 83       	std	Y+4, r25	; 0x04
     9f2:	89 81       	ldd	r24, Y+1	; 0x01
     9f4:	9a 81       	ldd	r25, Y+2	; 0x02
     9f6:	ab 81       	ldd	r26, Y+3	; 0x03
     9f8:	bc 81       	ldd	r27, Y+4	; 0x04
     9fa:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <_avr_timer_M>
     9fe:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <_avr_timer_M+0x1>
     a02:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <_avr_timer_M+0x2>
     a06:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <_avr_timer_M+0x3>
     a0a:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <_avr_timer_M>
     a0e:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <_avr_timer_M+0x1>
     a12:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <_avr_timer_M+0x2>
     a16:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <_avr_timer_M+0x3>
     a1a:	80 93 4f 03 	sts	0x034F, r24	; 0x80034f <_avr_timer_cntcurr>
     a1e:	90 93 50 03 	sts	0x0350, r25	; 0x800350 <_avr_timer_cntcurr+0x1>
     a22:	a0 93 51 03 	sts	0x0351, r26	; 0x800351 <_avr_timer_cntcurr+0x2>
     a26:	b0 93 52 03 	sts	0x0352, r27	; 0x800352 <_avr_timer_cntcurr+0x3>
     a2a:	00 00       	nop
     a2c:	0f 90       	pop	r0
     a2e:	0f 90       	pop	r0
     a30:	0f 90       	pop	r0
     a32:	0f 90       	pop	r0
     a34:	df 91       	pop	r29
     a36:	cf 91       	pop	r28
     a38:	08 95       	ret

00000a3a <TimerOn>:
     a3a:	cf 93       	push	r28
     a3c:	df 93       	push	r29
     a3e:	cd b7       	in	r28, 0x3d	; 61
     a40:	de b7       	in	r29, 0x3e	; 62
     a42:	81 e8       	ldi	r24, 0x81	; 129
     a44:	90 e0       	ldi	r25, 0x00	; 0
     a46:	2b e0       	ldi	r18, 0x0B	; 11
     a48:	fc 01       	movw	r30, r24
     a4a:	20 83       	st	Z, r18
     a4c:	88 e8       	ldi	r24, 0x88	; 136
     a4e:	90 e0       	ldi	r25, 0x00	; 0
     a50:	2d e7       	ldi	r18, 0x7D	; 125
     a52:	30 e0       	ldi	r19, 0x00	; 0
     a54:	fc 01       	movw	r30, r24
     a56:	31 83       	std	Z+1, r19	; 0x01
     a58:	20 83       	st	Z, r18
     a5a:	8f e6       	ldi	r24, 0x6F	; 111
     a5c:	90 e0       	ldi	r25, 0x00	; 0
     a5e:	22 e0       	ldi	r18, 0x02	; 2
     a60:	fc 01       	movw	r30, r24
     a62:	20 83       	st	Z, r18
     a64:	84 e8       	ldi	r24, 0x84	; 132
     a66:	90 e0       	ldi	r25, 0x00	; 0
     a68:	fc 01       	movw	r30, r24
     a6a:	11 82       	std	Z+1, r1	; 0x01
     a6c:	10 82       	st	Z, r1
     a6e:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <_avr_timer_M>
     a72:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <_avr_timer_M+0x1>
     a76:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <_avr_timer_M+0x2>
     a7a:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <_avr_timer_M+0x3>
     a7e:	80 93 4f 03 	sts	0x034F, r24	; 0x80034f <_avr_timer_cntcurr>
     a82:	90 93 50 03 	sts	0x0350, r25	; 0x800350 <_avr_timer_cntcurr+0x1>
     a86:	a0 93 51 03 	sts	0x0351, r26	; 0x800351 <_avr_timer_cntcurr+0x2>
     a8a:	b0 93 52 03 	sts	0x0352, r27	; 0x800352 <_avr_timer_cntcurr+0x3>
     a8e:	8f e5       	ldi	r24, 0x5F	; 95
     a90:	90 e0       	ldi	r25, 0x00	; 0
     a92:	2f e5       	ldi	r18, 0x5F	; 95
     a94:	30 e0       	ldi	r19, 0x00	; 0
     a96:	f9 01       	movw	r30, r18
     a98:	20 81       	ld	r18, Z
     a9a:	20 68       	ori	r18, 0x80	; 128
     a9c:	fc 01       	movw	r30, r24
     a9e:	20 83       	st	Z, r18
     aa0:	00 00       	nop
     aa2:	df 91       	pop	r29
     aa4:	cf 91       	pop	r28
     aa6:	08 95       	ret

00000aa8 <TimerISR>:
     aa8:	cf 93       	push	r28
     aaa:	df 93       	push	r29
     aac:	cd b7       	in	r28, 0x3d	; 61
     aae:	de b7       	in	r29, 0x3e	; 62
     ab0:	81 e0       	ldi	r24, 0x01	; 1
     ab2:	80 93 4e 03 	sts	0x034E, r24	; 0x80034e <TimerFlag>
     ab6:	00 00       	nop
     ab8:	df 91       	pop	r29
     aba:	cf 91       	pop	r28
     abc:	08 95       	ret

00000abe <__vector_13>:
     abe:	1f 92       	push	r1
     ac0:	0f 92       	push	r0
     ac2:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     ac6:	0f 92       	push	r0
     ac8:	11 24       	eor	r1, r1
     aca:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
     ace:	0f 92       	push	r0
     ad0:	2f 93       	push	r18
     ad2:	3f 93       	push	r19
     ad4:	4f 93       	push	r20
     ad6:	5f 93       	push	r21
     ad8:	6f 93       	push	r22
     ada:	7f 93       	push	r23
     adc:	8f 93       	push	r24
     ade:	9f 93       	push	r25
     ae0:	af 93       	push	r26
     ae2:	bf 93       	push	r27
     ae4:	ef 93       	push	r30
     ae6:	ff 93       	push	r31
     ae8:	cf 93       	push	r28
     aea:	df 93       	push	r29
     aec:	cd b7       	in	r28, 0x3d	; 61
     aee:	de b7       	in	r29, 0x3e	; 62
     af0:	80 91 4f 03 	lds	r24, 0x034F	; 0x80034f <_avr_timer_cntcurr>
     af4:	90 91 50 03 	lds	r25, 0x0350	; 0x800350 <_avr_timer_cntcurr+0x1>
     af8:	a0 91 51 03 	lds	r26, 0x0351	; 0x800351 <_avr_timer_cntcurr+0x2>
     afc:	b0 91 52 03 	lds	r27, 0x0352	; 0x800352 <_avr_timer_cntcurr+0x3>
     b00:	01 97       	sbiw	r24, 0x01	; 1
     b02:	a1 09       	sbc	r26, r1
     b04:	b1 09       	sbc	r27, r1
     b06:	80 93 4f 03 	sts	0x034F, r24	; 0x80034f <_avr_timer_cntcurr>
     b0a:	90 93 50 03 	sts	0x0350, r25	; 0x800350 <_avr_timer_cntcurr+0x1>
     b0e:	a0 93 51 03 	sts	0x0351, r26	; 0x800351 <_avr_timer_cntcurr+0x2>
     b12:	b0 93 52 03 	sts	0x0352, r27	; 0x800352 <_avr_timer_cntcurr+0x3>
     b16:	80 91 4f 03 	lds	r24, 0x034F	; 0x80034f <_avr_timer_cntcurr>
     b1a:	90 91 50 03 	lds	r25, 0x0350	; 0x800350 <_avr_timer_cntcurr+0x1>
     b1e:	a0 91 51 03 	lds	r26, 0x0351	; 0x800351 <_avr_timer_cntcurr+0x2>
     b22:	b0 91 52 03 	lds	r27, 0x0352	; 0x800352 <_avr_timer_cntcurr+0x3>
     b26:	89 2b       	or	r24, r25
     b28:	8a 2b       	or	r24, r26
     b2a:	8b 2b       	or	r24, r27
     b2c:	89 f4       	brne	.+34     	; 0xb50 <__vector_13+0x92>
     b2e:	bc df       	rcall	.-136    	; 0xaa8 <TimerISR>
     b30:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <_avr_timer_M>
     b34:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <_avr_timer_M+0x1>
     b38:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <_avr_timer_M+0x2>
     b3c:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <_avr_timer_M+0x3>
     b40:	80 93 4f 03 	sts	0x034F, r24	; 0x80034f <_avr_timer_cntcurr>
     b44:	90 93 50 03 	sts	0x0350, r25	; 0x800350 <_avr_timer_cntcurr+0x1>
     b48:	a0 93 51 03 	sts	0x0351, r26	; 0x800351 <_avr_timer_cntcurr+0x2>
     b4c:	b0 93 52 03 	sts	0x0352, r27	; 0x800352 <_avr_timer_cntcurr+0x3>
     b50:	00 00       	nop
     b52:	df 91       	pop	r29
     b54:	cf 91       	pop	r28
     b56:	ff 91       	pop	r31
     b58:	ef 91       	pop	r30
     b5a:	bf 91       	pop	r27
     b5c:	af 91       	pop	r26
     b5e:	9f 91       	pop	r25
     b60:	8f 91       	pop	r24
     b62:	7f 91       	pop	r23
     b64:	6f 91       	pop	r22
     b66:	5f 91       	pop	r21
     b68:	4f 91       	pop	r20
     b6a:	3f 91       	pop	r19
     b6c:	2f 91       	pop	r18
     b6e:	0f 90       	pop	r0
     b70:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
     b74:	0f 90       	pop	r0
     b76:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     b7a:	0f 90       	pop	r0
     b7c:	1f 90       	pop	r1
     b7e:	18 95       	reti

00000b80 <store>:
     b80:	cf 93       	push	r28
     b82:	df 93       	push	r29
     b84:	00 d0       	rcall	.+0      	; 0xb86 <store+0x6>
     b86:	cd b7       	in	r28, 0x3d	; 61
     b88:	de b7       	in	r29, 0x3e	; 62
     b8a:	89 83       	std	Y+1, r24	; 0x01
     b8c:	6a 83       	std	Y+2, r22	; 0x02
     b8e:	00 00       	nop
     b90:	8f e3       	ldi	r24, 0x3F	; 63
     b92:	90 e0       	ldi	r25, 0x00	; 0
     b94:	fc 01       	movw	r30, r24
     b96:	80 81       	ld	r24, Z
     b98:	88 2f       	mov	r24, r24
     b9a:	90 e0       	ldi	r25, 0x00	; 0
     b9c:	84 70       	andi	r24, 0x04	; 4
     b9e:	99 27       	eor	r25, r25
     ba0:	89 2b       	or	r24, r25
     ba2:	b1 f7       	brne	.-20     	; 0xb90 <store+0x10>
     ba4:	81 e4       	ldi	r24, 0x41	; 65
     ba6:	90 e0       	ldi	r25, 0x00	; 0
     ba8:	29 81       	ldd	r18, Y+1	; 0x01
     baa:	22 2f       	mov	r18, r18
     bac:	30 e0       	ldi	r19, 0x00	; 0
     bae:	fc 01       	movw	r30, r24
     bb0:	31 83       	std	Z+1, r19	; 0x01
     bb2:	20 83       	st	Z, r18
     bb4:	80 e4       	ldi	r24, 0x40	; 64
     bb6:	90 e0       	ldi	r25, 0x00	; 0
     bb8:	2a 81       	ldd	r18, Y+2	; 0x02
     bba:	fc 01       	movw	r30, r24
     bbc:	20 83       	st	Z, r18
     bbe:	8f e3       	ldi	r24, 0x3F	; 63
     bc0:	90 e0       	ldi	r25, 0x00	; 0
     bc2:	2f e3       	ldi	r18, 0x3F	; 63
     bc4:	30 e0       	ldi	r19, 0x00	; 0
     bc6:	f9 01       	movw	r30, r18
     bc8:	20 81       	ld	r18, Z
     bca:	2f 70       	andi	r18, 0x0F	; 15
     bcc:	fc 01       	movw	r30, r24
     bce:	20 83       	st	Z, r18
     bd0:	8f e3       	ldi	r24, 0x3F	; 63
     bd2:	90 e0       	ldi	r25, 0x00	; 0
     bd4:	2f e3       	ldi	r18, 0x3F	; 63
     bd6:	30 e0       	ldi	r19, 0x00	; 0
     bd8:	f9 01       	movw	r30, r18
     bda:	20 81       	ld	r18, Z
     bdc:	24 60       	ori	r18, 0x04	; 4
     bde:	fc 01       	movw	r30, r24
     be0:	20 83       	st	Z, r18
     be2:	8f e3       	ldi	r24, 0x3F	; 63
     be4:	90 e0       	ldi	r25, 0x00	; 0
     be6:	2f e3       	ldi	r18, 0x3F	; 63
     be8:	30 e0       	ldi	r19, 0x00	; 0
     bea:	f9 01       	movw	r30, r18
     bec:	20 81       	ld	r18, Z
     bee:	22 60       	ori	r18, 0x02	; 2
     bf0:	fc 01       	movw	r30, r24
     bf2:	20 83       	st	Z, r18
     bf4:	00 00       	nop
     bf6:	0f 90       	pop	r0
     bf8:	0f 90       	pop	r0
     bfa:	df 91       	pop	r29
     bfc:	cf 91       	pop	r28
     bfe:	08 95       	ret

00000c00 <load>:
     c00:	cf 93       	push	r28
     c02:	df 93       	push	r29
     c04:	00 d0       	rcall	.+0      	; 0xc06 <load+0x6>
     c06:	cd b7       	in	r28, 0x3d	; 61
     c08:	de b7       	in	r29, 0x3e	; 62
     c0a:	9a 83       	std	Y+2, r25	; 0x02
     c0c:	89 83       	std	Y+1, r24	; 0x01
     c0e:	00 00       	nop
     c10:	8f e3       	ldi	r24, 0x3F	; 63
     c12:	90 e0       	ldi	r25, 0x00	; 0
     c14:	fc 01       	movw	r30, r24
     c16:	80 81       	ld	r24, Z
     c18:	88 2f       	mov	r24, r24
     c1a:	90 e0       	ldi	r25, 0x00	; 0
     c1c:	84 70       	andi	r24, 0x04	; 4
     c1e:	99 27       	eor	r25, r25
     c20:	89 2b       	or	r24, r25
     c22:	b1 f7       	brne	.-20     	; 0xc10 <load+0x10>
     c24:	81 e4       	ldi	r24, 0x41	; 65
     c26:	90 e0       	ldi	r25, 0x00	; 0
     c28:	29 81       	ldd	r18, Y+1	; 0x01
     c2a:	3a 81       	ldd	r19, Y+2	; 0x02
     c2c:	fc 01       	movw	r30, r24
     c2e:	31 83       	std	Z+1, r19	; 0x01
     c30:	20 83       	st	Z, r18
     c32:	8f e3       	ldi	r24, 0x3F	; 63
     c34:	90 e0       	ldi	r25, 0x00	; 0
     c36:	2f e3       	ldi	r18, 0x3F	; 63
     c38:	30 e0       	ldi	r19, 0x00	; 0
     c3a:	f9 01       	movw	r30, r18
     c3c:	20 81       	ld	r18, Z
     c3e:	21 60       	ori	r18, 0x01	; 1
     c40:	fc 01       	movw	r30, r24
     c42:	20 83       	st	Z, r18
     c44:	80 e4       	ldi	r24, 0x40	; 64
     c46:	90 e0       	ldi	r25, 0x00	; 0
     c48:	fc 01       	movw	r30, r24
     c4a:	80 81       	ld	r24, Z
     c4c:	0f 90       	pop	r0
     c4e:	0f 90       	pop	r0
     c50:	df 91       	pop	r29
     c52:	cf 91       	pop	r28
     c54:	08 95       	ret

00000c56 <add>:
     c56:	cf 93       	push	r28
     c58:	df 93       	push	r29
     c5a:	cd b7       	in	r28, 0x3d	; 61
     c5c:	de b7       	in	r29, 0x3e	; 62
     c5e:	28 97       	sbiw	r28, 0x08	; 8
     c60:	0f b6       	in	r0, 0x3f	; 63
     c62:	f8 94       	cli
     c64:	de bf       	out	0x3e, r29	; 62
     c66:	0f be       	out	0x3f, r0	; 63
     c68:	cd bf       	out	0x3d, r28	; 61
     c6a:	9e 83       	std	Y+6, r25	; 0x06
     c6c:	8d 83       	std	Y+5, r24	; 0x05
     c6e:	78 87       	std	Y+8, r23	; 0x08
     c70:	6f 83       	std	Y+7, r22	; 0x07
     c72:	8d 81       	ldd	r24, Y+5	; 0x05
     c74:	9e 81       	ldd	r25, Y+6	; 0x06
     c76:	fc 01       	movw	r30, r24
     c78:	20 81       	ld	r18, Z
     c7a:	31 81       	ldd	r19, Z+1	; 0x01
     c7c:	8f 81       	ldd	r24, Y+7	; 0x07
     c7e:	98 85       	ldd	r25, Y+8	; 0x08
     c80:	fc 01       	movw	r30, r24
     c82:	80 81       	ld	r24, Z
     c84:	91 81       	ldd	r25, Z+1	; 0x01
     c86:	82 0f       	add	r24, r18
     c88:	93 1f       	adc	r25, r19
     c8a:	9a 83       	std	Y+2, r25	; 0x02
     c8c:	89 83       	std	Y+1, r24	; 0x01
     c8e:	8d 81       	ldd	r24, Y+5	; 0x05
     c90:	9e 81       	ldd	r25, Y+6	; 0x06
     c92:	fc 01       	movw	r30, r24
     c94:	22 81       	ldd	r18, Z+2	; 0x02
     c96:	33 81       	ldd	r19, Z+3	; 0x03
     c98:	8f 81       	ldd	r24, Y+7	; 0x07
     c9a:	98 85       	ldd	r25, Y+8	; 0x08
     c9c:	fc 01       	movw	r30, r24
     c9e:	82 81       	ldd	r24, Z+2	; 0x02
     ca0:	93 81       	ldd	r25, Z+3	; 0x03
     ca2:	82 0f       	add	r24, r18
     ca4:	93 1f       	adc	r25, r19
     ca6:	9c 83       	std	Y+4, r25	; 0x04
     ca8:	8b 83       	std	Y+3, r24	; 0x03
     caa:	89 81       	ldd	r24, Y+1	; 0x01
     cac:	9a 81       	ldd	r25, Y+2	; 0x02
     cae:	ab 81       	ldd	r26, Y+3	; 0x03
     cb0:	bc 81       	ldd	r27, Y+4	; 0x04
     cb2:	bc 01       	movw	r22, r24
     cb4:	cd 01       	movw	r24, r26
     cb6:	28 96       	adiw	r28, 0x08	; 8
     cb8:	0f b6       	in	r0, 0x3f	; 63
     cba:	f8 94       	cli
     cbc:	de bf       	out	0x3e, r29	; 62
     cbe:	0f be       	out	0x3f, r0	; 63
     cc0:	cd bf       	out	0x3d, r28	; 61
     cc2:	df 91       	pop	r29
     cc4:	cf 91       	pop	r28
     cc6:	08 95       	ret

00000cc8 <pivotCCW>:
     cc8:	cf 93       	push	r28
     cca:	df 93       	push	r29
     ccc:	00 d0       	rcall	.+0      	; 0xcce <pivotCCW+0x6>
     cce:	00 d0       	rcall	.+0      	; 0xcd0 <pivotCCW+0x8>
     cd0:	cd b7       	in	r28, 0x3d	; 61
     cd2:	de b7       	in	r29, 0x3e	; 62
     cd4:	9c 83       	std	Y+4, r25	; 0x04
     cd6:	8b 83       	std	Y+3, r24	; 0x03
     cd8:	8b 81       	ldd	r24, Y+3	; 0x03
     cda:	9c 81       	ldd	r25, Y+4	; 0x04
     cdc:	fc 01       	movw	r30, r24
     cde:	80 81       	ld	r24, Z
     ce0:	91 81       	ldd	r25, Z+1	; 0x01
     ce2:	9a 83       	std	Y+2, r25	; 0x02
     ce4:	89 83       	std	Y+1, r24	; 0x01
     ce6:	8b 81       	ldd	r24, Y+3	; 0x03
     ce8:	9c 81       	ldd	r25, Y+4	; 0x04
     cea:	fc 01       	movw	r30, r24
     cec:	82 81       	ldd	r24, Z+2	; 0x02
     cee:	93 81       	ldd	r25, Z+3	; 0x03
     cf0:	22 27       	eor	r18, r18
     cf2:	33 27       	eor	r19, r19
     cf4:	28 1b       	sub	r18, r24
     cf6:	39 0b       	sbc	r19, r25
     cf8:	8b 81       	ldd	r24, Y+3	; 0x03
     cfa:	9c 81       	ldd	r25, Y+4	; 0x04
     cfc:	fc 01       	movw	r30, r24
     cfe:	31 83       	std	Z+1, r19	; 0x01
     d00:	20 83       	st	Z, r18
     d02:	8b 81       	ldd	r24, Y+3	; 0x03
     d04:	9c 81       	ldd	r25, Y+4	; 0x04
     d06:	29 81       	ldd	r18, Y+1	; 0x01
     d08:	3a 81       	ldd	r19, Y+2	; 0x02
     d0a:	fc 01       	movw	r30, r24
     d0c:	33 83       	std	Z+3, r19	; 0x03
     d0e:	22 83       	std	Z+2, r18	; 0x02
     d10:	00 00       	nop
     d12:	0f 90       	pop	r0
     d14:	0f 90       	pop	r0
     d16:	0f 90       	pop	r0
     d18:	0f 90       	pop	r0
     d1a:	df 91       	pop	r29
     d1c:	cf 91       	pop	r28
     d1e:	08 95       	ret

00000d20 <pivotCW>:
     d20:	cf 93       	push	r28
     d22:	df 93       	push	r29
     d24:	00 d0       	rcall	.+0      	; 0xd26 <pivotCW+0x6>
     d26:	00 d0       	rcall	.+0      	; 0xd28 <pivotCW+0x8>
     d28:	cd b7       	in	r28, 0x3d	; 61
     d2a:	de b7       	in	r29, 0x3e	; 62
     d2c:	9c 83       	std	Y+4, r25	; 0x04
     d2e:	8b 83       	std	Y+3, r24	; 0x03
     d30:	8b 81       	ldd	r24, Y+3	; 0x03
     d32:	9c 81       	ldd	r25, Y+4	; 0x04
     d34:	fc 01       	movw	r30, r24
     d36:	82 81       	ldd	r24, Z+2	; 0x02
     d38:	93 81       	ldd	r25, Z+3	; 0x03
     d3a:	9a 83       	std	Y+2, r25	; 0x02
     d3c:	89 83       	std	Y+1, r24	; 0x01
     d3e:	8b 81       	ldd	r24, Y+3	; 0x03
     d40:	9c 81       	ldd	r25, Y+4	; 0x04
     d42:	fc 01       	movw	r30, r24
     d44:	80 81       	ld	r24, Z
     d46:	91 81       	ldd	r25, Z+1	; 0x01
     d48:	22 27       	eor	r18, r18
     d4a:	33 27       	eor	r19, r19
     d4c:	28 1b       	sub	r18, r24
     d4e:	39 0b       	sbc	r19, r25
     d50:	8b 81       	ldd	r24, Y+3	; 0x03
     d52:	9c 81       	ldd	r25, Y+4	; 0x04
     d54:	fc 01       	movw	r30, r24
     d56:	33 83       	std	Z+3, r19	; 0x03
     d58:	22 83       	std	Z+2, r18	; 0x02
     d5a:	8b 81       	ldd	r24, Y+3	; 0x03
     d5c:	9c 81       	ldd	r25, Y+4	; 0x04
     d5e:	29 81       	ldd	r18, Y+1	; 0x01
     d60:	3a 81       	ldd	r19, Y+2	; 0x02
     d62:	fc 01       	movw	r30, r24
     d64:	31 83       	std	Z+1, r19	; 0x01
     d66:	20 83       	st	Z, r18
     d68:	00 00       	nop
     d6a:	0f 90       	pop	r0
     d6c:	0f 90       	pop	r0
     d6e:	0f 90       	pop	r0
     d70:	0f 90       	pop	r0
     d72:	df 91       	pop	r29
     d74:	cf 91       	pop	r28
     d76:	08 95       	ret

00000d78 <L>:
     d78:	cf 93       	push	r28
     d7a:	df 93       	push	r29
     d7c:	00 d0       	rcall	.+0      	; 0xd7e <L+0x6>
     d7e:	00 d0       	rcall	.+0      	; 0xd80 <L+0x8>
     d80:	00 d0       	rcall	.+0      	; 0xd82 <L+0xa>
     d82:	cd b7       	in	r28, 0x3d	; 61
     d84:	de b7       	in	r29, 0x3e	; 62
     d86:	9a 83       	std	Y+2, r25	; 0x02
     d88:	89 83       	std	Y+1, r24	; 0x01
     d8a:	4b 83       	std	Y+3, r20	; 0x03
     d8c:	5c 83       	std	Y+4, r21	; 0x04
     d8e:	6d 83       	std	Y+5, r22	; 0x05
     d90:	7e 83       	std	Y+6, r23	; 0x06
     d92:	29 81       	ldd	r18, Y+1	; 0x01
     d94:	3a 81       	ldd	r19, Y+2	; 0x02
     d96:	8b 81       	ldd	r24, Y+3	; 0x03
     d98:	9c 81       	ldd	r25, Y+4	; 0x04
     d9a:	ad 81       	ldd	r26, Y+5	; 0x05
     d9c:	be 81       	ldd	r27, Y+6	; 0x06
     d9e:	f9 01       	movw	r30, r18
     da0:	80 83       	st	Z, r24
     da2:	91 83       	std	Z+1, r25	; 0x01
     da4:	a2 83       	std	Z+2, r26	; 0x02
     da6:	b3 83       	std	Z+3, r27	; 0x03
     da8:	89 81       	ldd	r24, Y+1	; 0x01
     daa:	9a 81       	ldd	r25, Y+2	; 0x02
     dac:	fc 01       	movw	r30, r24
     dae:	15 82       	std	Z+5, r1	; 0x05
     db0:	14 82       	std	Z+4, r1	; 0x04
     db2:	89 81       	ldd	r24, Y+1	; 0x01
     db4:	9a 81       	ldd	r25, Y+2	; 0x02
     db6:	21 e0       	ldi	r18, 0x01	; 1
     db8:	30 e0       	ldi	r19, 0x00	; 0
     dba:	fc 01       	movw	r30, r24
     dbc:	37 83       	std	Z+7, r19	; 0x07
     dbe:	26 83       	std	Z+6, r18	; 0x06
     dc0:	89 81       	ldd	r24, Y+1	; 0x01
     dc2:	9a 81       	ldd	r25, Y+2	; 0x02
     dc4:	fc 01       	movw	r30, r24
     dc6:	11 86       	std	Z+9, r1	; 0x09
     dc8:	10 86       	std	Z+8, r1	; 0x08
     dca:	89 81       	ldd	r24, Y+1	; 0x01
     dcc:	9a 81       	ldd	r25, Y+2	; 0x02
     dce:	fc 01       	movw	r30, r24
     dd0:	13 86       	std	Z+11, r1	; 0x0b
     dd2:	12 86       	std	Z+10, r1	; 0x0a
     dd4:	89 81       	ldd	r24, Y+1	; 0x01
     dd6:	9a 81       	ldd	r25, Y+2	; 0x02
     dd8:	fc 01       	movw	r30, r24
     dda:	15 86       	std	Z+13, r1	; 0x0d
     ddc:	14 86       	std	Z+12, r1	; 0x0c
     dde:	89 81       	ldd	r24, Y+1	; 0x01
     de0:	9a 81       	ldd	r25, Y+2	; 0x02
     de2:	2f ef       	ldi	r18, 0xFF	; 255
     de4:	3f ef       	ldi	r19, 0xFF	; 255
     de6:	fc 01       	movw	r30, r24
     de8:	37 87       	std	Z+15, r19	; 0x0f
     dea:	26 87       	std	Z+14, r18	; 0x0e
     dec:	89 81       	ldd	r24, Y+1	; 0x01
     dee:	9a 81       	ldd	r25, Y+2	; 0x02
     df0:	21 e0       	ldi	r18, 0x01	; 1
     df2:	30 e0       	ldi	r19, 0x00	; 0
     df4:	fc 01       	movw	r30, r24
     df6:	31 8b       	std	Z+17, r19	; 0x11
     df8:	20 8b       	std	Z+16, r18	; 0x10
     dfa:	89 81       	ldd	r24, Y+1	; 0x01
     dfc:	9a 81       	ldd	r25, Y+2	; 0x02
     dfe:	2f ef       	ldi	r18, 0xFF	; 255
     e00:	3f ef       	ldi	r19, 0xFF	; 255
     e02:	fc 01       	movw	r30, r24
     e04:	33 8b       	std	Z+19, r19	; 0x13
     e06:	22 8b       	std	Z+18, r18	; 0x12
     e08:	89 81       	ldd	r24, Y+1	; 0x01
     e0a:	9a 81       	ldd	r25, Y+2	; 0x02
     e0c:	26 96       	adiw	r28, 0x06	; 6
     e0e:	0f b6       	in	r0, 0x3f	; 63
     e10:	f8 94       	cli
     e12:	de bf       	out	0x3e, r29	; 62
     e14:	0f be       	out	0x3f, r0	; 63
     e16:	cd bf       	out	0x3d, r28	; 61
     e18:	df 91       	pop	r29
     e1a:	cf 91       	pop	r28
     e1c:	08 95       	ret

00000e1e <Z>:
     e1e:	cf 93       	push	r28
     e20:	df 93       	push	r29
     e22:	00 d0       	rcall	.+0      	; 0xe24 <Z+0x6>
     e24:	00 d0       	rcall	.+0      	; 0xe26 <Z+0x8>
     e26:	00 d0       	rcall	.+0      	; 0xe28 <Z+0xa>
     e28:	cd b7       	in	r28, 0x3d	; 61
     e2a:	de b7       	in	r29, 0x3e	; 62
     e2c:	9a 83       	std	Y+2, r25	; 0x02
     e2e:	89 83       	std	Y+1, r24	; 0x01
     e30:	4b 83       	std	Y+3, r20	; 0x03
     e32:	5c 83       	std	Y+4, r21	; 0x04
     e34:	6d 83       	std	Y+5, r22	; 0x05
     e36:	7e 83       	std	Y+6, r23	; 0x06
     e38:	29 81       	ldd	r18, Y+1	; 0x01
     e3a:	3a 81       	ldd	r19, Y+2	; 0x02
     e3c:	8b 81       	ldd	r24, Y+3	; 0x03
     e3e:	9c 81       	ldd	r25, Y+4	; 0x04
     e40:	ad 81       	ldd	r26, Y+5	; 0x05
     e42:	be 81       	ldd	r27, Y+6	; 0x06
     e44:	f9 01       	movw	r30, r18
     e46:	80 83       	st	Z, r24
     e48:	91 83       	std	Z+1, r25	; 0x01
     e4a:	a2 83       	std	Z+2, r26	; 0x02
     e4c:	b3 83       	std	Z+3, r27	; 0x03
     e4e:	89 81       	ldd	r24, Y+1	; 0x01
     e50:	9a 81       	ldd	r25, Y+2	; 0x02
     e52:	2f ef       	ldi	r18, 0xFF	; 255
     e54:	3f ef       	ldi	r19, 0xFF	; 255
     e56:	fc 01       	movw	r30, r24
     e58:	35 83       	std	Z+5, r19	; 0x05
     e5a:	24 83       	std	Z+4, r18	; 0x04
     e5c:	89 81       	ldd	r24, Y+1	; 0x01
     e5e:	9a 81       	ldd	r25, Y+2	; 0x02
     e60:	fc 01       	movw	r30, r24
     e62:	17 82       	std	Z+7, r1	; 0x07
     e64:	16 82       	std	Z+6, r1	; 0x06
     e66:	89 81       	ldd	r24, Y+1	; 0x01
     e68:	9a 81       	ldd	r25, Y+2	; 0x02
     e6a:	fc 01       	movw	r30, r24
     e6c:	11 86       	std	Z+9, r1	; 0x09
     e6e:	10 86       	std	Z+8, r1	; 0x08
     e70:	89 81       	ldd	r24, Y+1	; 0x01
     e72:	9a 81       	ldd	r25, Y+2	; 0x02
     e74:	fc 01       	movw	r30, r24
     e76:	13 86       	std	Z+11, r1	; 0x0b
     e78:	12 86       	std	Z+10, r1	; 0x0a
     e7a:	89 81       	ldd	r24, Y+1	; 0x01
     e7c:	9a 81       	ldd	r25, Y+2	; 0x02
     e7e:	fc 01       	movw	r30, r24
     e80:	15 86       	std	Z+13, r1	; 0x0d
     e82:	14 86       	std	Z+12, r1	; 0x0c
     e84:	89 81       	ldd	r24, Y+1	; 0x01
     e86:	9a 81       	ldd	r25, Y+2	; 0x02
     e88:	21 e0       	ldi	r18, 0x01	; 1
     e8a:	30 e0       	ldi	r19, 0x00	; 0
     e8c:	fc 01       	movw	r30, r24
     e8e:	37 87       	std	Z+15, r19	; 0x0f
     e90:	26 87       	std	Z+14, r18	; 0x0e
     e92:	89 81       	ldd	r24, Y+1	; 0x01
     e94:	9a 81       	ldd	r25, Y+2	; 0x02
     e96:	21 e0       	ldi	r18, 0x01	; 1
     e98:	30 e0       	ldi	r19, 0x00	; 0
     e9a:	fc 01       	movw	r30, r24
     e9c:	31 8b       	std	Z+17, r19	; 0x11
     e9e:	20 8b       	std	Z+16, r18	; 0x10
     ea0:	89 81       	ldd	r24, Y+1	; 0x01
     ea2:	9a 81       	ldd	r25, Y+2	; 0x02
     ea4:	21 e0       	ldi	r18, 0x01	; 1
     ea6:	30 e0       	ldi	r19, 0x00	; 0
     ea8:	fc 01       	movw	r30, r24
     eaa:	33 8b       	std	Z+19, r19	; 0x13
     eac:	22 8b       	std	Z+18, r18	; 0x12
     eae:	89 81       	ldd	r24, Y+1	; 0x01
     eb0:	9a 81       	ldd	r25, Y+2	; 0x02
     eb2:	26 96       	adiw	r28, 0x06	; 6
     eb4:	0f b6       	in	r0, 0x3f	; 63
     eb6:	f8 94       	cli
     eb8:	de bf       	out	0x3e, r29	; 62
     eba:	0f be       	out	0x3f, r0	; 63
     ebc:	cd bf       	out	0x3d, r28	; 61
     ebe:	df 91       	pop	r29
     ec0:	cf 91       	pop	r28
     ec2:	08 95       	ret

00000ec4 <I>:
     ec4:	cf 93       	push	r28
     ec6:	df 93       	push	r29
     ec8:	00 d0       	rcall	.+0      	; 0xeca <I+0x6>
     eca:	00 d0       	rcall	.+0      	; 0xecc <I+0x8>
     ecc:	00 d0       	rcall	.+0      	; 0xece <I+0xa>
     ece:	cd b7       	in	r28, 0x3d	; 61
     ed0:	de b7       	in	r29, 0x3e	; 62
     ed2:	9a 83       	std	Y+2, r25	; 0x02
     ed4:	89 83       	std	Y+1, r24	; 0x01
     ed6:	4b 83       	std	Y+3, r20	; 0x03
     ed8:	5c 83       	std	Y+4, r21	; 0x04
     eda:	6d 83       	std	Y+5, r22	; 0x05
     edc:	7e 83       	std	Y+6, r23	; 0x06
     ede:	29 81       	ldd	r18, Y+1	; 0x01
     ee0:	3a 81       	ldd	r19, Y+2	; 0x02
     ee2:	8b 81       	ldd	r24, Y+3	; 0x03
     ee4:	9c 81       	ldd	r25, Y+4	; 0x04
     ee6:	ad 81       	ldd	r26, Y+5	; 0x05
     ee8:	be 81       	ldd	r27, Y+6	; 0x06
     eea:	f9 01       	movw	r30, r18
     eec:	80 83       	st	Z, r24
     eee:	91 83       	std	Z+1, r25	; 0x01
     ef0:	a2 83       	std	Z+2, r26	; 0x02
     ef2:	b3 83       	std	Z+3, r27	; 0x03
     ef4:	89 81       	ldd	r24, Y+1	; 0x01
     ef6:	9a 81       	ldd	r25, Y+2	; 0x02
     ef8:	fc 01       	movw	r30, r24
     efa:	15 82       	std	Z+5, r1	; 0x05
     efc:	14 82       	std	Z+4, r1	; 0x04
     efe:	89 81       	ldd	r24, Y+1	; 0x01
     f00:	9a 81       	ldd	r25, Y+2	; 0x02
     f02:	2f ef       	ldi	r18, 0xFF	; 255
     f04:	3f ef       	ldi	r19, 0xFF	; 255
     f06:	fc 01       	movw	r30, r24
     f08:	37 83       	std	Z+7, r19	; 0x07
     f0a:	26 83       	std	Z+6, r18	; 0x06
     f0c:	89 81       	ldd	r24, Y+1	; 0x01
     f0e:	9a 81       	ldd	r25, Y+2	; 0x02
     f10:	fc 01       	movw	r30, r24
     f12:	11 86       	std	Z+9, r1	; 0x09
     f14:	10 86       	std	Z+8, r1	; 0x08
     f16:	89 81       	ldd	r24, Y+1	; 0x01
     f18:	9a 81       	ldd	r25, Y+2	; 0x02
     f1a:	fc 01       	movw	r30, r24
     f1c:	13 86       	std	Z+11, r1	; 0x0b
     f1e:	12 86       	std	Z+10, r1	; 0x0a
     f20:	89 81       	ldd	r24, Y+1	; 0x01
     f22:	9a 81       	ldd	r25, Y+2	; 0x02
     f24:	fc 01       	movw	r30, r24
     f26:	15 86       	std	Z+13, r1	; 0x0d
     f28:	14 86       	std	Z+12, r1	; 0x0c
     f2a:	89 81       	ldd	r24, Y+1	; 0x01
     f2c:	9a 81       	ldd	r25, Y+2	; 0x02
     f2e:	21 e0       	ldi	r18, 0x01	; 1
     f30:	30 e0       	ldi	r19, 0x00	; 0
     f32:	fc 01       	movw	r30, r24
     f34:	37 87       	std	Z+15, r19	; 0x0f
     f36:	26 87       	std	Z+14, r18	; 0x0e
     f38:	89 81       	ldd	r24, Y+1	; 0x01
     f3a:	9a 81       	ldd	r25, Y+2	; 0x02
     f3c:	fc 01       	movw	r30, r24
     f3e:	11 8a       	std	Z+17, r1	; 0x11
     f40:	10 8a       	std	Z+16, r1	; 0x10
     f42:	89 81       	ldd	r24, Y+1	; 0x01
     f44:	9a 81       	ldd	r25, Y+2	; 0x02
     f46:	22 e0       	ldi	r18, 0x02	; 2
     f48:	30 e0       	ldi	r19, 0x00	; 0
     f4a:	fc 01       	movw	r30, r24
     f4c:	33 8b       	std	Z+19, r19	; 0x13
     f4e:	22 8b       	std	Z+18, r18	; 0x12
     f50:	89 81       	ldd	r24, Y+1	; 0x01
     f52:	9a 81       	ldd	r25, Y+2	; 0x02
     f54:	26 96       	adiw	r28, 0x06	; 6
     f56:	0f b6       	in	r0, 0x3f	; 63
     f58:	f8 94       	cli
     f5a:	de bf       	out	0x3e, r29	; 62
     f5c:	0f be       	out	0x3f, r0	; 63
     f5e:	cd bf       	out	0x3d, r28	; 61
     f60:	df 91       	pop	r29
     f62:	cf 91       	pop	r28
     f64:	08 95       	ret

00000f66 <O>:
     f66:	cf 93       	push	r28
     f68:	df 93       	push	r29
     f6a:	00 d0       	rcall	.+0      	; 0xf6c <O+0x6>
     f6c:	00 d0       	rcall	.+0      	; 0xf6e <O+0x8>
     f6e:	00 d0       	rcall	.+0      	; 0xf70 <O+0xa>
     f70:	cd b7       	in	r28, 0x3d	; 61
     f72:	de b7       	in	r29, 0x3e	; 62
     f74:	9a 83       	std	Y+2, r25	; 0x02
     f76:	89 83       	std	Y+1, r24	; 0x01
     f78:	4b 83       	std	Y+3, r20	; 0x03
     f7a:	5c 83       	std	Y+4, r21	; 0x04
     f7c:	6d 83       	std	Y+5, r22	; 0x05
     f7e:	7e 83       	std	Y+6, r23	; 0x06
     f80:	29 81       	ldd	r18, Y+1	; 0x01
     f82:	3a 81       	ldd	r19, Y+2	; 0x02
     f84:	8b 81       	ldd	r24, Y+3	; 0x03
     f86:	9c 81       	ldd	r25, Y+4	; 0x04
     f88:	ad 81       	ldd	r26, Y+5	; 0x05
     f8a:	be 81       	ldd	r27, Y+6	; 0x06
     f8c:	f9 01       	movw	r30, r18
     f8e:	80 83       	st	Z, r24
     f90:	91 83       	std	Z+1, r25	; 0x01
     f92:	a2 83       	std	Z+2, r26	; 0x02
     f94:	b3 83       	std	Z+3, r27	; 0x03
     f96:	89 81       	ldd	r24, Y+1	; 0x01
     f98:	9a 81       	ldd	r25, Y+2	; 0x02
     f9a:	fc 01       	movw	r30, r24
     f9c:	15 82       	std	Z+5, r1	; 0x05
     f9e:	14 82       	std	Z+4, r1	; 0x04
     fa0:	89 81       	ldd	r24, Y+1	; 0x01
     fa2:	9a 81       	ldd	r25, Y+2	; 0x02
     fa4:	2f ef       	ldi	r18, 0xFF	; 255
     fa6:	3f ef       	ldi	r19, 0xFF	; 255
     fa8:	fc 01       	movw	r30, r24
     faa:	37 83       	std	Z+7, r19	; 0x07
     fac:	26 83       	std	Z+6, r18	; 0x06
     fae:	89 81       	ldd	r24, Y+1	; 0x01
     fb0:	9a 81       	ldd	r25, Y+2	; 0x02
     fb2:	fc 01       	movw	r30, r24
     fb4:	11 86       	std	Z+9, r1	; 0x09
     fb6:	10 86       	std	Z+8, r1	; 0x08
     fb8:	89 81       	ldd	r24, Y+1	; 0x01
     fba:	9a 81       	ldd	r25, Y+2	; 0x02
     fbc:	fc 01       	movw	r30, r24
     fbe:	13 86       	std	Z+11, r1	; 0x0b
     fc0:	12 86       	std	Z+10, r1	; 0x0a
     fc2:	89 81       	ldd	r24, Y+1	; 0x01
     fc4:	9a 81       	ldd	r25, Y+2	; 0x02
     fc6:	21 e0       	ldi	r18, 0x01	; 1
     fc8:	30 e0       	ldi	r19, 0x00	; 0
     fca:	fc 01       	movw	r30, r24
     fcc:	35 87       	std	Z+13, r19	; 0x0d
     fce:	24 87       	std	Z+12, r18	; 0x0c
     fd0:	89 81       	ldd	r24, Y+1	; 0x01
     fd2:	9a 81       	ldd	r25, Y+2	; 0x02
     fd4:	fc 01       	movw	r30, r24
     fd6:	17 86       	std	Z+15, r1	; 0x0f
     fd8:	16 86       	std	Z+14, r1	; 0x0e
     fda:	89 81       	ldd	r24, Y+1	; 0x01
     fdc:	9a 81       	ldd	r25, Y+2	; 0x02
     fde:	21 e0       	ldi	r18, 0x01	; 1
     fe0:	30 e0       	ldi	r19, 0x00	; 0
     fe2:	fc 01       	movw	r30, r24
     fe4:	31 8b       	std	Z+17, r19	; 0x11
     fe6:	20 8b       	std	Z+16, r18	; 0x10
     fe8:	89 81       	ldd	r24, Y+1	; 0x01
     fea:	9a 81       	ldd	r25, Y+2	; 0x02
     fec:	2f ef       	ldi	r18, 0xFF	; 255
     fee:	3f ef       	ldi	r19, 0xFF	; 255
     ff0:	fc 01       	movw	r30, r24
     ff2:	33 8b       	std	Z+19, r19	; 0x13
     ff4:	22 8b       	std	Z+18, r18	; 0x12
     ff6:	89 81       	ldd	r24, Y+1	; 0x01
     ff8:	9a 81       	ldd	r25, Y+2	; 0x02
     ffa:	26 96       	adiw	r28, 0x06	; 6
     ffc:	0f b6       	in	r0, 0x3f	; 63
     ffe:	f8 94       	cli
    1000:	de bf       	out	0x3e, r29	; 62
    1002:	0f be       	out	0x3f, r0	; 63
    1004:	cd bf       	out	0x3d, r28	; 61
    1006:	df 91       	pop	r29
    1008:	cf 91       	pop	r28
    100a:	08 95       	ret

0000100c <getTile>:
    100c:	cf 93       	push	r28
    100e:	df 93       	push	r29
    1010:	00 d0       	rcall	.+0      	; 0x1012 <getTile+0x6>
    1012:	00 d0       	rcall	.+0      	; 0x1014 <getTile+0x8>
    1014:	cd b7       	in	r28, 0x3d	; 61
    1016:	de b7       	in	r29, 0x3e	; 62
    1018:	9a 83       	std	Y+2, r25	; 0x02
    101a:	89 83       	std	Y+1, r24	; 0x01
    101c:	7c 83       	std	Y+4, r23	; 0x04
    101e:	6b 83       	std	Y+3, r22	; 0x03
    1020:	8b 81       	ldd	r24, Y+3	; 0x03
    1022:	9c 81       	ldd	r25, Y+4	; 0x04
    1024:	01 96       	adiw	r24, 0x01	; 1
    1026:	88 0f       	add	r24, r24
    1028:	99 1f       	adc	r25, r25
    102a:	88 0f       	add	r24, r24
    102c:	99 1f       	adc	r25, r25
    102e:	29 81       	ldd	r18, Y+1	; 0x01
    1030:	3a 81       	ldd	r19, Y+2	; 0x02
    1032:	28 0f       	add	r18, r24
    1034:	39 1f       	adc	r19, r25
    1036:	89 81       	ldd	r24, Y+1	; 0x01
    1038:	9a 81       	ldd	r25, Y+2	; 0x02
    103a:	b9 01       	movw	r22, r18
    103c:	0c de       	rcall	.-1000   	; 0xc56 <add>
    103e:	dc 01       	movw	r26, r24
    1040:	cb 01       	movw	r24, r22
    1042:	bc 01       	movw	r22, r24
    1044:	cd 01       	movw	r24, r26
    1046:	0f 90       	pop	r0
    1048:	0f 90       	pop	r0
    104a:	0f 90       	pop	r0
    104c:	0f 90       	pop	r0
    104e:	df 91       	pop	r29
    1050:	cf 91       	pop	r28
    1052:	08 95       	ret

00001054 <down>:
    1054:	cf 93       	push	r28
    1056:	df 93       	push	r29
    1058:	00 d0       	rcall	.+0      	; 0x105a <down+0x6>
    105a:	cd b7       	in	r28, 0x3d	; 61
    105c:	de b7       	in	r29, 0x3e	; 62
    105e:	9a 83       	std	Y+2, r25	; 0x02
    1060:	89 83       	std	Y+1, r24	; 0x01
    1062:	89 81       	ldd	r24, Y+1	; 0x01
    1064:	9a 81       	ldd	r25, Y+2	; 0x02
    1066:	fc 01       	movw	r30, r24
    1068:	82 81       	ldd	r24, Z+2	; 0x02
    106a:	93 81       	ldd	r25, Z+3	; 0x03
    106c:	01 97       	sbiw	r24, 0x01	; 1
    106e:	9c 01       	movw	r18, r24
    1070:	89 81       	ldd	r24, Y+1	; 0x01
    1072:	9a 81       	ldd	r25, Y+2	; 0x02
    1074:	fc 01       	movw	r30, r24
    1076:	33 83       	std	Z+3, r19	; 0x03
    1078:	22 83       	std	Z+2, r18	; 0x02
    107a:	00 00       	nop
    107c:	0f 90       	pop	r0
    107e:	0f 90       	pop	r0
    1080:	df 91       	pop	r29
    1082:	cf 91       	pop	r28
    1084:	08 95       	ret

00001086 <right>:
    1086:	cf 93       	push	r28
    1088:	df 93       	push	r29
    108a:	00 d0       	rcall	.+0      	; 0x108c <right+0x6>
    108c:	cd b7       	in	r28, 0x3d	; 61
    108e:	de b7       	in	r29, 0x3e	; 62
    1090:	9a 83       	std	Y+2, r25	; 0x02
    1092:	89 83       	std	Y+1, r24	; 0x01
    1094:	89 81       	ldd	r24, Y+1	; 0x01
    1096:	9a 81       	ldd	r25, Y+2	; 0x02
    1098:	fc 01       	movw	r30, r24
    109a:	80 81       	ld	r24, Z
    109c:	91 81       	ldd	r25, Z+1	; 0x01
    109e:	01 96       	adiw	r24, 0x01	; 1
    10a0:	9c 01       	movw	r18, r24
    10a2:	89 81       	ldd	r24, Y+1	; 0x01
    10a4:	9a 81       	ldd	r25, Y+2	; 0x02
    10a6:	fc 01       	movw	r30, r24
    10a8:	31 83       	std	Z+1, r19	; 0x01
    10aa:	20 83       	st	Z, r18
    10ac:	00 00       	nop
    10ae:	0f 90       	pop	r0
    10b0:	0f 90       	pop	r0
    10b2:	df 91       	pop	r29
    10b4:	cf 91       	pop	r28
    10b6:	08 95       	ret

000010b8 <left>:
    10b8:	cf 93       	push	r28
    10ba:	df 93       	push	r29
    10bc:	00 d0       	rcall	.+0      	; 0x10be <left+0x6>
    10be:	cd b7       	in	r28, 0x3d	; 61
    10c0:	de b7       	in	r29, 0x3e	; 62
    10c2:	9a 83       	std	Y+2, r25	; 0x02
    10c4:	89 83       	std	Y+1, r24	; 0x01
    10c6:	89 81       	ldd	r24, Y+1	; 0x01
    10c8:	9a 81       	ldd	r25, Y+2	; 0x02
    10ca:	fc 01       	movw	r30, r24
    10cc:	80 81       	ld	r24, Z
    10ce:	91 81       	ldd	r25, Z+1	; 0x01
    10d0:	01 97       	sbiw	r24, 0x01	; 1
    10d2:	9c 01       	movw	r18, r24
    10d4:	89 81       	ldd	r24, Y+1	; 0x01
    10d6:	9a 81       	ldd	r25, Y+2	; 0x02
    10d8:	fc 01       	movw	r30, r24
    10da:	31 83       	std	Z+1, r19	; 0x01
    10dc:	20 83       	st	Z, r18
    10de:	00 00       	nop
    10e0:	0f 90       	pop	r0
    10e2:	0f 90       	pop	r0
    10e4:	df 91       	pop	r29
    10e6:	cf 91       	pop	r28
    10e8:	08 95       	ret

000010ea <mirror>:
    10ea:	cf 93       	push	r28
    10ec:	df 93       	push	r29
    10ee:	00 d0       	rcall	.+0      	; 0x10f0 <mirror+0x6>
    10f0:	00 d0       	rcall	.+0      	; 0x10f2 <mirror+0x8>
    10f2:	cd b7       	in	r28, 0x3d	; 61
    10f4:	de b7       	in	r29, 0x3e	; 62
    10f6:	9c 83       	std	Y+4, r25	; 0x04
    10f8:	8b 83       	std	Y+3, r24	; 0x03
    10fa:	1a 82       	std	Y+2, r1	; 0x02
    10fc:	19 82       	std	Y+1, r1	; 0x01
    10fe:	25 c0       	rjmp	.+74     	; 0x114a <mirror+0x60>
    1100:	2b 81       	ldd	r18, Y+3	; 0x03
    1102:	3c 81       	ldd	r19, Y+4	; 0x04
    1104:	89 81       	ldd	r24, Y+1	; 0x01
    1106:	9a 81       	ldd	r25, Y+2	; 0x02
    1108:	01 96       	adiw	r24, 0x01	; 1
    110a:	88 0f       	add	r24, r24
    110c:	99 1f       	adc	r25, r25
    110e:	88 0f       	add	r24, r24
    1110:	99 1f       	adc	r25, r25
    1112:	82 0f       	add	r24, r18
    1114:	93 1f       	adc	r25, r19
    1116:	fc 01       	movw	r30, r24
    1118:	80 81       	ld	r24, Z
    111a:	91 81       	ldd	r25, Z+1	; 0x01
    111c:	22 27       	eor	r18, r18
    111e:	33 27       	eor	r19, r19
    1120:	28 1b       	sub	r18, r24
    1122:	39 0b       	sbc	r19, r25
    1124:	4b 81       	ldd	r20, Y+3	; 0x03
    1126:	5c 81       	ldd	r21, Y+4	; 0x04
    1128:	89 81       	ldd	r24, Y+1	; 0x01
    112a:	9a 81       	ldd	r25, Y+2	; 0x02
    112c:	01 96       	adiw	r24, 0x01	; 1
    112e:	88 0f       	add	r24, r24
    1130:	99 1f       	adc	r25, r25
    1132:	88 0f       	add	r24, r24
    1134:	99 1f       	adc	r25, r25
    1136:	84 0f       	add	r24, r20
    1138:	95 1f       	adc	r25, r21
    113a:	fc 01       	movw	r30, r24
    113c:	31 83       	std	Z+1, r19	; 0x01
    113e:	20 83       	st	Z, r18
    1140:	89 81       	ldd	r24, Y+1	; 0x01
    1142:	9a 81       	ldd	r25, Y+2	; 0x02
    1144:	01 96       	adiw	r24, 0x01	; 1
    1146:	9a 83       	std	Y+2, r25	; 0x02
    1148:	89 83       	std	Y+1, r24	; 0x01
    114a:	89 81       	ldd	r24, Y+1	; 0x01
    114c:	9a 81       	ldd	r25, Y+2	; 0x02
    114e:	04 97       	sbiw	r24, 0x04	; 4
    1150:	b8 f2       	brcs	.-82     	; 0x1100 <mirror+0x16>
    1152:	00 00       	nop
    1154:	0f 90       	pop	r0
    1156:	0f 90       	pop	r0
    1158:	0f 90       	pop	r0
    115a:	0f 90       	pop	r0
    115c:	df 91       	pop	r29
    115e:	cf 91       	pop	r28
    1160:	08 95       	ret

00001162 <turnCCW>:
    1162:	cf 93       	push	r28
    1164:	df 93       	push	r29
    1166:	00 d0       	rcall	.+0      	; 0x1168 <turnCCW+0x6>
    1168:	00 d0       	rcall	.+0      	; 0x116a <turnCCW+0x8>
    116a:	cd b7       	in	r28, 0x3d	; 61
    116c:	de b7       	in	r29, 0x3e	; 62
    116e:	9c 83       	std	Y+4, r25	; 0x04
    1170:	8b 83       	std	Y+3, r24	; 0x03
    1172:	1a 82       	std	Y+2, r1	; 0x02
    1174:	19 82       	std	Y+1, r1	; 0x01
    1176:	11 c0       	rjmp	.+34     	; 0x119a <turnCCW+0x38>
    1178:	89 81       	ldd	r24, Y+1	; 0x01
    117a:	9a 81       	ldd	r25, Y+2	; 0x02
    117c:	01 96       	adiw	r24, 0x01	; 1
    117e:	88 0f       	add	r24, r24
    1180:	99 1f       	adc	r25, r25
    1182:	88 0f       	add	r24, r24
    1184:	99 1f       	adc	r25, r25
    1186:	2b 81       	ldd	r18, Y+3	; 0x03
    1188:	3c 81       	ldd	r19, Y+4	; 0x04
    118a:	82 0f       	add	r24, r18
    118c:	93 1f       	adc	r25, r19
    118e:	9c dd       	rcall	.-1224   	; 0xcc8 <pivotCCW>
    1190:	89 81       	ldd	r24, Y+1	; 0x01
    1192:	9a 81       	ldd	r25, Y+2	; 0x02
    1194:	01 96       	adiw	r24, 0x01	; 1
    1196:	9a 83       	std	Y+2, r25	; 0x02
    1198:	89 83       	std	Y+1, r24	; 0x01
    119a:	89 81       	ldd	r24, Y+1	; 0x01
    119c:	9a 81       	ldd	r25, Y+2	; 0x02
    119e:	04 97       	sbiw	r24, 0x04	; 4
    11a0:	58 f3       	brcs	.-42     	; 0x1178 <turnCCW+0x16>
    11a2:	00 00       	nop
    11a4:	0f 90       	pop	r0
    11a6:	0f 90       	pop	r0
    11a8:	0f 90       	pop	r0
    11aa:	0f 90       	pop	r0
    11ac:	df 91       	pop	r29
    11ae:	cf 91       	pop	r28
    11b0:	08 95       	ret

000011b2 <turnCW>:
    11b2:	cf 93       	push	r28
    11b4:	df 93       	push	r29
    11b6:	00 d0       	rcall	.+0      	; 0x11b8 <turnCW+0x6>
    11b8:	00 d0       	rcall	.+0      	; 0x11ba <turnCW+0x8>
    11ba:	cd b7       	in	r28, 0x3d	; 61
    11bc:	de b7       	in	r29, 0x3e	; 62
    11be:	9c 83       	std	Y+4, r25	; 0x04
    11c0:	8b 83       	std	Y+3, r24	; 0x03
    11c2:	1a 82       	std	Y+2, r1	; 0x02
    11c4:	19 82       	std	Y+1, r1	; 0x01
    11c6:	11 c0       	rjmp	.+34     	; 0x11ea <turnCW+0x38>
    11c8:	89 81       	ldd	r24, Y+1	; 0x01
    11ca:	9a 81       	ldd	r25, Y+2	; 0x02
    11cc:	01 96       	adiw	r24, 0x01	; 1
    11ce:	88 0f       	add	r24, r24
    11d0:	99 1f       	adc	r25, r25
    11d2:	88 0f       	add	r24, r24
    11d4:	99 1f       	adc	r25, r25
    11d6:	2b 81       	ldd	r18, Y+3	; 0x03
    11d8:	3c 81       	ldd	r19, Y+4	; 0x04
    11da:	82 0f       	add	r24, r18
    11dc:	93 1f       	adc	r25, r19
    11de:	a0 dd       	rcall	.-1216   	; 0xd20 <pivotCW>
    11e0:	89 81       	ldd	r24, Y+1	; 0x01
    11e2:	9a 81       	ldd	r25, Y+2	; 0x02
    11e4:	01 96       	adiw	r24, 0x01	; 1
    11e6:	9a 83       	std	Y+2, r25	; 0x02
    11e8:	89 83       	std	Y+1, r24	; 0x01
    11ea:	89 81       	ldd	r24, Y+1	; 0x01
    11ec:	9a 81       	ldd	r25, Y+2	; 0x02
    11ee:	04 97       	sbiw	r24, 0x04	; 4
    11f0:	58 f3       	brcs	.-42     	; 0x11c8 <turnCW+0x16>
    11f2:	00 00       	nop
    11f4:	0f 90       	pop	r0
    11f6:	0f 90       	pop	r0
    11f8:	0f 90       	pop	r0
    11fa:	0f 90       	pop	r0
    11fc:	df 91       	pop	r29
    11fe:	cf 91       	pop	r28
    1200:	08 95       	ret

00001202 <CreateTetra>:
    1202:	cf 93       	push	r28
    1204:	df 93       	push	r29
    1206:	cd b7       	in	r28, 0x3d	; 61
    1208:	de b7       	in	r29, 0x3e	; 62
    120a:	af 97       	sbiw	r28, 0x2f	; 47
    120c:	0f b6       	in	r0, 0x3f	; 63
    120e:	f8 94       	cli
    1210:	de bf       	out	0x3e, r29	; 62
    1212:	0f be       	out	0x3f, r0	; 63
    1214:	cd bf       	out	0x3d, r28	; 61
    1216:	9b 8f       	std	Y+27, r25	; 0x1b
    1218:	8a 8f       	std	Y+26, r24	; 0x1a
    121a:	0e 94 74 14 	call	0x28e8	; 0x28e8 <rand>
    121e:	87 70       	andi	r24, 0x07	; 7
    1220:	90 78       	andi	r25, 0x80	; 128
    1222:	99 23       	and	r25, r25
    1224:	24 f4       	brge	.+8      	; 0x122e <CreateTetra+0x2c>
    1226:	01 97       	sbiw	r24, 0x01	; 1
    1228:	88 6f       	ori	r24, 0xF8	; 248
    122a:	9f 6f       	ori	r25, 0xFF	; 255
    122c:	01 96       	adiw	r24, 0x01	; 1
    122e:	8e 5f       	subi	r24, 0xFE	; 254
    1230:	89 83       	std	Y+1, r24	; 0x01
    1232:	89 81       	ldd	r24, Y+1	; 0x01
    1234:	88 2f       	mov	r24, r24
    1236:	90 e0       	ldi	r25, 0x00	; 0
    1238:	9b 83       	std	Y+3, r25	; 0x03
    123a:	8a 83       	std	Y+2, r24	; 0x02
    123c:	87 e1       	ldi	r24, 0x17	; 23
    123e:	90 e0       	ldi	r25, 0x00	; 0
    1240:	9d 83       	std	Y+5, r25	; 0x05
    1242:	8c 83       	std	Y+4, r24	; 0x04
    1244:	0e 94 74 14 	call	0x28e8	; 0x28e8 <rand>
    1248:	83 70       	andi	r24, 0x03	; 3
    124a:	90 78       	andi	r25, 0x80	; 128
    124c:	99 23       	and	r25, r25
    124e:	24 f4       	brge	.+8      	; 0x1258 <CreateTetra+0x56>
    1250:	01 97       	sbiw	r24, 0x01	; 1
    1252:	8c 6f       	ori	r24, 0xFC	; 252
    1254:	9f 6f       	ori	r25, 0xFF	; 255
    1256:	01 96       	adiw	r24, 0x01	; 1
    1258:	81 30       	cpi	r24, 0x01	; 1
    125a:	91 05       	cpc	r25, r1
    125c:	d9 f0       	breq	.+54     	; 0x1294 <CreateTetra+0x92>
    125e:	82 30       	cpi	r24, 0x02	; 2
    1260:	91 05       	cpc	r25, r1
    1262:	69 f1       	breq	.+90     	; 0x12be <CreateTetra+0xbc>
    1264:	89 2b       	or	r24, r25
    1266:	09 f0       	breq	.+2      	; 0x126a <CreateTetra+0x68>
    1268:	3f c0       	rjmp	.+126    	; 0x12e8 <CreateTetra+0xe6>
    126a:	9e 01       	movw	r18, r28
    126c:	24 5e       	subi	r18, 0xE4	; 228
    126e:	3f 4f       	sbci	r19, 0xFF	; 255
    1270:	8a 81       	ldd	r24, Y+2	; 0x02
    1272:	9b 81       	ldd	r25, Y+3	; 0x03
    1274:	ac 81       	ldd	r26, Y+4	; 0x04
    1276:	bd 81       	ldd	r27, Y+5	; 0x05
    1278:	ac 01       	movw	r20, r24
    127a:	bd 01       	movw	r22, r26
    127c:	c9 01       	movw	r24, r18
    127e:	7c dd       	rcall	.-1288   	; 0xd78 <L>
    1280:	84 e1       	ldi	r24, 0x14	; 20
    1282:	fe 01       	movw	r30, r28
    1284:	7c 96       	adiw	r30, 0x1c	; 28
    1286:	de 01       	movw	r26, r28
    1288:	16 96       	adiw	r26, 0x06	; 6
    128a:	01 90       	ld	r0, Z+
    128c:	0d 92       	st	X+, r0
    128e:	8a 95       	dec	r24
    1290:	e1 f7       	brne	.-8      	; 0x128a <CreateTetra+0x88>
    1292:	3f c0       	rjmp	.+126    	; 0x1312 <CreateTetra+0x110>
    1294:	9e 01       	movw	r18, r28
    1296:	24 5e       	subi	r18, 0xE4	; 228
    1298:	3f 4f       	sbci	r19, 0xFF	; 255
    129a:	8a 81       	ldd	r24, Y+2	; 0x02
    129c:	9b 81       	ldd	r25, Y+3	; 0x03
    129e:	ac 81       	ldd	r26, Y+4	; 0x04
    12a0:	bd 81       	ldd	r27, Y+5	; 0x05
    12a2:	ac 01       	movw	r20, r24
    12a4:	bd 01       	movw	r22, r26
    12a6:	c9 01       	movw	r24, r18
    12a8:	ba dd       	rcall	.-1164   	; 0xe1e <Z>
    12aa:	84 e1       	ldi	r24, 0x14	; 20
    12ac:	fe 01       	movw	r30, r28
    12ae:	7c 96       	adiw	r30, 0x1c	; 28
    12b0:	de 01       	movw	r26, r28
    12b2:	16 96       	adiw	r26, 0x06	; 6
    12b4:	01 90       	ld	r0, Z+
    12b6:	0d 92       	st	X+, r0
    12b8:	8a 95       	dec	r24
    12ba:	e1 f7       	brne	.-8      	; 0x12b4 <CreateTetra+0xb2>
    12bc:	2a c0       	rjmp	.+84     	; 0x1312 <CreateTetra+0x110>
    12be:	9e 01       	movw	r18, r28
    12c0:	24 5e       	subi	r18, 0xE4	; 228
    12c2:	3f 4f       	sbci	r19, 0xFF	; 255
    12c4:	8a 81       	ldd	r24, Y+2	; 0x02
    12c6:	9b 81       	ldd	r25, Y+3	; 0x03
    12c8:	ac 81       	ldd	r26, Y+4	; 0x04
    12ca:	bd 81       	ldd	r27, Y+5	; 0x05
    12cc:	ac 01       	movw	r20, r24
    12ce:	bd 01       	movw	r22, r26
    12d0:	c9 01       	movw	r24, r18
    12d2:	f8 dd       	rcall	.-1040   	; 0xec4 <I>
    12d4:	84 e1       	ldi	r24, 0x14	; 20
    12d6:	fe 01       	movw	r30, r28
    12d8:	7c 96       	adiw	r30, 0x1c	; 28
    12da:	de 01       	movw	r26, r28
    12dc:	16 96       	adiw	r26, 0x06	; 6
    12de:	01 90       	ld	r0, Z+
    12e0:	0d 92       	st	X+, r0
    12e2:	8a 95       	dec	r24
    12e4:	e1 f7       	brne	.-8      	; 0x12de <CreateTetra+0xdc>
    12e6:	15 c0       	rjmp	.+42     	; 0x1312 <CreateTetra+0x110>
    12e8:	9e 01       	movw	r18, r28
    12ea:	24 5e       	subi	r18, 0xE4	; 228
    12ec:	3f 4f       	sbci	r19, 0xFF	; 255
    12ee:	8a 81       	ldd	r24, Y+2	; 0x02
    12f0:	9b 81       	ldd	r25, Y+3	; 0x03
    12f2:	ac 81       	ldd	r26, Y+4	; 0x04
    12f4:	bd 81       	ldd	r27, Y+5	; 0x05
    12f6:	ac 01       	movw	r20, r24
    12f8:	bd 01       	movw	r22, r26
    12fa:	c9 01       	movw	r24, r18
    12fc:	34 de       	rcall	.-920    	; 0xf66 <O>
    12fe:	84 e1       	ldi	r24, 0x14	; 20
    1300:	fe 01       	movw	r30, r28
    1302:	7c 96       	adiw	r30, 0x1c	; 28
    1304:	de 01       	movw	r26, r28
    1306:	16 96       	adiw	r26, 0x06	; 6
    1308:	01 90       	ld	r0, Z+
    130a:	0d 92       	st	X+, r0
    130c:	8a 95       	dec	r24
    130e:	e1 f7       	brne	.-8      	; 0x1308 <CreateTetra+0x106>
    1310:	00 00       	nop
    1312:	0e 94 74 14 	call	0x28e8	; 0x28e8 <rand>
    1316:	23 e0       	ldi	r18, 0x03	; 3
    1318:	30 e0       	ldi	r19, 0x00	; 0
    131a:	b9 01       	movw	r22, r18
    131c:	0e 94 fd 13 	call	0x27fa	; 0x27fa <__divmodhi4>
    1320:	00 97       	sbiw	r24, 0x00	; 0
    1322:	19 f0       	breq	.+6      	; 0x132a <CreateTetra+0x128>
    1324:	01 97       	sbiw	r24, 0x01	; 1
    1326:	29 f0       	breq	.+10     	; 0x1332 <CreateTetra+0x130>
    1328:	08 c0       	rjmp	.+16     	; 0x133a <CreateTetra+0x138>
    132a:	ce 01       	movw	r24, r28
    132c:	06 96       	adiw	r24, 0x06	; 6
    132e:	19 df       	rcall	.-462    	; 0x1162 <turnCCW>
    1330:	04 c0       	rjmp	.+8      	; 0x133a <CreateTetra+0x138>
    1332:	ce 01       	movw	r24, r28
    1334:	06 96       	adiw	r24, 0x06	; 6
    1336:	3d df       	rcall	.-390    	; 0x11b2 <turnCW>
    1338:	00 00       	nop
    133a:	0e 94 74 14 	call	0x28e8	; 0x28e8 <rand>
    133e:	81 70       	andi	r24, 0x01	; 1
    1340:	99 27       	eor	r25, r25
    1342:	89 2b       	or	r24, r25
    1344:	19 f0       	breq	.+6      	; 0x134c <CreateTetra+0x14a>
    1346:	ce 01       	movw	r24, r28
    1348:	06 96       	adiw	r24, 0x06	; 6
    134a:	cf de       	rcall	.-610    	; 0x10ea <mirror>
    134c:	8a 8d       	ldd	r24, Y+26	; 0x1a
    134e:	9b 8d       	ldd	r25, Y+27	; 0x1b
    1350:	24 e1       	ldi	r18, 0x14	; 20
    1352:	fe 01       	movw	r30, r28
    1354:	36 96       	adiw	r30, 0x06	; 6
    1356:	dc 01       	movw	r26, r24
    1358:	01 90       	ld	r0, Z+
    135a:	0d 92       	st	X+, r0
    135c:	2a 95       	dec	r18
    135e:	e1 f7       	brne	.-8      	; 0x1358 <CreateTetra+0x156>
    1360:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1362:	9b 8d       	ldd	r25, Y+27	; 0x1b
    1364:	af 96       	adiw	r28, 0x2f	; 47
    1366:	0f b6       	in	r0, 0x3f	; 63
    1368:	f8 94       	cli
    136a:	de bf       	out	0x3e, r29	; 62
    136c:	0f be       	out	0x3f, r0	; 63
    136e:	cd bf       	out	0x3d, r28	; 61
    1370:	df 91       	pop	r29
    1372:	cf 91       	pop	r28
    1374:	08 95       	ret

00001376 <getPoint>:
    1376:	cf 93       	push	r28
    1378:	df 93       	push	r29
    137a:	00 d0       	rcall	.+0      	; 0x137c <getPoint+0x6>
    137c:	00 d0       	rcall	.+0      	; 0x137e <getPoint+0x8>
    137e:	cd b7       	in	r28, 0x3d	; 61
    1380:	de b7       	in	r29, 0x3e	; 62
    1382:	9a 83       	std	Y+2, r25	; 0x02
    1384:	89 83       	std	Y+1, r24	; 0x01
    1386:	7c 83       	std	Y+4, r23	; 0x04
    1388:	6b 83       	std	Y+3, r22	; 0x03
    138a:	8b 81       	ldd	r24, Y+3	; 0x03
    138c:	9c 81       	ldd	r25, Y+4	; 0x04
    138e:	fc 01       	movw	r30, r24
    1390:	60 81       	ld	r22, Z
    1392:	71 81       	ldd	r23, Z+1	; 0x01
    1394:	8b 81       	ldd	r24, Y+3	; 0x03
    1396:	9c 81       	ldd	r25, Y+4	; 0x04
    1398:	fc 01       	movw	r30, r24
    139a:	82 81       	ldd	r24, Z+2	; 0x02
    139c:	93 81       	ldd	r25, Z+3	; 0x03
    139e:	49 81       	ldd	r20, Y+1	; 0x01
    13a0:	5a 81       	ldd	r21, Y+2	; 0x02
    13a2:	e5 e1       	ldi	r30, 0x15	; 21
    13a4:	e6 9f       	mul	r30, r22
    13a6:	90 01       	movw	r18, r0
    13a8:	e7 9f       	mul	r30, r23
    13aa:	30 0d       	add	r19, r0
    13ac:	11 24       	eor	r1, r1
    13ae:	24 0f       	add	r18, r20
    13b0:	35 1f       	adc	r19, r21
    13b2:	82 0f       	add	r24, r18
    13b4:	93 1f       	adc	r25, r19
    13b6:	fc 01       	movw	r30, r24
    13b8:	80 81       	ld	r24, Z
    13ba:	0f 90       	pop	r0
    13bc:	0f 90       	pop	r0
    13be:	0f 90       	pop	r0
    13c0:	0f 90       	pop	r0
    13c2:	df 91       	pop	r29
    13c4:	cf 91       	pop	r28
    13c6:	08 95       	ret

000013c8 <clearRow>:
    13c8:	cf 93       	push	r28
    13ca:	df 93       	push	r29
    13cc:	00 d0       	rcall	.+0      	; 0x13ce <clearRow+0x6>
    13ce:	00 d0       	rcall	.+0      	; 0x13d0 <clearRow+0x8>
    13d0:	00 d0       	rcall	.+0      	; 0x13d2 <clearRow+0xa>
    13d2:	cd b7       	in	r28, 0x3d	; 61
    13d4:	de b7       	in	r29, 0x3e	; 62
    13d6:	9c 83       	std	Y+4, r25	; 0x04
    13d8:	8b 83       	std	Y+3, r24	; 0x03
    13da:	7e 83       	std	Y+6, r23	; 0x06
    13dc:	6d 83       	std	Y+5, r22	; 0x05
    13de:	1a 82       	std	Y+2, r1	; 0x02
    13e0:	19 82       	std	Y+1, r1	; 0x01
    13e2:	17 c0       	rjmp	.+46     	; 0x1412 <clearRow+0x4a>
    13e4:	2b 81       	ldd	r18, Y+3	; 0x03
    13e6:	3c 81       	ldd	r19, Y+4	; 0x04
    13e8:	49 81       	ldd	r20, Y+1	; 0x01
    13ea:	5a 81       	ldd	r21, Y+2	; 0x02
    13ec:	65 e1       	ldi	r22, 0x15	; 21
    13ee:	64 9f       	mul	r22, r20
    13f0:	c0 01       	movw	r24, r0
    13f2:	65 9f       	mul	r22, r21
    13f4:	90 0d       	add	r25, r0
    13f6:	11 24       	eor	r1, r1
    13f8:	28 0f       	add	r18, r24
    13fa:	39 1f       	adc	r19, r25
    13fc:	8d 81       	ldd	r24, Y+5	; 0x05
    13fe:	9e 81       	ldd	r25, Y+6	; 0x06
    1400:	82 0f       	add	r24, r18
    1402:	93 1f       	adc	r25, r19
    1404:	fc 01       	movw	r30, r24
    1406:	10 82       	st	Z, r1
    1408:	89 81       	ldd	r24, Y+1	; 0x01
    140a:	9a 81       	ldd	r25, Y+2	; 0x02
    140c:	01 96       	adiw	r24, 0x01	; 1
    140e:	9a 83       	std	Y+2, r25	; 0x02
    1410:	89 83       	std	Y+1, r24	; 0x01
    1412:	89 81       	ldd	r24, Y+1	; 0x01
    1414:	9a 81       	ldd	r25, Y+2	; 0x02
    1416:	0c 97       	sbiw	r24, 0x0c	; 12
    1418:	2c f3       	brlt	.-54     	; 0x13e4 <clearRow+0x1c>
    141a:	00 00       	nop
    141c:	26 96       	adiw	r28, 0x06	; 6
    141e:	0f b6       	in	r0, 0x3f	; 63
    1420:	f8 94       	cli
    1422:	de bf       	out	0x3e, r29	; 62
    1424:	0f be       	out	0x3f, r0	; 63
    1426:	cd bf       	out	0x3d, r28	; 61
    1428:	df 91       	pop	r29
    142a:	cf 91       	pop	r28
    142c:	08 95       	ret

0000142e <fillRow>:
    142e:	cf 93       	push	r28
    1430:	df 93       	push	r29
    1432:	00 d0       	rcall	.+0      	; 0x1434 <fillRow+0x6>
    1434:	00 d0       	rcall	.+0      	; 0x1436 <fillRow+0x8>
    1436:	00 d0       	rcall	.+0      	; 0x1438 <fillRow+0xa>
    1438:	cd b7       	in	r28, 0x3d	; 61
    143a:	de b7       	in	r29, 0x3e	; 62
    143c:	9c 83       	std	Y+4, r25	; 0x04
    143e:	8b 83       	std	Y+3, r24	; 0x03
    1440:	7e 83       	std	Y+6, r23	; 0x06
    1442:	6d 83       	std	Y+5, r22	; 0x05
    1444:	1a 82       	std	Y+2, r1	; 0x02
    1446:	19 82       	std	Y+1, r1	; 0x01
    1448:	18 c0       	rjmp	.+48     	; 0x147a <fillRow+0x4c>
    144a:	2b 81       	ldd	r18, Y+3	; 0x03
    144c:	3c 81       	ldd	r19, Y+4	; 0x04
    144e:	49 81       	ldd	r20, Y+1	; 0x01
    1450:	5a 81       	ldd	r21, Y+2	; 0x02
    1452:	65 e1       	ldi	r22, 0x15	; 21
    1454:	64 9f       	mul	r22, r20
    1456:	c0 01       	movw	r24, r0
    1458:	65 9f       	mul	r22, r21
    145a:	90 0d       	add	r25, r0
    145c:	11 24       	eor	r1, r1
    145e:	28 0f       	add	r18, r24
    1460:	39 1f       	adc	r19, r25
    1462:	8d 81       	ldd	r24, Y+5	; 0x05
    1464:	9e 81       	ldd	r25, Y+6	; 0x06
    1466:	82 0f       	add	r24, r18
    1468:	93 1f       	adc	r25, r19
    146a:	21 e0       	ldi	r18, 0x01	; 1
    146c:	fc 01       	movw	r30, r24
    146e:	20 83       	st	Z, r18
    1470:	89 81       	ldd	r24, Y+1	; 0x01
    1472:	9a 81       	ldd	r25, Y+2	; 0x02
    1474:	01 96       	adiw	r24, 0x01	; 1
    1476:	9a 83       	std	Y+2, r25	; 0x02
    1478:	89 83       	std	Y+1, r24	; 0x01
    147a:	89 81       	ldd	r24, Y+1	; 0x01
    147c:	9a 81       	ldd	r25, Y+2	; 0x02
    147e:	0c 97       	sbiw	r24, 0x0c	; 12
    1480:	24 f3       	brlt	.-56     	; 0x144a <fillRow+0x1c>
    1482:	00 00       	nop
    1484:	26 96       	adiw	r28, 0x06	; 6
    1486:	0f b6       	in	r0, 0x3f	; 63
    1488:	f8 94       	cli
    148a:	de bf       	out	0x3e, r29	; 62
    148c:	0f be       	out	0x3f, r0	; 63
    148e:	cd bf       	out	0x3d, r28	; 61
    1490:	df 91       	pop	r29
    1492:	cf 91       	pop	r28
    1494:	08 95       	ret

00001496 <descendRow>:
    1496:	cf 93       	push	r28
    1498:	df 93       	push	r29
    149a:	cd b7       	in	r28, 0x3d	; 61
    149c:	de b7       	in	r29, 0x3e	; 62
    149e:	28 97       	sbiw	r28, 0x08	; 8
    14a0:	0f b6       	in	r0, 0x3f	; 63
    14a2:	f8 94       	cli
    14a4:	de bf       	out	0x3e, r29	; 62
    14a6:	0f be       	out	0x3f, r0	; 63
    14a8:	cd bf       	out	0x3d, r28	; 61
    14aa:	9e 83       	std	Y+6, r25	; 0x06
    14ac:	8d 83       	std	Y+5, r24	; 0x05
    14ae:	78 87       	std	Y+8, r23	; 0x08
    14b0:	6f 83       	std	Y+7, r22	; 0x07
    14b2:	8f 81       	ldd	r24, Y+7	; 0x07
    14b4:	98 85       	ldd	r25, Y+8	; 0x08
    14b6:	9a 83       	std	Y+2, r25	; 0x02
    14b8:	89 83       	std	Y+1, r24	; 0x01
    14ba:	36 c0       	rjmp	.+108    	; 0x1528 <descendRow+0x92>
    14bc:	1c 82       	std	Y+4, r1	; 0x04
    14be:	1b 82       	std	Y+3, r1	; 0x03
    14c0:	2a c0       	rjmp	.+84     	; 0x1516 <descendRow+0x80>
    14c2:	89 81       	ldd	r24, Y+1	; 0x01
    14c4:	9a 81       	ldd	r25, Y+2	; 0x02
    14c6:	01 96       	adiw	r24, 0x01	; 1
    14c8:	4d 81       	ldd	r20, Y+5	; 0x05
    14ca:	5e 81       	ldd	r21, Y+6	; 0x06
    14cc:	6b 81       	ldd	r22, Y+3	; 0x03
    14ce:	7c 81       	ldd	r23, Y+4	; 0x04
    14d0:	e5 e1       	ldi	r30, 0x15	; 21
    14d2:	e6 9f       	mul	r30, r22
    14d4:	90 01       	movw	r18, r0
    14d6:	e7 9f       	mul	r30, r23
    14d8:	30 0d       	add	r19, r0
    14da:	11 24       	eor	r1, r1
    14dc:	24 0f       	add	r18, r20
    14de:	35 1f       	adc	r19, r21
    14e0:	82 0f       	add	r24, r18
    14e2:	93 1f       	adc	r25, r19
    14e4:	fc 01       	movw	r30, r24
    14e6:	60 81       	ld	r22, Z
    14e8:	2d 81       	ldd	r18, Y+5	; 0x05
    14ea:	3e 81       	ldd	r19, Y+6	; 0x06
    14ec:	4b 81       	ldd	r20, Y+3	; 0x03
    14ee:	5c 81       	ldd	r21, Y+4	; 0x04
    14f0:	75 e1       	ldi	r23, 0x15	; 21
    14f2:	74 9f       	mul	r23, r20
    14f4:	c0 01       	movw	r24, r0
    14f6:	75 9f       	mul	r23, r21
    14f8:	90 0d       	add	r25, r0
    14fa:	11 24       	eor	r1, r1
    14fc:	28 0f       	add	r18, r24
    14fe:	39 1f       	adc	r19, r25
    1500:	89 81       	ldd	r24, Y+1	; 0x01
    1502:	9a 81       	ldd	r25, Y+2	; 0x02
    1504:	82 0f       	add	r24, r18
    1506:	93 1f       	adc	r25, r19
    1508:	fc 01       	movw	r30, r24
    150a:	60 83       	st	Z, r22
    150c:	8b 81       	ldd	r24, Y+3	; 0x03
    150e:	9c 81       	ldd	r25, Y+4	; 0x04
    1510:	01 96       	adiw	r24, 0x01	; 1
    1512:	9c 83       	std	Y+4, r25	; 0x04
    1514:	8b 83       	std	Y+3, r24	; 0x03
    1516:	8b 81       	ldd	r24, Y+3	; 0x03
    1518:	9c 81       	ldd	r25, Y+4	; 0x04
    151a:	0c 97       	sbiw	r24, 0x0c	; 12
    151c:	94 f2       	brlt	.-92     	; 0x14c2 <descendRow+0x2c>
    151e:	89 81       	ldd	r24, Y+1	; 0x01
    1520:	9a 81       	ldd	r25, Y+2	; 0x02
    1522:	01 96       	adiw	r24, 0x01	; 1
    1524:	9a 83       	std	Y+2, r25	; 0x02
    1526:	89 83       	std	Y+1, r24	; 0x01
    1528:	89 81       	ldd	r24, Y+1	; 0x01
    152a:	9a 81       	ldd	r25, Y+2	; 0x02
    152c:	01 96       	adiw	r24, 0x01	; 1
    152e:	45 97       	sbiw	r24, 0x15	; 21
    1530:	2c f2       	brlt	.-118    	; 0x14bc <descendRow+0x26>
    1532:	8d 81       	ldd	r24, Y+5	; 0x05
    1534:	9e 81       	ldd	r25, Y+6	; 0x06
    1536:	64 e1       	ldi	r22, 0x14	; 20
    1538:	70 e0       	ldi	r23, 0x00	; 0
    153a:	46 df       	rcall	.-372    	; 0x13c8 <clearRow>
    153c:	00 00       	nop
    153e:	28 96       	adiw	r28, 0x08	; 8
    1540:	0f b6       	in	r0, 0x3f	; 63
    1542:	f8 94       	cli
    1544:	de bf       	out	0x3e, r29	; 62
    1546:	0f be       	out	0x3f, r0	; 63
    1548:	cd bf       	out	0x3d, r28	; 61
    154a:	df 91       	pop	r29
    154c:	cf 91       	pop	r28
    154e:	08 95       	ret

00001550 <rowFull>:
    1550:	cf 93       	push	r28
    1552:	df 93       	push	r29
    1554:	00 d0       	rcall	.+0      	; 0x1556 <rowFull+0x6>
    1556:	00 d0       	rcall	.+0      	; 0x1558 <rowFull+0x8>
    1558:	00 d0       	rcall	.+0      	; 0x155a <rowFull+0xa>
    155a:	cd b7       	in	r28, 0x3d	; 61
    155c:	de b7       	in	r29, 0x3e	; 62
    155e:	9c 83       	std	Y+4, r25	; 0x04
    1560:	8b 83       	std	Y+3, r24	; 0x03
    1562:	7e 83       	std	Y+6, r23	; 0x06
    1564:	6d 83       	std	Y+5, r22	; 0x05
    1566:	1a 82       	std	Y+2, r1	; 0x02
    1568:	19 82       	std	Y+1, r1	; 0x01
    156a:	1b c0       	rjmp	.+54     	; 0x15a2 <rowFull+0x52>
    156c:	2b 81       	ldd	r18, Y+3	; 0x03
    156e:	3c 81       	ldd	r19, Y+4	; 0x04
    1570:	49 81       	ldd	r20, Y+1	; 0x01
    1572:	5a 81       	ldd	r21, Y+2	; 0x02
    1574:	65 e1       	ldi	r22, 0x15	; 21
    1576:	64 9f       	mul	r22, r20
    1578:	c0 01       	movw	r24, r0
    157a:	65 9f       	mul	r22, r21
    157c:	90 0d       	add	r25, r0
    157e:	11 24       	eor	r1, r1
    1580:	28 0f       	add	r18, r24
    1582:	39 1f       	adc	r19, r25
    1584:	8d 81       	ldd	r24, Y+5	; 0x05
    1586:	9e 81       	ldd	r25, Y+6	; 0x06
    1588:	82 0f       	add	r24, r18
    158a:	93 1f       	adc	r25, r19
    158c:	fc 01       	movw	r30, r24
    158e:	80 81       	ld	r24, Z
    1590:	88 23       	and	r24, r24
    1592:	11 f4       	brne	.+4      	; 0x1598 <rowFull+0x48>
    1594:	80 e0       	ldi	r24, 0x00	; 0
    1596:	0a c0       	rjmp	.+20     	; 0x15ac <rowFull+0x5c>
    1598:	89 81       	ldd	r24, Y+1	; 0x01
    159a:	9a 81       	ldd	r25, Y+2	; 0x02
    159c:	01 96       	adiw	r24, 0x01	; 1
    159e:	9a 83       	std	Y+2, r25	; 0x02
    15a0:	89 83       	std	Y+1, r24	; 0x01
    15a2:	89 81       	ldd	r24, Y+1	; 0x01
    15a4:	9a 81       	ldd	r25, Y+2	; 0x02
    15a6:	0c 97       	sbiw	r24, 0x0c	; 12
    15a8:	0c f3       	brlt	.-62     	; 0x156c <rowFull+0x1c>
    15aa:	81 e0       	ldi	r24, 0x01	; 1
    15ac:	26 96       	adiw	r28, 0x06	; 6
    15ae:	0f b6       	in	r0, 0x3f	; 63
    15b0:	f8 94       	cli
    15b2:	de bf       	out	0x3e, r29	; 62
    15b4:	0f be       	out	0x3f, r0	; 63
    15b6:	cd bf       	out	0x3d, r28	; 61
    15b8:	df 91       	pop	r29
    15ba:	cf 91       	pop	r28
    15bc:	08 95       	ret

000015be <rowEmpty>:
    15be:	cf 93       	push	r28
    15c0:	df 93       	push	r29
    15c2:	00 d0       	rcall	.+0      	; 0x15c4 <rowEmpty+0x6>
    15c4:	00 d0       	rcall	.+0      	; 0x15c6 <rowEmpty+0x8>
    15c6:	00 d0       	rcall	.+0      	; 0x15c8 <rowEmpty+0xa>
    15c8:	cd b7       	in	r28, 0x3d	; 61
    15ca:	de b7       	in	r29, 0x3e	; 62
    15cc:	9c 83       	std	Y+4, r25	; 0x04
    15ce:	8b 83       	std	Y+3, r24	; 0x03
    15d0:	7e 83       	std	Y+6, r23	; 0x06
    15d2:	6d 83       	std	Y+5, r22	; 0x05
    15d4:	1a 82       	std	Y+2, r1	; 0x02
    15d6:	19 82       	std	Y+1, r1	; 0x01
    15d8:	1b c0       	rjmp	.+54     	; 0x1610 <rowEmpty+0x52>
    15da:	2b 81       	ldd	r18, Y+3	; 0x03
    15dc:	3c 81       	ldd	r19, Y+4	; 0x04
    15de:	49 81       	ldd	r20, Y+1	; 0x01
    15e0:	5a 81       	ldd	r21, Y+2	; 0x02
    15e2:	65 e1       	ldi	r22, 0x15	; 21
    15e4:	64 9f       	mul	r22, r20
    15e6:	c0 01       	movw	r24, r0
    15e8:	65 9f       	mul	r22, r21
    15ea:	90 0d       	add	r25, r0
    15ec:	11 24       	eor	r1, r1
    15ee:	28 0f       	add	r18, r24
    15f0:	39 1f       	adc	r19, r25
    15f2:	8d 81       	ldd	r24, Y+5	; 0x05
    15f4:	9e 81       	ldd	r25, Y+6	; 0x06
    15f6:	82 0f       	add	r24, r18
    15f8:	93 1f       	adc	r25, r19
    15fa:	fc 01       	movw	r30, r24
    15fc:	80 81       	ld	r24, Z
    15fe:	88 23       	and	r24, r24
    1600:	11 f4       	brne	.+4      	; 0x1606 <rowEmpty+0x48>
    1602:	80 e0       	ldi	r24, 0x00	; 0
    1604:	0a c0       	rjmp	.+20     	; 0x161a <rowEmpty+0x5c>
    1606:	89 81       	ldd	r24, Y+1	; 0x01
    1608:	9a 81       	ldd	r25, Y+2	; 0x02
    160a:	01 96       	adiw	r24, 0x01	; 1
    160c:	9a 83       	std	Y+2, r25	; 0x02
    160e:	89 83       	std	Y+1, r24	; 0x01
    1610:	89 81       	ldd	r24, Y+1	; 0x01
    1612:	9a 81       	ldd	r25, Y+2	; 0x02
    1614:	0c 97       	sbiw	r24, 0x0c	; 12
    1616:	0c f3       	brlt	.-62     	; 0x15da <rowEmpty+0x1c>
    1618:	81 e0       	ldi	r24, 0x01	; 1
    161a:	26 96       	adiw	r28, 0x06	; 6
    161c:	0f b6       	in	r0, 0x3f	; 63
    161e:	f8 94       	cli
    1620:	de bf       	out	0x3e, r29	; 62
    1622:	0f be       	out	0x3f, r0	; 63
    1624:	cd bf       	out	0x3d, r28	; 61
    1626:	df 91       	pop	r29
    1628:	cf 91       	pop	r28
    162a:	08 95       	ret

0000162c <inBoundsPoint>:
    162c:	cf 93       	push	r28
    162e:	df 93       	push	r29
    1630:	00 d0       	rcall	.+0      	; 0x1632 <inBoundsPoint+0x6>
    1632:	00 d0       	rcall	.+0      	; 0x1634 <inBoundsPoint+0x8>
    1634:	cd b7       	in	r28, 0x3d	; 61
    1636:	de b7       	in	r29, 0x3e	; 62
    1638:	9a 83       	std	Y+2, r25	; 0x02
    163a:	89 83       	std	Y+1, r24	; 0x01
    163c:	7c 83       	std	Y+4, r23	; 0x04
    163e:	6b 83       	std	Y+3, r22	; 0x03
    1640:	8b 81       	ldd	r24, Y+3	; 0x03
    1642:	9c 81       	ldd	r25, Y+4	; 0x04
    1644:	fc 01       	movw	r30, r24
    1646:	80 81       	ld	r24, Z
    1648:	91 81       	ldd	r25, Z+1	; 0x01
    164a:	99 23       	and	r25, r25
    164c:	c4 f0       	brlt	.+48     	; 0x167e <inBoundsPoint+0x52>
    164e:	8b 81       	ldd	r24, Y+3	; 0x03
    1650:	9c 81       	ldd	r25, Y+4	; 0x04
    1652:	fc 01       	movw	r30, r24
    1654:	80 81       	ld	r24, Z
    1656:	91 81       	ldd	r25, Z+1	; 0x01
    1658:	0c 97       	sbiw	r24, 0x0c	; 12
    165a:	8c f4       	brge	.+34     	; 0x167e <inBoundsPoint+0x52>
    165c:	8b 81       	ldd	r24, Y+3	; 0x03
    165e:	9c 81       	ldd	r25, Y+4	; 0x04
    1660:	fc 01       	movw	r30, r24
    1662:	82 81       	ldd	r24, Z+2	; 0x02
    1664:	93 81       	ldd	r25, Z+3	; 0x03
    1666:	99 23       	and	r25, r25
    1668:	54 f0       	brlt	.+20     	; 0x167e <inBoundsPoint+0x52>
    166a:	8b 81       	ldd	r24, Y+3	; 0x03
    166c:	9c 81       	ldd	r25, Y+4	; 0x04
    166e:	fc 01       	movw	r30, r24
    1670:	82 81       	ldd	r24, Z+2	; 0x02
    1672:	93 81       	ldd	r25, Z+3	; 0x03
    1674:	45 97       	sbiw	r24, 0x15	; 21
    1676:	1c f4       	brge	.+6      	; 0x167e <inBoundsPoint+0x52>
    1678:	81 e0       	ldi	r24, 0x01	; 1
    167a:	90 e0       	ldi	r25, 0x00	; 0
    167c:	02 c0       	rjmp	.+4      	; 0x1682 <inBoundsPoint+0x56>
    167e:	80 e0       	ldi	r24, 0x00	; 0
    1680:	90 e0       	ldi	r25, 0x00	; 0
    1682:	0f 90       	pop	r0
    1684:	0f 90       	pop	r0
    1686:	0f 90       	pop	r0
    1688:	0f 90       	pop	r0
    168a:	df 91       	pop	r29
    168c:	cf 91       	pop	r28
    168e:	08 95       	ret

00001690 <inBoundsOpen>:
    1690:	cf 93       	push	r28
    1692:	df 93       	push	r29
    1694:	cd b7       	in	r28, 0x3d	; 61
    1696:	de b7       	in	r29, 0x3e	; 62
    1698:	2a 97       	sbiw	r28, 0x0a	; 10
    169a:	0f b6       	in	r0, 0x3f	; 63
    169c:	f8 94       	cli
    169e:	de bf       	out	0x3e, r29	; 62
    16a0:	0f be       	out	0x3f, r0	; 63
    16a2:	cd bf       	out	0x3d, r28	; 61
    16a4:	98 87       	std	Y+8, r25	; 0x08
    16a6:	8f 83       	std	Y+7, r24	; 0x07
    16a8:	7a 87       	std	Y+10, r23	; 0x0a
    16aa:	69 87       	std	Y+9, r22	; 0x09
    16ac:	1a 82       	std	Y+2, r1	; 0x02
    16ae:	19 82       	std	Y+1, r1	; 0x01
    16b0:	25 c0       	rjmp	.+74     	; 0x16fc <inBoundsOpen+0x6c>
    16b2:	29 81       	ldd	r18, Y+1	; 0x01
    16b4:	3a 81       	ldd	r19, Y+2	; 0x02
    16b6:	89 85       	ldd	r24, Y+9	; 0x09
    16b8:	9a 85       	ldd	r25, Y+10	; 0x0a
    16ba:	b9 01       	movw	r22, r18
    16bc:	a7 dc       	rcall	.-1714   	; 0x100c <getTile>
    16be:	dc 01       	movw	r26, r24
    16c0:	cb 01       	movw	r24, r22
    16c2:	8b 83       	std	Y+3, r24	; 0x03
    16c4:	9c 83       	std	Y+4, r25	; 0x04
    16c6:	ad 83       	std	Y+5, r26	; 0x05
    16c8:	be 83       	std	Y+6, r27	; 0x06
    16ca:	9e 01       	movw	r18, r28
    16cc:	2d 5f       	subi	r18, 0xFD	; 253
    16ce:	3f 4f       	sbci	r19, 0xFF	; 255
    16d0:	8f 81       	ldd	r24, Y+7	; 0x07
    16d2:	98 85       	ldd	r25, Y+8	; 0x08
    16d4:	b9 01       	movw	r22, r18
    16d6:	aa df       	rcall	.-172    	; 0x162c <inBoundsPoint>
    16d8:	88 23       	and	r24, r24
    16da:	49 f0       	breq	.+18     	; 0x16ee <inBoundsOpen+0x5e>
    16dc:	9e 01       	movw	r18, r28
    16de:	2d 5f       	subi	r18, 0xFD	; 253
    16e0:	3f 4f       	sbci	r19, 0xFF	; 255
    16e2:	8f 81       	ldd	r24, Y+7	; 0x07
    16e4:	98 85       	ldd	r25, Y+8	; 0x08
    16e6:	b9 01       	movw	r22, r18
    16e8:	46 de       	rcall	.-884    	; 0x1376 <getPoint>
    16ea:	88 23       	and	r24, r24
    16ec:	11 f0       	breq	.+4      	; 0x16f2 <inBoundsOpen+0x62>
    16ee:	80 e0       	ldi	r24, 0x00	; 0
    16f0:	0a c0       	rjmp	.+20     	; 0x1706 <inBoundsOpen+0x76>
    16f2:	89 81       	ldd	r24, Y+1	; 0x01
    16f4:	9a 81       	ldd	r25, Y+2	; 0x02
    16f6:	01 96       	adiw	r24, 0x01	; 1
    16f8:	9a 83       	std	Y+2, r25	; 0x02
    16fa:	89 83       	std	Y+1, r24	; 0x01
    16fc:	89 81       	ldd	r24, Y+1	; 0x01
    16fe:	9a 81       	ldd	r25, Y+2	; 0x02
    1700:	04 97       	sbiw	r24, 0x04	; 4
    1702:	b8 f2       	brcs	.-82     	; 0x16b2 <inBoundsOpen+0x22>
    1704:	81 e0       	ldi	r24, 0x01	; 1
    1706:	2a 96       	adiw	r28, 0x0a	; 10
    1708:	0f b6       	in	r0, 0x3f	; 63
    170a:	f8 94       	cli
    170c:	de bf       	out	0x3e, r29	; 62
    170e:	0f be       	out	0x3f, r0	; 63
    1710:	cd bf       	out	0x3d, r28	; 61
    1712:	df 91       	pop	r29
    1714:	cf 91       	pop	r28
    1716:	08 95       	ret

00001718 <land>:
    1718:	cf 93       	push	r28
    171a:	df 93       	push	r29
    171c:	cd b7       	in	r28, 0x3d	; 61
    171e:	de b7       	in	r29, 0x3e	; 62
    1720:	2a 97       	sbiw	r28, 0x0a	; 10
    1722:	0f b6       	in	r0, 0x3f	; 63
    1724:	f8 94       	cli
    1726:	de bf       	out	0x3e, r29	; 62
    1728:	0f be       	out	0x3f, r0	; 63
    172a:	cd bf       	out	0x3d, r28	; 61
    172c:	98 87       	std	Y+8, r25	; 0x08
    172e:	8f 83       	std	Y+7, r24	; 0x07
    1730:	7a 87       	std	Y+10, r23	; 0x0a
    1732:	69 87       	std	Y+9, r22	; 0x09
    1734:	1a 82       	std	Y+2, r1	; 0x02
    1736:	19 82       	std	Y+1, r1	; 0x01
    1738:	31 c0       	rjmp	.+98     	; 0x179c <land+0x84>
    173a:	29 81       	ldd	r18, Y+1	; 0x01
    173c:	3a 81       	ldd	r19, Y+2	; 0x02
    173e:	89 85       	ldd	r24, Y+9	; 0x09
    1740:	9a 85       	ldd	r25, Y+10	; 0x0a
    1742:	b9 01       	movw	r22, r18
    1744:	63 dc       	rcall	.-1850   	; 0x100c <getTile>
    1746:	dc 01       	movw	r26, r24
    1748:	cb 01       	movw	r24, r22
    174a:	8b 83       	std	Y+3, r24	; 0x03
    174c:	9c 83       	std	Y+4, r25	; 0x04
    174e:	ad 83       	std	Y+5, r26	; 0x05
    1750:	be 83       	std	Y+6, r27	; 0x06
    1752:	8d 81       	ldd	r24, Y+5	; 0x05
    1754:	9e 81       	ldd	r25, Y+6	; 0x06
    1756:	18 16       	cp	r1, r24
    1758:	19 06       	cpc	r1, r25
    175a:	14 f0       	brlt	.+4      	; 0x1760 <land+0x48>
    175c:	81 e0       	ldi	r24, 0x01	; 1
    175e:	23 c0       	rjmp	.+70     	; 0x17a6 <land+0x8e>
    1760:	8d 81       	ldd	r24, Y+5	; 0x05
    1762:	9e 81       	ldd	r25, Y+6	; 0x06
    1764:	01 97       	sbiw	r24, 0x01	; 1
    1766:	9e 83       	std	Y+6, r25	; 0x06
    1768:	8d 83       	std	Y+5, r24	; 0x05
    176a:	9e 01       	movw	r18, r28
    176c:	2d 5f       	subi	r18, 0xFD	; 253
    176e:	3f 4f       	sbci	r19, 0xFF	; 255
    1770:	8f 81       	ldd	r24, Y+7	; 0x07
    1772:	98 85       	ldd	r25, Y+8	; 0x08
    1774:	b9 01       	movw	r22, r18
    1776:	5a df       	rcall	.-332    	; 0x162c <inBoundsPoint>
    1778:	88 23       	and	r24, r24
    177a:	59 f0       	breq	.+22     	; 0x1792 <land+0x7a>
    177c:	9e 01       	movw	r18, r28
    177e:	2d 5f       	subi	r18, 0xFD	; 253
    1780:	3f 4f       	sbci	r19, 0xFF	; 255
    1782:	8f 81       	ldd	r24, Y+7	; 0x07
    1784:	98 85       	ldd	r25, Y+8	; 0x08
    1786:	b9 01       	movw	r22, r18
    1788:	f6 dd       	rcall	.-1044   	; 0x1376 <getPoint>
    178a:	88 23       	and	r24, r24
    178c:	11 f0       	breq	.+4      	; 0x1792 <land+0x7a>
    178e:	81 e0       	ldi	r24, 0x01	; 1
    1790:	0a c0       	rjmp	.+20     	; 0x17a6 <land+0x8e>
    1792:	89 81       	ldd	r24, Y+1	; 0x01
    1794:	9a 81       	ldd	r25, Y+2	; 0x02
    1796:	01 96       	adiw	r24, 0x01	; 1
    1798:	9a 83       	std	Y+2, r25	; 0x02
    179a:	89 83       	std	Y+1, r24	; 0x01
    179c:	89 81       	ldd	r24, Y+1	; 0x01
    179e:	9a 81       	ldd	r25, Y+2	; 0x02
    17a0:	04 97       	sbiw	r24, 0x04	; 4
    17a2:	58 f2       	brcs	.-106    	; 0x173a <land+0x22>
    17a4:	80 e0       	ldi	r24, 0x00	; 0
    17a6:	2a 96       	adiw	r28, 0x0a	; 10
    17a8:	0f b6       	in	r0, 0x3f	; 63
    17aa:	f8 94       	cli
    17ac:	de bf       	out	0x3e, r29	; 62
    17ae:	0f be       	out	0x3f, r0	; 63
    17b0:	cd bf       	out	0x3d, r28	; 61
    17b2:	df 91       	pop	r29
    17b4:	cf 91       	pop	r28
    17b6:	08 95       	ret

000017b8 <tryMirror>:
    17b8:	cf 93       	push	r28
    17ba:	df 93       	push	r29
    17bc:	00 d0       	rcall	.+0      	; 0x17be <tryMirror+0x6>
    17be:	00 d0       	rcall	.+0      	; 0x17c0 <tryMirror+0x8>
    17c0:	cd b7       	in	r28, 0x3d	; 61
    17c2:	de b7       	in	r29, 0x3e	; 62
    17c4:	9a 83       	std	Y+2, r25	; 0x02
    17c6:	89 83       	std	Y+1, r24	; 0x01
    17c8:	7c 83       	std	Y+4, r23	; 0x04
    17ca:	6b 83       	std	Y+3, r22	; 0x03
    17cc:	8b 81       	ldd	r24, Y+3	; 0x03
    17ce:	9c 81       	ldd	r25, Y+4	; 0x04
    17d0:	8c dc       	rcall	.-1768   	; 0x10ea <mirror>
    17d2:	2b 81       	ldd	r18, Y+3	; 0x03
    17d4:	3c 81       	ldd	r19, Y+4	; 0x04
    17d6:	89 81       	ldd	r24, Y+1	; 0x01
    17d8:	9a 81       	ldd	r25, Y+2	; 0x02
    17da:	b9 01       	movw	r22, r18
    17dc:	59 df       	rcall	.-334    	; 0x1690 <inBoundsOpen>
    17de:	88 23       	and	r24, r24
    17e0:	21 f4       	brne	.+8      	; 0x17ea <tryMirror+0x32>
    17e2:	8b 81       	ldd	r24, Y+3	; 0x03
    17e4:	9c 81       	ldd	r25, Y+4	; 0x04
    17e6:	81 dc       	rcall	.-1790   	; 0x10ea <mirror>
    17e8:	01 c0       	rjmp	.+2      	; 0x17ec <tryMirror+0x34>
    17ea:	00 00       	nop
    17ec:	0f 90       	pop	r0
    17ee:	0f 90       	pop	r0
    17f0:	0f 90       	pop	r0
    17f2:	0f 90       	pop	r0
    17f4:	df 91       	pop	r29
    17f6:	cf 91       	pop	r28
    17f8:	08 95       	ret

000017fa <tryTurnCCW>:
    17fa:	cf 93       	push	r28
    17fc:	df 93       	push	r29
    17fe:	00 d0       	rcall	.+0      	; 0x1800 <tryTurnCCW+0x6>
    1800:	00 d0       	rcall	.+0      	; 0x1802 <tryTurnCCW+0x8>
    1802:	cd b7       	in	r28, 0x3d	; 61
    1804:	de b7       	in	r29, 0x3e	; 62
    1806:	9a 83       	std	Y+2, r25	; 0x02
    1808:	89 83       	std	Y+1, r24	; 0x01
    180a:	7c 83       	std	Y+4, r23	; 0x04
    180c:	6b 83       	std	Y+3, r22	; 0x03
    180e:	8b 81       	ldd	r24, Y+3	; 0x03
    1810:	9c 81       	ldd	r25, Y+4	; 0x04
    1812:	a7 dc       	rcall	.-1714   	; 0x1162 <turnCCW>
    1814:	2b 81       	ldd	r18, Y+3	; 0x03
    1816:	3c 81       	ldd	r19, Y+4	; 0x04
    1818:	89 81       	ldd	r24, Y+1	; 0x01
    181a:	9a 81       	ldd	r25, Y+2	; 0x02
    181c:	b9 01       	movw	r22, r18
    181e:	38 df       	rcall	.-400    	; 0x1690 <inBoundsOpen>
    1820:	88 23       	and	r24, r24
    1822:	21 f4       	brne	.+8      	; 0x182c <tryTurnCCW+0x32>
    1824:	8b 81       	ldd	r24, Y+3	; 0x03
    1826:	9c 81       	ldd	r25, Y+4	; 0x04
    1828:	c4 dc       	rcall	.-1656   	; 0x11b2 <turnCW>
    182a:	01 c0       	rjmp	.+2      	; 0x182e <tryTurnCCW+0x34>
    182c:	00 00       	nop
    182e:	0f 90       	pop	r0
    1830:	0f 90       	pop	r0
    1832:	0f 90       	pop	r0
    1834:	0f 90       	pop	r0
    1836:	df 91       	pop	r29
    1838:	cf 91       	pop	r28
    183a:	08 95       	ret

0000183c <tryTurnCW>:
    183c:	cf 93       	push	r28
    183e:	df 93       	push	r29
    1840:	00 d0       	rcall	.+0      	; 0x1842 <tryTurnCW+0x6>
    1842:	00 d0       	rcall	.+0      	; 0x1844 <tryTurnCW+0x8>
    1844:	cd b7       	in	r28, 0x3d	; 61
    1846:	de b7       	in	r29, 0x3e	; 62
    1848:	9a 83       	std	Y+2, r25	; 0x02
    184a:	89 83       	std	Y+1, r24	; 0x01
    184c:	7c 83       	std	Y+4, r23	; 0x04
    184e:	6b 83       	std	Y+3, r22	; 0x03
    1850:	8b 81       	ldd	r24, Y+3	; 0x03
    1852:	9c 81       	ldd	r25, Y+4	; 0x04
    1854:	ae dc       	rcall	.-1700   	; 0x11b2 <turnCW>
    1856:	2b 81       	ldd	r18, Y+3	; 0x03
    1858:	3c 81       	ldd	r19, Y+4	; 0x04
    185a:	89 81       	ldd	r24, Y+1	; 0x01
    185c:	9a 81       	ldd	r25, Y+2	; 0x02
    185e:	b9 01       	movw	r22, r18
    1860:	17 df       	rcall	.-466    	; 0x1690 <inBoundsOpen>
    1862:	88 23       	and	r24, r24
    1864:	21 f4       	brne	.+8      	; 0x186e <tryTurnCW+0x32>
    1866:	8b 81       	ldd	r24, Y+3	; 0x03
    1868:	9c 81       	ldd	r25, Y+4	; 0x04
    186a:	7b dc       	rcall	.-1802   	; 0x1162 <turnCCW>
    186c:	01 c0       	rjmp	.+2      	; 0x1870 <tryTurnCW+0x34>
    186e:	00 00       	nop
    1870:	0f 90       	pop	r0
    1872:	0f 90       	pop	r0
    1874:	0f 90       	pop	r0
    1876:	0f 90       	pop	r0
    1878:	df 91       	pop	r29
    187a:	cf 91       	pop	r28
    187c:	08 95       	ret

0000187e <tryShiftRight>:
    187e:	cf 93       	push	r28
    1880:	df 93       	push	r29
    1882:	00 d0       	rcall	.+0      	; 0x1884 <tryShiftRight+0x6>
    1884:	00 d0       	rcall	.+0      	; 0x1886 <tryShiftRight+0x8>
    1886:	cd b7       	in	r28, 0x3d	; 61
    1888:	de b7       	in	r29, 0x3e	; 62
    188a:	9a 83       	std	Y+2, r25	; 0x02
    188c:	89 83       	std	Y+1, r24	; 0x01
    188e:	7c 83       	std	Y+4, r23	; 0x04
    1890:	6b 83       	std	Y+3, r22	; 0x03
    1892:	8b 81       	ldd	r24, Y+3	; 0x03
    1894:	9c 81       	ldd	r25, Y+4	; 0x04
    1896:	f7 db       	rcall	.-2066   	; 0x1086 <right>
    1898:	2b 81       	ldd	r18, Y+3	; 0x03
    189a:	3c 81       	ldd	r19, Y+4	; 0x04
    189c:	89 81       	ldd	r24, Y+1	; 0x01
    189e:	9a 81       	ldd	r25, Y+2	; 0x02
    18a0:	b9 01       	movw	r22, r18
    18a2:	f6 de       	rcall	.-532    	; 0x1690 <inBoundsOpen>
    18a4:	88 23       	and	r24, r24
    18a6:	21 f4       	brne	.+8      	; 0x18b0 <tryShiftRight+0x32>
    18a8:	8b 81       	ldd	r24, Y+3	; 0x03
    18aa:	9c 81       	ldd	r25, Y+4	; 0x04
    18ac:	05 dc       	rcall	.-2038   	; 0x10b8 <left>
    18ae:	01 c0       	rjmp	.+2      	; 0x18b2 <tryShiftRight+0x34>
    18b0:	00 00       	nop
    18b2:	0f 90       	pop	r0
    18b4:	0f 90       	pop	r0
    18b6:	0f 90       	pop	r0
    18b8:	0f 90       	pop	r0
    18ba:	df 91       	pop	r29
    18bc:	cf 91       	pop	r28
    18be:	08 95       	ret

000018c0 <tryShiftLeft>:
    18c0:	cf 93       	push	r28
    18c2:	df 93       	push	r29
    18c4:	00 d0       	rcall	.+0      	; 0x18c6 <tryShiftLeft+0x6>
    18c6:	00 d0       	rcall	.+0      	; 0x18c8 <tryShiftLeft+0x8>
    18c8:	cd b7       	in	r28, 0x3d	; 61
    18ca:	de b7       	in	r29, 0x3e	; 62
    18cc:	9a 83       	std	Y+2, r25	; 0x02
    18ce:	89 83       	std	Y+1, r24	; 0x01
    18d0:	7c 83       	std	Y+4, r23	; 0x04
    18d2:	6b 83       	std	Y+3, r22	; 0x03
    18d4:	8b 81       	ldd	r24, Y+3	; 0x03
    18d6:	9c 81       	ldd	r25, Y+4	; 0x04
    18d8:	ef db       	rcall	.-2082   	; 0x10b8 <left>
    18da:	2b 81       	ldd	r18, Y+3	; 0x03
    18dc:	3c 81       	ldd	r19, Y+4	; 0x04
    18de:	89 81       	ldd	r24, Y+1	; 0x01
    18e0:	9a 81       	ldd	r25, Y+2	; 0x02
    18e2:	b9 01       	movw	r22, r18
    18e4:	d5 de       	rcall	.-598    	; 0x1690 <inBoundsOpen>
    18e6:	88 23       	and	r24, r24
    18e8:	21 f4       	brne	.+8      	; 0x18f2 <tryShiftLeft+0x32>
    18ea:	8b 81       	ldd	r24, Y+3	; 0x03
    18ec:	9c 81       	ldd	r25, Y+4	; 0x04
    18ee:	cb db       	rcall	.-2154   	; 0x1086 <right>
    18f0:	01 c0       	rjmp	.+2      	; 0x18f4 <tryShiftLeft+0x34>
    18f2:	00 00       	nop
    18f4:	0f 90       	pop	r0
    18f6:	0f 90       	pop	r0
    18f8:	0f 90       	pop	r0
    18fa:	0f 90       	pop	r0
    18fc:	df 91       	pop	r29
    18fe:	cf 91       	pop	r28
    1900:	08 95       	ret

00001902 <place>:
    1902:	cf 93       	push	r28
    1904:	df 93       	push	r29
    1906:	cd b7       	in	r28, 0x3d	; 61
    1908:	de b7       	in	r29, 0x3e	; 62
    190a:	2a 97       	sbiw	r28, 0x0a	; 10
    190c:	0f b6       	in	r0, 0x3f	; 63
    190e:	f8 94       	cli
    1910:	de bf       	out	0x3e, r29	; 62
    1912:	0f be       	out	0x3f, r0	; 63
    1914:	cd bf       	out	0x3d, r28	; 61
    1916:	98 87       	std	Y+8, r25	; 0x08
    1918:	8f 83       	std	Y+7, r24	; 0x07
    191a:	7a 87       	std	Y+10, r23	; 0x0a
    191c:	69 87       	std	Y+9, r22	; 0x09
    191e:	1a 82       	std	Y+2, r1	; 0x02
    1920:	19 82       	std	Y+1, r1	; 0x01
    1922:	2d c0       	rjmp	.+90     	; 0x197e <place+0x7c>
    1924:	29 81       	ldd	r18, Y+1	; 0x01
    1926:	3a 81       	ldd	r19, Y+2	; 0x02
    1928:	89 85       	ldd	r24, Y+9	; 0x09
    192a:	9a 85       	ldd	r25, Y+10	; 0x0a
    192c:	b9 01       	movw	r22, r18
    192e:	6e db       	rcall	.-2340   	; 0x100c <getTile>
    1930:	dc 01       	movw	r26, r24
    1932:	cb 01       	movw	r24, r22
    1934:	8b 83       	std	Y+3, r24	; 0x03
    1936:	9c 83       	std	Y+4, r25	; 0x04
    1938:	ad 83       	std	Y+5, r26	; 0x05
    193a:	be 83       	std	Y+6, r27	; 0x06
    193c:	9e 01       	movw	r18, r28
    193e:	2d 5f       	subi	r18, 0xFD	; 253
    1940:	3f 4f       	sbci	r19, 0xFF	; 255
    1942:	8f 81       	ldd	r24, Y+7	; 0x07
    1944:	98 85       	ldd	r25, Y+8	; 0x08
    1946:	b9 01       	movw	r22, r18
    1948:	71 de       	rcall	.-798    	; 0x162c <inBoundsPoint>
    194a:	88 23       	and	r24, r24
    194c:	99 f0       	breq	.+38     	; 0x1974 <place+0x72>
    194e:	6b 81       	ldd	r22, Y+3	; 0x03
    1950:	7c 81       	ldd	r23, Y+4	; 0x04
    1952:	8d 81       	ldd	r24, Y+5	; 0x05
    1954:	9e 81       	ldd	r25, Y+6	; 0x06
    1956:	4f 81       	ldd	r20, Y+7	; 0x07
    1958:	58 85       	ldd	r21, Y+8	; 0x08
    195a:	e5 e1       	ldi	r30, 0x15	; 21
    195c:	e6 9f       	mul	r30, r22
    195e:	90 01       	movw	r18, r0
    1960:	e7 9f       	mul	r30, r23
    1962:	30 0d       	add	r19, r0
    1964:	11 24       	eor	r1, r1
    1966:	24 0f       	add	r18, r20
    1968:	35 1f       	adc	r19, r21
    196a:	82 0f       	add	r24, r18
    196c:	93 1f       	adc	r25, r19
    196e:	21 e0       	ldi	r18, 0x01	; 1
    1970:	fc 01       	movw	r30, r24
    1972:	20 83       	st	Z, r18
    1974:	89 81       	ldd	r24, Y+1	; 0x01
    1976:	9a 81       	ldd	r25, Y+2	; 0x02
    1978:	01 96       	adiw	r24, 0x01	; 1
    197a:	9a 83       	std	Y+2, r25	; 0x02
    197c:	89 83       	std	Y+1, r24	; 0x01
    197e:	89 81       	ldd	r24, Y+1	; 0x01
    1980:	9a 81       	ldd	r25, Y+2	; 0x02
    1982:	04 97       	sbiw	r24, 0x04	; 4
    1984:	78 f2       	brcs	.-98     	; 0x1924 <place+0x22>
    1986:	00 00       	nop
    1988:	2a 96       	adiw	r28, 0x0a	; 10
    198a:	0f b6       	in	r0, 0x3f	; 63
    198c:	f8 94       	cli
    198e:	de bf       	out	0x3e, r29	; 62
    1990:	0f be       	out	0x3f, r0	; 63
    1992:	cd bf       	out	0x3d, r28	; 61
    1994:	df 91       	pop	r29
    1996:	cf 91       	pop	r28
    1998:	08 95       	ret

0000199a <setScreenState>:
typedef enum GameState { Init, Play, PlayInterval, RowClear, GameOver, GameOverFlash } GameState;
GameState gameState;
unsigned char score = 0;
unsigned char highScore = 0;
unsigned char rnd = 0;
void setScreenState(ScreenState next) {
    199a:	cf 93       	push	r28
    199c:	df 93       	push	r29
    199e:	00 d0       	rcall	.+0      	; 0x19a0 <setScreenState+0x6>
    19a0:	1f 92       	push	r1
    19a2:	cd b7       	in	r28, 0x3d	; 61
    19a4:	de b7       	in	r29, 0x3e	; 62
    19a6:	8b 83       	std	Y+3, r24	; 0x03
	screenState = next;
    19a8:	8b 81       	ldd	r24, Y+3	; 0x03
    19aa:	80 93 71 04 	sts	0x0471, r24	; 0x800471 <screenState>
	unsigned int a = 0;
    19ae:	1a 82       	std	Y+2, r1	; 0x02
    19b0:	19 82       	std	Y+1, r1	; 0x01
	switch(next) {
    19b2:	8b 81       	ldd	r24, Y+3	; 0x03
    19b4:	88 2f       	mov	r24, r24
    19b6:	90 e0       	ldi	r25, 0x00	; 0
    19b8:	81 30       	cpi	r24, 0x01	; 1
    19ba:	91 05       	cpc	r25, r1
    19bc:	61 f0       	breq	.+24     	; 0x19d6 <setScreenState+0x3c>
    19be:	82 30       	cpi	r24, 0x02	; 2
    19c0:	91 05       	cpc	r25, r1
    19c2:	99 f0       	breq	.+38     	; 0x19ea <setScreenState+0x50>
    19c4:	89 2b       	or	r24, r25
    19c6:	09 f0       	breq	.+2      	; 0x19ca <setScreenState+0x30>
			if(score > highScore) {
				store(0, score);
			}
			break;
	}
}
    19c8:	1c c0       	rjmp	.+56     	; 0x1a02 <setScreenState+0x68>
	screenState = next;
	unsigned int a = 0;
	switch(next) {
		case Title:
			//Load the high score
			highScore = load(a);
    19ca:	89 81       	ldd	r24, Y+1	; 0x01
    19cc:	9a 81       	ldd	r25, Y+2	; 0x02
    19ce:	18 d9       	rcall	.-3536   	; 0xc00 <load>
    19d0:	80 93 54 03 	sts	0x0354, r24	; 0x800354 <highScore>
			break;
    19d4:	16 c0       	rjmp	.+44     	; 0x1a02 <setScreenState+0x68>
		case Game:
			//Initialize the game
			gameState = Init;
    19d6:	10 92 72 04 	sts	0x0472, r1	; 0x800472 <gameState>
			//Reset the RNG
			srand(rnd);
    19da:	80 91 55 03 	lds	r24, 0x0355	; 0x800355 <rnd>
    19de:	88 2f       	mov	r24, r24
    19e0:	90 e0       	ldi	r25, 0x00	; 0
    19e2:	85 d7       	rcall	.+3850   	; 0x28ee <srand>
			//Reset the score
			score = 0;
    19e4:	10 92 53 03 	sts	0x0353, r1	; 0x800353 <score>
			break;
    19e8:	0c c0       	rjmp	.+24     	; 0x1a02 <setScreenState+0x68>
		case FinalScore:
			if(score > highScore) {
    19ea:	90 91 53 03 	lds	r25, 0x0353	; 0x800353 <score>
    19ee:	80 91 54 03 	lds	r24, 0x0354	; 0x800354 <highScore>
    19f2:	89 17       	cp	r24, r25
    19f4:	28 f4       	brcc	.+10     	; 0x1a00 <setScreenState+0x66>
				store(0, score);
    19f6:	80 91 53 03 	lds	r24, 0x0353	; 0x800353 <score>
    19fa:	68 2f       	mov	r22, r24
    19fc:	80 e0       	ldi	r24, 0x00	; 0
    19fe:	c0 d8       	rcall	.-3712   	; 0xb80 <store>
			}
			break;
    1a00:	00 00       	nop
	}
}
    1a02:	00 00       	nop
    1a04:	0f 90       	pop	r0
    1a06:	0f 90       	pop	r0
    1a08:	0f 90       	pop	r0
    1a0a:	df 91       	pop	r29
    1a0c:	cf 91       	pop	r28
    1a0e:	08 95       	ret

00001a10 <getLength>:

short getLength(short sh) {
    1a10:	cf 93       	push	r28
    1a12:	df 93       	push	r29
    1a14:	00 d0       	rcall	.+0      	; 0x1a16 <getLength+0x6>
    1a16:	1f 92       	push	r1
    1a18:	cd b7       	in	r28, 0x3d	; 61
    1a1a:	de b7       	in	r29, 0x3e	; 62
    1a1c:	9b 83       	std	Y+3, r25	; 0x03
    1a1e:	8a 83       	std	Y+2, r24	; 0x02
	unsigned char length = 1;
    1a20:	81 e0       	ldi	r24, 0x01	; 1
    1a22:	89 83       	std	Y+1, r24	; 0x01
	//Count the number in case it is 0
	if(sh == 0) {
    1a24:	8a 81       	ldd	r24, Y+2	; 0x02
    1a26:	9b 81       	ldd	r25, Y+3	; 0x03
    1a28:	89 2b       	or	r24, r25
    1a2a:	81 f4       	brne	.+32     	; 0x1a4c <getLength+0x3c>
		length++;
    1a2c:	89 81       	ldd	r24, Y+1	; 0x01
    1a2e:	8f 5f       	subi	r24, 0xFF	; 255
    1a30:	89 83       	std	Y+1, r24	; 0x01
    1a32:	11 c0       	rjmp	.+34     	; 0x1a56 <getLength+0x46>
	} else {
		while(sh > 0) {
			length++;
    1a34:	89 81       	ldd	r24, Y+1	; 0x01
    1a36:	8f 5f       	subi	r24, 0xFF	; 255
    1a38:	89 83       	std	Y+1, r24	; 0x01
			sh /= 10;
    1a3a:	8a 81       	ldd	r24, Y+2	; 0x02
    1a3c:	9b 81       	ldd	r25, Y+3	; 0x03
    1a3e:	2a e0       	ldi	r18, 0x0A	; 10
    1a40:	30 e0       	ldi	r19, 0x00	; 0
    1a42:	b9 01       	movw	r22, r18
    1a44:	da d6       	rcall	.+3508   	; 0x27fa <__divmodhi4>
    1a46:	cb 01       	movw	r24, r22
    1a48:	9b 83       	std	Y+3, r25	; 0x03
    1a4a:	8a 83       	std	Y+2, r24	; 0x02
	unsigned char length = 1;
	//Count the number in case it is 0
	if(sh == 0) {
		length++;
	} else {
		while(sh > 0) {
    1a4c:	8a 81       	ldd	r24, Y+2	; 0x02
    1a4e:	9b 81       	ldd	r25, Y+3	; 0x03
    1a50:	18 16       	cp	r1, r24
    1a52:	19 06       	cpc	r1, r25
    1a54:	7c f3       	brlt	.-34     	; 0x1a34 <getLength+0x24>
			length++;
			sh /= 10;
		}
	}
	return length;
    1a56:	89 81       	ldd	r24, Y+1	; 0x01
    1a58:	88 2f       	mov	r24, r24
    1a5a:	90 e0       	ldi	r25, 0x00	; 0
}
    1a5c:	0f 90       	pop	r0
    1a5e:	0f 90       	pop	r0
    1a60:	0f 90       	pop	r0
    1a62:	df 91       	pop	r29
    1a64:	cf 91       	pop	r28
    1a66:	08 95       	ret

00001a68 <getString>:
void getString(short sh, char* str, short length) {
    1a68:	cf 93       	push	r28
    1a6a:	df 93       	push	r29
    1a6c:	00 d0       	rcall	.+0      	; 0x1a6e <getString+0x6>
    1a6e:	00 d0       	rcall	.+0      	; 0x1a70 <getString+0x8>
    1a70:	00 d0       	rcall	.+0      	; 0x1a72 <getString+0xa>
    1a72:	cd b7       	in	r28, 0x3d	; 61
    1a74:	de b7       	in	r29, 0x3e	; 62
    1a76:	9a 83       	std	Y+2, r25	; 0x02
    1a78:	89 83       	std	Y+1, r24	; 0x01
    1a7a:	7c 83       	std	Y+4, r23	; 0x04
    1a7c:	6b 83       	std	Y+3, r22	; 0x03
    1a7e:	5e 83       	std	Y+6, r21	; 0x06
    1a80:	4d 83       	std	Y+5, r20	; 0x05
	length--;
    1a82:	8d 81       	ldd	r24, Y+5	; 0x05
    1a84:	9e 81       	ldd	r25, Y+6	; 0x06
    1a86:	01 97       	sbiw	r24, 0x01	; 1
    1a88:	9e 83       	std	Y+6, r25	; 0x06
    1a8a:	8d 83       	std	Y+5, r24	; 0x05
	str[length] = 0;
    1a8c:	8d 81       	ldd	r24, Y+5	; 0x05
    1a8e:	9e 81       	ldd	r25, Y+6	; 0x06
    1a90:	2b 81       	ldd	r18, Y+3	; 0x03
    1a92:	3c 81       	ldd	r19, Y+4	; 0x04
    1a94:	82 0f       	add	r24, r18
    1a96:	93 1f       	adc	r25, r19
    1a98:	fc 01       	movw	r30, r24
    1a9a:	10 82       	st	Z, r1
	//Print the number in case it is 0
	if(sh == 0) {
    1a9c:	89 81       	ldd	r24, Y+1	; 0x01
    1a9e:	9a 81       	ldd	r25, Y+2	; 0x02
    1aa0:	89 2b       	or	r24, r25
    1aa2:	61 f5       	brne	.+88     	; 0x1afc <getString+0x94>
		length--;
    1aa4:	8d 81       	ldd	r24, Y+5	; 0x05
    1aa6:	9e 81       	ldd	r25, Y+6	; 0x06
    1aa8:	01 97       	sbiw	r24, 0x01	; 1
    1aaa:	9e 83       	std	Y+6, r25	; 0x06
    1aac:	8d 83       	std	Y+5, r24	; 0x05
		str[length] = '0';
    1aae:	8d 81       	ldd	r24, Y+5	; 0x05
    1ab0:	9e 81       	ldd	r25, Y+6	; 0x06
    1ab2:	2b 81       	ldd	r18, Y+3	; 0x03
    1ab4:	3c 81       	ldd	r19, Y+4	; 0x04
    1ab6:	82 0f       	add	r24, r18
    1ab8:	93 1f       	adc	r25, r19
    1aba:	20 e3       	ldi	r18, 0x30	; 48
    1abc:	fc 01       	movw	r30, r24
    1abe:	20 83       	st	Z, r18
			length--;
			str[length] = '0' + (sh%10);
			sh /= 10;
		}
	}
	return;
    1ac0:	23 c0       	rjmp	.+70     	; 0x1b08 <getString+0xa0>
	if(sh == 0) {
		length--;
		str[length] = '0';
	} else {
		while(sh > 0) {
			length--;
    1ac2:	8d 81       	ldd	r24, Y+5	; 0x05
    1ac4:	9e 81       	ldd	r25, Y+6	; 0x06
    1ac6:	01 97       	sbiw	r24, 0x01	; 1
    1ac8:	9e 83       	std	Y+6, r25	; 0x06
    1aca:	8d 83       	std	Y+5, r24	; 0x05
			str[length] = '0' + (sh%10);
    1acc:	8d 81       	ldd	r24, Y+5	; 0x05
    1ace:	9e 81       	ldd	r25, Y+6	; 0x06
    1ad0:	2b 81       	ldd	r18, Y+3	; 0x03
    1ad2:	3c 81       	ldd	r19, Y+4	; 0x04
    1ad4:	28 0f       	add	r18, r24
    1ad6:	39 1f       	adc	r19, r25
    1ad8:	89 81       	ldd	r24, Y+1	; 0x01
    1ada:	9a 81       	ldd	r25, Y+2	; 0x02
    1adc:	4a e0       	ldi	r20, 0x0A	; 10
    1ade:	50 e0       	ldi	r21, 0x00	; 0
    1ae0:	ba 01       	movw	r22, r20
    1ae2:	8b d6       	rcall	.+3350   	; 0x27fa <__divmodhi4>
    1ae4:	80 5d       	subi	r24, 0xD0	; 208
    1ae6:	f9 01       	movw	r30, r18
    1ae8:	80 83       	st	Z, r24
			sh /= 10;
    1aea:	89 81       	ldd	r24, Y+1	; 0x01
    1aec:	9a 81       	ldd	r25, Y+2	; 0x02
    1aee:	2a e0       	ldi	r18, 0x0A	; 10
    1af0:	30 e0       	ldi	r19, 0x00	; 0
    1af2:	b9 01       	movw	r22, r18
    1af4:	82 d6       	rcall	.+3332   	; 0x27fa <__divmodhi4>
    1af6:	cb 01       	movw	r24, r22
    1af8:	9a 83       	std	Y+2, r25	; 0x02
    1afa:	89 83       	std	Y+1, r24	; 0x01
	//Print the number in case it is 0
	if(sh == 0) {
		length--;
		str[length] = '0';
	} else {
		while(sh > 0) {
    1afc:	89 81       	ldd	r24, Y+1	; 0x01
    1afe:	9a 81       	ldd	r25, Y+2	; 0x02
    1b00:	18 16       	cp	r1, r24
    1b02:	19 06       	cpc	r1, r25
    1b04:	f4 f2       	brlt	.-68     	; 0x1ac2 <getString+0x5a>
			length--;
			str[length] = '0' + (sh%10);
			sh /= 10;
		}
	}
	return;
    1b06:	00 00       	nop
}
    1b08:	26 96       	adiw	r28, 0x06	; 6
    1b0a:	0f b6       	in	r0, 0x3f	; 63
    1b0c:	f8 94       	cli
    1b0e:	de bf       	out	0x3e, r29	; 62
    1b10:	0f be       	out	0x3f, r0	; 63
    1b12:	cd bf       	out	0x3d, r28	; 61
    1b14:	df 91       	pop	r29
    1b16:	cf 91       	pop	r28
    1b18:	08 95       	ret

00001b1a <UpdateTitle>:
void UpdateTitle() {
    1b1a:	ef 92       	push	r14
    1b1c:	ff 92       	push	r15
    1b1e:	0f 93       	push	r16
    1b20:	1f 93       	push	r17
    1b22:	cf 93       	push	r28
    1b24:	df 93       	push	r29
    1b26:	cd b7       	in	r28, 0x3d	; 61
    1b28:	de b7       	in	r29, 0x3e	; 62
    1b2a:	2e 97       	sbiw	r28, 0x0e	; 14
    1b2c:	0f b6       	in	r0, 0x3f	; 63
    1b2e:	f8 94       	cli
    1b30:	de bf       	out	0x3e, r29	; 62
    1b32:	0f be       	out	0x3f, r0	; 63
    1b34:	cd bf       	out	0x3d, r28	; 61
			break;
		case 7:	//Left + Middle + Right
			break;
	}
	pressed_prev = pressed;
}
    1b36:	0d b7       	in	r16, 0x3d	; 61
    1b38:	1e b7       	in	r17, 0x3e	; 62
			sh /= 10;
		}
	}
	return;
}
void UpdateTitle() {
    1b3a:	8d b7       	in	r24, 0x3d	; 61
    1b3c:	9e b7       	in	r25, 0x3e	; 62
    1b3e:	7c 01       	movw	r14, r24
	
	nokia_lcd_clear();
    1b40:	0e 94 6c 03 	call	0x6d8	; 0x6d8 <nokia_lcd_clear>
	nokia_lcd_write_string("Tetris!", 1);
    1b44:	61 e0       	ldi	r22, 0x01	; 1
    1b46:	89 e0       	ldi	r24, 0x09	; 9
    1b48:	91 e0       	ldi	r25, 0x01	; 1
    1b4a:	0e 94 9b 04 	call	0x936	; 0x936 <nokia_lcd_write_string>
	nokia_lcd_set_cursor(0, 10);
    1b4e:	6a e0       	ldi	r22, 0x0A	; 10
    1b50:	80 e0       	ldi	r24, 0x00	; 0
    1b52:	0e 94 bd 04 	call	0x97a	; 0x97a <nokia_lcd_set_cursor>
	nokia_lcd_write_string("High score: ", 1);
    1b56:	61 e0       	ldi	r22, 0x01	; 1
    1b58:	81 e1       	ldi	r24, 0x11	; 17
    1b5a:	91 e0       	ldi	r25, 0x01	; 1
    1b5c:	0e 94 9b 04 	call	0x936	; 0x936 <nokia_lcd_write_string>
	nokia_lcd_set_cursor(0, 20);
    1b60:	64 e1       	ldi	r22, 0x14	; 20
    1b62:	80 e0       	ldi	r24, 0x00	; 0
    1b64:	0e 94 bd 04 	call	0x97a	; 0x97a <nokia_lcd_set_cursor>
	
	unsigned short highScoreLength = getLength(highScore);
    1b68:	80 91 54 03 	lds	r24, 0x0354	; 0x800354 <highScore>
    1b6c:	88 2f       	mov	r24, r24
    1b6e:	90 e0       	ldi	r25, 0x00	; 0
    1b70:	4f df       	rcall	.-354    	; 0x1a10 <getLength>
    1b72:	9a 83       	std	Y+2, r25	; 0x02
    1b74:	89 83       	std	Y+1, r24	; 0x01
	char highScoreString[highScoreLength];
    1b76:	89 81       	ldd	r24, Y+1	; 0x01
    1b78:	9a 81       	ldd	r25, Y+2	; 0x02
    1b7a:	9c 01       	movw	r18, r24
    1b7c:	21 50       	subi	r18, 0x01	; 1
    1b7e:	31 09       	sbc	r19, r1
    1b80:	3c 83       	std	Y+4, r19	; 0x04
    1b82:	2b 83       	std	Y+3, r18	; 0x03
    1b84:	2d b7       	in	r18, 0x3d	; 61
    1b86:	3e b7       	in	r19, 0x3e	; 62
    1b88:	28 1b       	sub	r18, r24
    1b8a:	39 0b       	sbc	r19, r25
    1b8c:	0f b6       	in	r0, 0x3f	; 63
    1b8e:	f8 94       	cli
    1b90:	3e bf       	out	0x3e, r19	; 62
    1b92:	0f be       	out	0x3f, r0	; 63
    1b94:	2d bf       	out	0x3d, r18	; 61
    1b96:	8d b7       	in	r24, 0x3d	; 61
    1b98:	9e b7       	in	r25, 0x3e	; 62
    1b9a:	01 96       	adiw	r24, 0x01	; 1
    1b9c:	9e 83       	std	Y+6, r25	; 0x06
    1b9e:	8d 83       	std	Y+5, r24	; 0x05
	getString(highScore, highScoreString, highScoreLength);
    1ba0:	49 81       	ldd	r20, Y+1	; 0x01
    1ba2:	5a 81       	ldd	r21, Y+2	; 0x02
    1ba4:	2d 81       	ldd	r18, Y+5	; 0x05
    1ba6:	3e 81       	ldd	r19, Y+6	; 0x06
    1ba8:	80 91 54 03 	lds	r24, 0x0354	; 0x800354 <highScore>
    1bac:	88 2f       	mov	r24, r24
    1bae:	90 e0       	ldi	r25, 0x00	; 0
    1bb0:	b9 01       	movw	r22, r18
    1bb2:	5a df       	rcall	.-332    	; 0x1a68 <getString>
	nokia_lcd_write_string(highScoreString, 1);
    1bb4:	8d 81       	ldd	r24, Y+5	; 0x05
    1bb6:	9e 81       	ldd	r25, Y+6	; 0x06
    1bb8:	61 e0       	ldi	r22, 0x01	; 1
    1bba:	0e 94 9b 04 	call	0x936	; 0x936 <nokia_lcd_write_string>

	nokia_lcd_set_cursor(0, 30);
    1bbe:	6e e1       	ldi	r22, 0x1E	; 30
    1bc0:	80 e0       	ldi	r24, 0x00	; 0
    1bc2:	0e 94 bd 04 	call	0x97a	; 0x97a <nokia_lcd_set_cursor>
	nokia_lcd_write_string("Random seed:", 1);
    1bc6:	61 e0       	ldi	r22, 0x01	; 1
    1bc8:	8e e1       	ldi	r24, 0x1E	; 30
    1bca:	91 e0       	ldi	r25, 0x01	; 1
    1bcc:	0e 94 9b 04 	call	0x936	; 0x936 <nokia_lcd_write_string>

	unsigned short rndLength = getLength(rnd);
    1bd0:	80 91 55 03 	lds	r24, 0x0355	; 0x800355 <rnd>
    1bd4:	88 2f       	mov	r24, r24
    1bd6:	90 e0       	ldi	r25, 0x00	; 0
    1bd8:	1b df       	rcall	.-458    	; 0x1a10 <getLength>
    1bda:	98 87       	std	Y+8, r25	; 0x08
    1bdc:	8f 83       	std	Y+7, r24	; 0x07
	char rndString[rndLength];
    1bde:	8f 81       	ldd	r24, Y+7	; 0x07
    1be0:	98 85       	ldd	r25, Y+8	; 0x08
    1be2:	9c 01       	movw	r18, r24
    1be4:	21 50       	subi	r18, 0x01	; 1
    1be6:	31 09       	sbc	r19, r1
    1be8:	3a 87       	std	Y+10, r19	; 0x0a
    1bea:	29 87       	std	Y+9, r18	; 0x09
    1bec:	ed b7       	in	r30, 0x3d	; 61
    1bee:	fe b7       	in	r31, 0x3e	; 62
    1bf0:	e8 1b       	sub	r30, r24
    1bf2:	f9 0b       	sbc	r31, r25
    1bf4:	0f b6       	in	r0, 0x3f	; 63
    1bf6:	f8 94       	cli
    1bf8:	fe bf       	out	0x3e, r31	; 62
    1bfa:	0f be       	out	0x3f, r0	; 63
    1bfc:	ed bf       	out	0x3d, r30	; 61
    1bfe:	8d b7       	in	r24, 0x3d	; 61
    1c00:	9e b7       	in	r25, 0x3e	; 62
    1c02:	01 96       	adiw	r24, 0x01	; 1
    1c04:	9c 87       	std	Y+12, r25	; 0x0c
    1c06:	8b 87       	std	Y+11, r24	; 0x0b
	getString(rnd, rndString, rndLength);
    1c08:	4f 81       	ldd	r20, Y+7	; 0x07
    1c0a:	58 85       	ldd	r21, Y+8	; 0x08
    1c0c:	2b 85       	ldd	r18, Y+11	; 0x0b
    1c0e:	3c 85       	ldd	r19, Y+12	; 0x0c
    1c10:	80 91 55 03 	lds	r24, 0x0355	; 0x800355 <rnd>
    1c14:	88 2f       	mov	r24, r24
    1c16:	90 e0       	ldi	r25, 0x00	; 0
    1c18:	b9 01       	movw	r22, r18
    1c1a:	26 df       	rcall	.-436    	; 0x1a68 <getString>

	nokia_lcd_set_cursor(0, 40);
    1c1c:	68 e2       	ldi	r22, 0x28	; 40
    1c1e:	80 e0       	ldi	r24, 0x00	; 0
    1c20:	0e 94 bd 04 	call	0x97a	; 0x97a <nokia_lcd_set_cursor>
	nokia_lcd_write_string(rndString, 1);
    1c24:	8b 85       	ldd	r24, Y+11	; 0x0b
    1c26:	9c 85       	ldd	r25, Y+12	; 0x0c
    1c28:	61 e0       	ldi	r22, 0x01	; 1
    1c2a:	0e 94 9b 04 	call	0x936	; 0x936 <nokia_lcd_write_string>

	nokia_lcd_render();
    1c2e:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <nokia_lcd_render>


	char pressed = ~PIN_BUTTONS;
    1c32:	89 e2       	ldi	r24, 0x29	; 41
    1c34:	90 e0       	ldi	r25, 0x00	; 0
    1c36:	fc 01       	movw	r30, r24
    1c38:	80 81       	ld	r24, Z
    1c3a:	80 95       	com	r24
    1c3c:	8d 87       	std	Y+13, r24	; 0x0d
	static char pressed_prev = 0;
	char justPressed = pressed & ~pressed_prev;
    1c3e:	80 91 56 03 	lds	r24, 0x0356	; 0x800356 <pressed_prev.2282>
    1c42:	98 2f       	mov	r25, r24
    1c44:	90 95       	com	r25
    1c46:	8d 85       	ldd	r24, Y+13	; 0x0d
    1c48:	89 23       	and	r24, r25
    1c4a:	8e 87       	std	Y+14, r24	; 0x0e
	switch(justPressed) {
    1c4c:	8e 85       	ldd	r24, Y+14	; 0x0e
    1c4e:	88 2f       	mov	r24, r24
    1c50:	90 e0       	ldi	r25, 0x00	; 0
    1c52:	09 2e       	mov	r0, r25
    1c54:	00 0c       	add	r0, r0
    1c56:	aa 0b       	sbc	r26, r26
    1c58:	bb 0b       	sbc	r27, r27
    1c5a:	41 e0       	ldi	r20, 0x01	; 1
    1c5c:	50 e0       	ldi	r21, 0x00	; 0
    1c5e:	26 e0       	ldi	r18, 0x06	; 6
    1c60:	30 e0       	ldi	r19, 0x00	; 0
    1c62:	84 1b       	sub	r24, r20
    1c64:	95 0b       	sbc	r25, r21
    1c66:	28 17       	cp	r18, r24
    1c68:	39 07       	cpc	r19, r25
    1c6a:	a0 f0       	brcs	.+40     	; 0x1c94 <UpdateTitle+0x17a>
    1c6c:	8a 5b       	subi	r24, 0xBA	; 186
    1c6e:	9f 4f       	sbci	r25, 0xFF	; 255
    1c70:	fc 01       	movw	r30, r24
    1c72:	d6 c5       	rjmp	.+2988   	; 0x2820 <__tablejump2__>
		case 1:	//Right
			rnd++;
    1c74:	80 91 55 03 	lds	r24, 0x0355	; 0x800355 <rnd>
    1c78:	8f 5f       	subi	r24, 0xFF	; 255
    1c7a:	80 93 55 03 	sts	0x0355, r24	; 0x800355 <rnd>
			break;
		case 2:	//Middle
			setScreenState(Game);
    1c7e:	0a c0       	rjmp	.+20     	; 0x1c94 <UpdateTitle+0x17a>
    1c80:	81 e0       	ldi	r24, 0x01	; 1
    1c82:	8b de       	rcall	.-746    	; 0x199a <setScreenState>
			break;
    1c84:	07 c0       	rjmp	.+14     	; 0x1c94 <UpdateTitle+0x17a>
		case 3:	//Middle + Right
			break;
		case 4:	//Left
			rnd--;
    1c86:	80 91 55 03 	lds	r24, 0x0355	; 0x800355 <rnd>
    1c8a:	81 50       	subi	r24, 0x01	; 1
    1c8c:	80 93 55 03 	sts	0x0355, r24	; 0x800355 <rnd>
			break;
    1c90:	01 c0       	rjmp	.+2      	; 0x1c94 <UpdateTitle+0x17a>
			break;
		case 6:	//Left + Middle
			
			break;
		case 7:	//Left + Middle + Right
			break;
    1c92:	00 00       	nop
	}
	pressed_prev = pressed;
    1c94:	8d 85       	ldd	r24, Y+13	; 0x0d
    1c96:	80 93 56 03 	sts	0x0356, r24	; 0x800356 <pressed_prev.2282>
    1c9a:	0f b6       	in	r0, 0x3f	; 63
    1c9c:	f8 94       	cli
    1c9e:	fe be       	out	0x3e, r15	; 62
    1ca0:	0f be       	out	0x3f, r0	; 63
    1ca2:	ed be       	out	0x3d, r14	; 61
}
    1ca4:	00 00       	nop
    1ca6:	0f b6       	in	r0, 0x3f	; 63
    1ca8:	f8 94       	cli
    1caa:	1e bf       	out	0x3e, r17	; 62
    1cac:	0f be       	out	0x3f, r0	; 63
    1cae:	0d bf       	out	0x3d, r16	; 61
    1cb0:	2e 96       	adiw	r28, 0x0e	; 14
    1cb2:	0f b6       	in	r0, 0x3f	; 63
    1cb4:	f8 94       	cli
    1cb6:	de bf       	out	0x3e, r29	; 62
    1cb8:	0f be       	out	0x3f, r0	; 63
    1cba:	cd bf       	out	0x3d, r28	; 61
    1cbc:	df 91       	pop	r29
    1cbe:	cf 91       	pop	r28
    1cc0:	1f 91       	pop	r17
    1cc2:	0f 91       	pop	r16
    1cc4:	ff 90       	pop	r15
    1cc6:	ef 90       	pop	r14
    1cc8:	08 95       	ret

00001cca <UpdateFinalScore>:
void UpdateFinalScore() {
    1cca:	ef 92       	push	r14
    1ccc:	ff 92       	push	r15
    1cce:	0f 93       	push	r16
    1cd0:	1f 93       	push	r17
    1cd2:	cf 93       	push	r28
    1cd4:	df 93       	push	r29
    1cd6:	cd b7       	in	r28, 0x3d	; 61
    1cd8:	de b7       	in	r29, 0x3e	; 62
    1cda:	2e 97       	sbiw	r28, 0x0e	; 14
    1cdc:	0f b6       	in	r0, 0x3f	; 63
    1cde:	f8 94       	cli
    1ce0:	de bf       	out	0x3e, r29	; 62
    1ce2:	0f be       	out	0x3f, r0	; 63
    1ce4:	cd bf       	out	0x3d, r28	; 61
		default:
			setScreenState(Title);
			break;
	}
	pressed_prev = pressed;
}
    1ce6:	0d b7       	in	r16, 0x3d	; 61
    1ce8:	1e b7       	in	r17, 0x3e	; 62
		case 7:	//Left + Middle + Right
			break;
	}
	pressed_prev = pressed;
}
void UpdateFinalScore() {
    1cea:	8d b7       	in	r24, 0x3d	; 61
    1cec:	9e b7       	in	r25, 0x3e	; 62
    1cee:	7c 01       	movw	r14, r24
	
	nokia_lcd_clear();
    1cf0:	0e 94 6c 03 	call	0x6d8	; 0x6d8 <nokia_lcd_clear>
	nokia_lcd_write_string("Game Over! ", 1);
    1cf4:	61 e0       	ldi	r22, 0x01	; 1
    1cf6:	8b e2       	ldi	r24, 0x2B	; 43
    1cf8:	91 e0       	ldi	r25, 0x01	; 1
    1cfa:	0e 94 9b 04 	call	0x936	; 0x936 <nokia_lcd_write_string>
	nokia_lcd_set_cursor(0, 10);
    1cfe:	6a e0       	ldi	r22, 0x0A	; 10
    1d00:	80 e0       	ldi	r24, 0x00	; 0
    1d02:	0e 94 bd 04 	call	0x97a	; 0x97a <nokia_lcd_set_cursor>
	nokia_lcd_write_string("Your score: ", 1);
    1d06:	61 e0       	ldi	r22, 0x01	; 1
    1d08:	87 e3       	ldi	r24, 0x37	; 55
    1d0a:	91 e0       	ldi	r25, 0x01	; 1
    1d0c:	0e 94 9b 04 	call	0x936	; 0x936 <nokia_lcd_write_string>
	nokia_lcd_set_cursor(0, 20);
    1d10:	64 e1       	ldi	r22, 0x14	; 20
    1d12:	80 e0       	ldi	r24, 0x00	; 0
    1d14:	0e 94 bd 04 	call	0x97a	; 0x97a <nokia_lcd_set_cursor>

	unsigned short scoreLength = getLength(score);
    1d18:	80 91 53 03 	lds	r24, 0x0353	; 0x800353 <score>
    1d1c:	88 2f       	mov	r24, r24
    1d1e:	90 e0       	ldi	r25, 0x00	; 0
    1d20:	77 de       	rcall	.-786    	; 0x1a10 <getLength>
    1d22:	9a 83       	std	Y+2, r25	; 0x02
    1d24:	89 83       	std	Y+1, r24	; 0x01
	char scoreString[scoreLength];
    1d26:	89 81       	ldd	r24, Y+1	; 0x01
    1d28:	9a 81       	ldd	r25, Y+2	; 0x02
    1d2a:	9c 01       	movw	r18, r24
    1d2c:	21 50       	subi	r18, 0x01	; 1
    1d2e:	31 09       	sbc	r19, r1
    1d30:	3c 83       	std	Y+4, r19	; 0x04
    1d32:	2b 83       	std	Y+3, r18	; 0x03
    1d34:	2d b7       	in	r18, 0x3d	; 61
    1d36:	3e b7       	in	r19, 0x3e	; 62
    1d38:	28 1b       	sub	r18, r24
    1d3a:	39 0b       	sbc	r19, r25
    1d3c:	0f b6       	in	r0, 0x3f	; 63
    1d3e:	f8 94       	cli
    1d40:	3e bf       	out	0x3e, r19	; 62
    1d42:	0f be       	out	0x3f, r0	; 63
    1d44:	2d bf       	out	0x3d, r18	; 61
    1d46:	8d b7       	in	r24, 0x3d	; 61
    1d48:	9e b7       	in	r25, 0x3e	; 62
    1d4a:	01 96       	adiw	r24, 0x01	; 1
    1d4c:	9e 83       	std	Y+6, r25	; 0x06
    1d4e:	8d 83       	std	Y+5, r24	; 0x05
	getString(score, scoreString, scoreLength);
    1d50:	49 81       	ldd	r20, Y+1	; 0x01
    1d52:	5a 81       	ldd	r21, Y+2	; 0x02
    1d54:	2d 81       	ldd	r18, Y+5	; 0x05
    1d56:	3e 81       	ldd	r19, Y+6	; 0x06
    1d58:	80 91 53 03 	lds	r24, 0x0353	; 0x800353 <score>
    1d5c:	88 2f       	mov	r24, r24
    1d5e:	90 e0       	ldi	r25, 0x00	; 0
    1d60:	b9 01       	movw	r22, r18
    1d62:	82 de       	rcall	.-764    	; 0x1a68 <getString>
	nokia_lcd_write_string(scoreString, 1);
    1d64:	8d 81       	ldd	r24, Y+5	; 0x05
    1d66:	9e 81       	ldd	r25, Y+6	; 0x06
    1d68:	61 e0       	ldi	r22, 0x01	; 1
    1d6a:	0e 94 9b 04 	call	0x936	; 0x936 <nokia_lcd_write_string>

	nokia_lcd_set_cursor(0, 30);
    1d6e:	6e e1       	ldi	r22, 0x1E	; 30
    1d70:	80 e0       	ldi	r24, 0x00	; 0
    1d72:	0e 94 bd 04 	call	0x97a	; 0x97a <nokia_lcd_set_cursor>
	nokia_lcd_write_string("High score: ", 1);
    1d76:	61 e0       	ldi	r22, 0x01	; 1
    1d78:	81 e1       	ldi	r24, 0x11	; 17
    1d7a:	91 e0       	ldi	r25, 0x01	; 1
    1d7c:	0e 94 9b 04 	call	0x936	; 0x936 <nokia_lcd_write_string>
	nokia_lcd_set_cursor(0, 40);
    1d80:	68 e2       	ldi	r22, 0x28	; 40
    1d82:	80 e0       	ldi	r24, 0x00	; 0
    1d84:	0e 94 bd 04 	call	0x97a	; 0x97a <nokia_lcd_set_cursor>
	
	unsigned short highScoreLength = getLength(highScore);
    1d88:	80 91 54 03 	lds	r24, 0x0354	; 0x800354 <highScore>
    1d8c:	88 2f       	mov	r24, r24
    1d8e:	90 e0       	ldi	r25, 0x00	; 0
    1d90:	3f de       	rcall	.-898    	; 0x1a10 <getLength>
    1d92:	98 87       	std	Y+8, r25	; 0x08
    1d94:	8f 83       	std	Y+7, r24	; 0x07
	char highScoreString[highScoreLength];
    1d96:	8f 81       	ldd	r24, Y+7	; 0x07
    1d98:	98 85       	ldd	r25, Y+8	; 0x08
    1d9a:	9c 01       	movw	r18, r24
    1d9c:	21 50       	subi	r18, 0x01	; 1
    1d9e:	31 09       	sbc	r19, r1
    1da0:	3a 87       	std	Y+10, r19	; 0x0a
    1da2:	29 87       	std	Y+9, r18	; 0x09
    1da4:	ed b7       	in	r30, 0x3d	; 61
    1da6:	fe b7       	in	r31, 0x3e	; 62
    1da8:	e8 1b       	sub	r30, r24
    1daa:	f9 0b       	sbc	r31, r25
    1dac:	0f b6       	in	r0, 0x3f	; 63
    1dae:	f8 94       	cli
    1db0:	fe bf       	out	0x3e, r31	; 62
    1db2:	0f be       	out	0x3f, r0	; 63
    1db4:	ed bf       	out	0x3d, r30	; 61
    1db6:	8d b7       	in	r24, 0x3d	; 61
    1db8:	9e b7       	in	r25, 0x3e	; 62
    1dba:	01 96       	adiw	r24, 0x01	; 1
    1dbc:	9c 87       	std	Y+12, r25	; 0x0c
    1dbe:	8b 87       	std	Y+11, r24	; 0x0b
	getString(highScore, highScoreString, highScoreLength);
    1dc0:	4f 81       	ldd	r20, Y+7	; 0x07
    1dc2:	58 85       	ldd	r21, Y+8	; 0x08
    1dc4:	2b 85       	ldd	r18, Y+11	; 0x0b
    1dc6:	3c 85       	ldd	r19, Y+12	; 0x0c
    1dc8:	80 91 54 03 	lds	r24, 0x0354	; 0x800354 <highScore>
    1dcc:	88 2f       	mov	r24, r24
    1dce:	90 e0       	ldi	r25, 0x00	; 0
    1dd0:	b9 01       	movw	r22, r18
    1dd2:	4a de       	rcall	.-876    	; 0x1a68 <getString>
	nokia_lcd_write_string(highScoreString, 1);
    1dd4:	8b 85       	ldd	r24, Y+11	; 0x0b
    1dd6:	9c 85       	ldd	r25, Y+12	; 0x0c
    1dd8:	61 e0       	ldi	r22, 0x01	; 1
    1dda:	0e 94 9b 04 	call	0x936	; 0x936 <nokia_lcd_write_string>

	nokia_lcd_set_cursor(0, 50);
    1dde:	62 e3       	ldi	r22, 0x32	; 50
    1de0:	80 e0       	ldi	r24, 0x00	; 0
    1de2:	0e 94 bd 04 	call	0x97a	; 0x97a <nokia_lcd_set_cursor>
	if(score > highScore) {
    1de6:	90 91 53 03 	lds	r25, 0x0353	; 0x800353 <score>
    1dea:	80 91 54 03 	lds	r24, 0x0354	; 0x800354 <highScore>
    1dee:	89 17       	cp	r24, r25
    1df0:	28 f4       	brcc	.+10     	; 0x1dfc <UpdateFinalScore+0x132>
		nokia_lcd_write_string("New high score!", 1);	
    1df2:	61 e0       	ldi	r22, 0x01	; 1
    1df4:	84 e4       	ldi	r24, 0x44	; 68
    1df6:	91 e0       	ldi	r25, 0x01	; 1
    1df8:	0e 94 9b 04 	call	0x936	; 0x936 <nokia_lcd_write_string>
	}

	nokia_lcd_render();
    1dfc:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <nokia_lcd_render>


	char pressed = ~PIN_BUTTONS;
    1e00:	89 e2       	ldi	r24, 0x29	; 41
    1e02:	90 e0       	ldi	r25, 0x00	; 0
    1e04:	fc 01       	movw	r30, r24
    1e06:	80 81       	ld	r24, Z
    1e08:	80 95       	com	r24
    1e0a:	8d 87       	std	Y+13, r24	; 0x0d
	static char pressed_prev = 0;
	char justPressed = pressed & ~pressed_prev;
    1e0c:	80 91 57 03 	lds	r24, 0x0357	; 0x800357 <pressed_prev.2299>
    1e10:	98 2f       	mov	r25, r24
    1e12:	90 95       	com	r25
    1e14:	8d 85       	ldd	r24, Y+13	; 0x0d
    1e16:	89 23       	and	r24, r25
    1e18:	8e 87       	std	Y+14, r24	; 0x0e
	switch(justPressed) {
    1e1a:	8e 85       	ldd	r24, Y+14	; 0x0e
    1e1c:	88 2f       	mov	r24, r24
    1e1e:	90 e0       	ldi	r25, 0x00	; 0
    1e20:	89 2b       	or	r24, r25
		case 0: break;
		default:
			setScreenState(Title);
    1e22:	19 f0       	breq	.+6      	; 0x1e2a <UpdateFinalScore+0x160>
    1e24:	80 e0       	ldi	r24, 0x00	; 0
    1e26:	b9 dd       	rcall	.-1166   	; 0x199a <setScreenState>
			break;
    1e28:	01 c0       	rjmp	.+2      	; 0x1e2c <UpdateFinalScore+0x162>

	char pressed = ~PIN_BUTTONS;
	static char pressed_prev = 0;
	char justPressed = pressed & ~pressed_prev;
	switch(justPressed) {
		case 0: break;
    1e2a:	00 00       	nop
		default:
			setScreenState(Title);
			break;
	}
	pressed_prev = pressed;
    1e2c:	8d 85       	ldd	r24, Y+13	; 0x0d
    1e2e:	80 93 57 03 	sts	0x0357, r24	; 0x800357 <pressed_prev.2299>
    1e32:	0f b6       	in	r0, 0x3f	; 63
    1e34:	f8 94       	cli
    1e36:	fe be       	out	0x3e, r15	; 62
    1e38:	0f be       	out	0x3f, r0	; 63
    1e3a:	ed be       	out	0x3d, r14	; 61
}
    1e3c:	00 00       	nop
    1e3e:	0f b6       	in	r0, 0x3f	; 63
    1e40:	f8 94       	cli
    1e42:	1e bf       	out	0x3e, r17	; 62
    1e44:	0f be       	out	0x3f, r0	; 63
    1e46:	0d bf       	out	0x3d, r16	; 61
    1e48:	2e 96       	adiw	r28, 0x0e	; 14
    1e4a:	0f b6       	in	r0, 0x3f	; 63
    1e4c:	f8 94       	cli
    1e4e:	de bf       	out	0x3e, r29	; 62
    1e50:	0f be       	out	0x3f, r0	; 63
    1e52:	cd bf       	out	0x3d, r28	; 61
    1e54:	df 91       	pop	r29
    1e56:	cf 91       	pop	r28
    1e58:	1f 91       	pop	r17
    1e5a:	0f 91       	pop	r16
    1e5c:	ff 90       	pop	r15
    1e5e:	ef 90       	pop	r14
    1e60:	08 95       	ret

00001e62 <drawTile>:
//Draws a world tile as a 4x4 block on a vertical screen
void drawTile(short x, short y, short fill) {
    1e62:	cf 93       	push	r28
    1e64:	df 93       	push	r29
    1e66:	cd b7       	in	r28, 0x3d	; 61
    1e68:	de b7       	in	r29, 0x3e	; 62
    1e6a:	2a 97       	sbiw	r28, 0x0a	; 10
    1e6c:	0f b6       	in	r0, 0x3f	; 63
    1e6e:	f8 94       	cli
    1e70:	de bf       	out	0x3e, r29	; 62
    1e72:	0f be       	out	0x3f, r0	; 63
    1e74:	cd bf       	out	0x3d, r28	; 61
    1e76:	9e 83       	std	Y+6, r25	; 0x06
    1e78:	8d 83       	std	Y+5, r24	; 0x05
    1e7a:	78 87       	std	Y+8, r23	; 0x08
    1e7c:	6f 83       	std	Y+7, r22	; 0x07
    1e7e:	5a 87       	std	Y+10, r21	; 0x0a
    1e80:	49 87       	std	Y+9, r20	; 0x09
	for(short xi = 0; xi < 4; xi++) {
    1e82:	1a 82       	std	Y+2, r1	; 0x02
    1e84:	19 82       	std	Y+1, r1	; 0x01
    1e86:	23 c0       	rjmp	.+70     	; 0x1ece <drawTile+0x6c>
		for(short yi = 0; yi < 4; yi++) {
    1e88:	1c 82       	std	Y+4, r1	; 0x04
    1e8a:	1b 82       	std	Y+3, r1	; 0x03
    1e8c:	17 c0       	rjmp	.+46     	; 0x1ebc <drawTile+0x5a>
			nokia_lcd_set_pixel(y*4 + yi, x*4 + xi, fill);
    1e8e:	39 85       	ldd	r19, Y+9	; 0x09
    1e90:	8d 81       	ldd	r24, Y+5	; 0x05
    1e92:	98 2f       	mov	r25, r24
    1e94:	99 0f       	add	r25, r25
    1e96:	99 0f       	add	r25, r25
    1e98:	89 81       	ldd	r24, Y+1	; 0x01
    1e9a:	29 2f       	mov	r18, r25
    1e9c:	28 0f       	add	r18, r24
    1e9e:	8f 81       	ldd	r24, Y+7	; 0x07
    1ea0:	98 2f       	mov	r25, r24
    1ea2:	99 0f       	add	r25, r25
    1ea4:	99 0f       	add	r25, r25
    1ea6:	8b 81       	ldd	r24, Y+3	; 0x03
    1ea8:	89 0f       	add	r24, r25
    1eaa:	43 2f       	mov	r20, r19
    1eac:	62 2f       	mov	r22, r18
    1eae:	0e 94 8e 03 	call	0x71c	; 0x71c <nokia_lcd_set_pixel>
	pressed_prev = pressed;
}
//Draws a world tile as a 4x4 block on a vertical screen
void drawTile(short x, short y, short fill) {
	for(short xi = 0; xi < 4; xi++) {
		for(short yi = 0; yi < 4; yi++) {
    1eb2:	8b 81       	ldd	r24, Y+3	; 0x03
    1eb4:	9c 81       	ldd	r25, Y+4	; 0x04
    1eb6:	01 96       	adiw	r24, 0x01	; 1
    1eb8:	9c 83       	std	Y+4, r25	; 0x04
    1eba:	8b 83       	std	Y+3, r24	; 0x03
    1ebc:	8b 81       	ldd	r24, Y+3	; 0x03
    1ebe:	9c 81       	ldd	r25, Y+4	; 0x04
    1ec0:	04 97       	sbiw	r24, 0x04	; 4
    1ec2:	2c f3       	brlt	.-54     	; 0x1e8e <drawTile+0x2c>
	}
	pressed_prev = pressed;
}
//Draws a world tile as a 4x4 block on a vertical screen
void drawTile(short x, short y, short fill) {
	for(short xi = 0; xi < 4; xi++) {
    1ec4:	89 81       	ldd	r24, Y+1	; 0x01
    1ec6:	9a 81       	ldd	r25, Y+2	; 0x02
    1ec8:	01 96       	adiw	r24, 0x01	; 1
    1eca:	9a 83       	std	Y+2, r25	; 0x02
    1ecc:	89 83       	std	Y+1, r24	; 0x01
    1ece:	89 81       	ldd	r24, Y+1	; 0x01
    1ed0:	9a 81       	ldd	r25, Y+2	; 0x02
    1ed2:	04 97       	sbiw	r24, 0x04	; 4
    1ed4:	cc f2       	brlt	.-78     	; 0x1e88 <drawTile+0x26>
		for(short yi = 0; yi < 4; yi++) {
			nokia_lcd_set_pixel(y*4 + yi, x*4 + xi, fill);
		}
	}
}
    1ed6:	00 00       	nop
    1ed8:	2a 96       	adiw	r28, 0x0a	; 10
    1eda:	0f b6       	in	r0, 0x3f	; 63
    1edc:	f8 94       	cli
    1ede:	de bf       	out	0x3e, r29	; 62
    1ee0:	0f be       	out	0x3f, r0	; 63
    1ee2:	cd bf       	out	0x3d, r28	; 61
    1ee4:	df 91       	pop	r29
    1ee6:	cf 91       	pop	r28
    1ee8:	08 95       	ret

00001eea <UpdateGame>:
void UpdateGame() {
    1eea:	cf 93       	push	r28
    1eec:	df 93       	push	r29
    1eee:	cd b7       	in	r28, 0x3d	; 61
    1ef0:	de b7       	in	r29, 0x3e	; 62
    1ef2:	c1 55       	subi	r28, 0x51	; 81
    1ef4:	d1 09       	sbc	r29, r1
    1ef6:	0f b6       	in	r0, 0x3f	; 63
    1ef8:	f8 94       	cli
    1efa:	de bf       	out	0x3e, r29	; 62
    1efc:	0f be       	out	0x3f, r0	; 63
    1efe:	cd bf       	out	0x3d, r28	; 61
	const short standardInterval = 10;
    1f00:	8a e0       	ldi	r24, 0x0A	; 10
    1f02:	90 e0       	ldi	r25, 0x00	; 0
    1f04:	9c 8f       	std	Y+28, r25	; 0x1c
    1f06:	8b 8f       	std	Y+27, r24	; 0x1b

	static short time = 0;

	//static char pressed_prev = 0;

	if(--time > 0) {
    1f08:	80 91 58 03 	lds	r24, 0x0358	; 0x800358 <time.2327>
    1f0c:	90 91 59 03 	lds	r25, 0x0359	; 0x800359 <time.2327+0x1>
    1f10:	01 97       	sbiw	r24, 0x01	; 1
    1f12:	90 93 59 03 	sts	0x0359, r25	; 0x800359 <time.2327+0x1>
    1f16:	80 93 58 03 	sts	0x0358, r24	; 0x800358 <time.2327>
    1f1a:	80 91 58 03 	lds	r24, 0x0358	; 0x800358 <time.2327>
    1f1e:	90 91 59 03 	lds	r25, 0x0359	; 0x800359 <time.2327+0x1>
    1f22:	18 16       	cp	r1, r24
    1f24:	19 06       	cpc	r1, r25
    1f26:	0c f4       	brge	.+2      	; 0x1f2a <UpdateGame+0x40>
    1f28:	07 c3       	rjmp	.+1550   	; 0x2538 <UpdateGame+0x64e>
		return;
	}
	switch(gameState) {
    1f2a:	80 91 5a 03 	lds	r24, 0x035A	; 0x80035a <gameState.2322>
    1f2e:	88 2f       	mov	r24, r24
    1f30:	90 e0       	ldi	r25, 0x00	; 0
    1f32:	82 30       	cpi	r24, 0x02	; 2
    1f34:	91 05       	cpc	r25, r1
    1f36:	09 f4       	brne	.+2      	; 0x1f3a <UpdateGame+0x50>
    1f38:	07 c1       	rjmp	.+526    	; 0x2148 <UpdateGame+0x25e>
    1f3a:	83 30       	cpi	r24, 0x03	; 3
    1f3c:	91 05       	cpc	r25, r1
    1f3e:	2c f4       	brge	.+10     	; 0x1f4a <UpdateGame+0x60>
    1f40:	00 97       	sbiw	r24, 0x00	; 0
    1f42:	79 f0       	breq	.+30     	; 0x1f62 <UpdateGame+0x78>
    1f44:	01 97       	sbiw	r24, 0x01	; 1
    1f46:	29 f1       	breq	.+74     	; 0x1f92 <UpdateGame+0xa8>
    1f48:	ac c1       	rjmp	.+856    	; 0x22a2 <UpdateGame+0x3b8>
    1f4a:	84 30       	cpi	r24, 0x04	; 4
    1f4c:	91 05       	cpc	r25, r1
    1f4e:	09 f4       	brne	.+2      	; 0x1f52 <UpdateGame+0x68>
    1f50:	6e c1       	rjmp	.+732    	; 0x222e <UpdateGame+0x344>
    1f52:	84 30       	cpi	r24, 0x04	; 4
    1f54:	91 05       	cpc	r25, r1
    1f56:	0c f4       	brge	.+2      	; 0x1f5a <UpdateGame+0x70>
    1f58:	01 c1       	rjmp	.+514    	; 0x215c <UpdateGame+0x272>
    1f5a:	05 97       	sbiw	r24, 0x05	; 5
    1f5c:	09 f4       	brne	.+2      	; 0x1f60 <UpdateGame+0x76>
    1f5e:	97 c1       	rjmp	.+814    	; 0x228e <UpdateGame+0x3a4>
    1f60:	a0 c1       	rjmp	.+832    	; 0x22a2 <UpdateGame+0x3b8>
	case Init:
		t = CreateTetra();
    1f62:	ce 01       	movw	r24, r28
    1f64:	ce 96       	adiw	r24, 0x3e	; 62
    1f66:	4d d9       	rcall	.-3430   	; 0x1202 <CreateTetra>
    1f68:	84 e1       	ldi	r24, 0x14	; 20
    1f6a:	fe 01       	movw	r30, r28
    1f6c:	fe 96       	adiw	r30, 0x3e	; 62
    1f6e:	ab e5       	ldi	r26, 0x5B	; 91
    1f70:	b3 e0       	ldi	r27, 0x03	; 3
    1f72:	01 90       	ld	r0, Z+
    1f74:	0d 92       	st	X+, r0
    1f76:	8a 95       	dec	r24
    1f78:	e1 f7       	brne	.-8      	; 0x1f72 <UpdateGame+0x88>
		score = 0;
    1f7a:	10 92 53 03 	sts	0x0353, r1	; 0x800353 <score>
		time = standardInterval;
    1f7e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1f80:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1f82:	90 93 59 03 	sts	0x0359, r25	; 0x800359 <time.2327+0x1>
    1f86:	80 93 58 03 	sts	0x0358, r24	; 0x800358 <time.2327>
		gameState = Play;
    1f8a:	81 e0       	ldi	r24, 0x01	; 1
    1f8c:	80 93 5a 03 	sts	0x035A, r24	; 0x80035a <gameState.2322>
		break;
    1f90:	88 c1       	rjmp	.+784    	; 0x22a2 <UpdateGame+0x3b8>
	case Play: {
		//remove(&g, &t);			//Remove so that we can move

		char pressed = ~PIN_BUTTONS;
    1f92:	89 e2       	ldi	r24, 0x29	; 41
    1f94:	90 e0       	ldi	r25, 0x00	; 0
    1f96:	fc 01       	movw	r30, r24
    1f98:	80 81       	ld	r24, Z
    1f9a:	80 95       	com	r24
    1f9c:	8d 8f       	std	Y+29, r24	; 0x1d
		//char justPressed = pressed & ~pressed_prev;
		switch(pressed) {
    1f9e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1fa0:	88 2f       	mov	r24, r24
    1fa2:	90 e0       	ldi	r25, 0x00	; 0
    1fa4:	09 2e       	mov	r0, r25
    1fa6:	00 0c       	add	r0, r0
    1fa8:	aa 0b       	sbc	r26, r26
    1faa:	bb 0b       	sbc	r27, r27
    1fac:	41 e0       	ldi	r20, 0x01	; 1
    1fae:	50 e0       	ldi	r21, 0x00	; 0
    1fb0:	26 e0       	ldi	r18, 0x06	; 6
    1fb2:	30 e0       	ldi	r19, 0x00	; 0
    1fb4:	84 1b       	sub	r24, r20
    1fb6:	95 0b       	sbc	r25, r21
    1fb8:	28 17       	cp	r18, r24
    1fba:	39 07       	cpc	r19, r25
    1fbc:	70 f1       	brcs	.+92     	; 0x201a <UpdateGame+0x130>
    1fbe:	83 5b       	subi	r24, 0xB3	; 179
    1fc0:	9f 4f       	sbci	r25, 0xFF	; 255
    1fc2:	fc 01       	movw	r30, r24
    1fc4:	2d c4       	rjmp	.+2138   	; 0x2820 <__tablejump2__>
		case 1:	//Right
			tryShiftRight(&g, &t);
    1fc6:	6b e5       	ldi	r22, 0x5B	; 91
    1fc8:	73 e0       	ldi	r23, 0x03	; 3
    1fca:	8f e6       	ldi	r24, 0x6F	; 111
    1fcc:	93 e0       	ldi	r25, 0x03	; 3
    1fce:	57 dc       	rcall	.-1874   	; 0x187e <tryShiftRight>
			break;
    1fd0:	24 c0       	rjmp	.+72     	; 0x201a <UpdateGame+0x130>
		case 2:	//Middle
			tryMirror(&g, &t);
    1fd2:	6b e5       	ldi	r22, 0x5B	; 91
    1fd4:	73 e0       	ldi	r23, 0x03	; 3
    1fd6:	8f e6       	ldi	r24, 0x6F	; 111
    1fd8:	93 e0       	ldi	r25, 0x03	; 3
    1fda:	ee db       	rcall	.-2084   	; 0x17b8 <tryMirror>
			break;
    1fdc:	1e c0       	rjmp	.+60     	; 0x201a <UpdateGame+0x130>
		case 3:	//Middle + Right
			tryTurnCW(&g, &t);
    1fde:	6b e5       	ldi	r22, 0x5B	; 91
    1fe0:	73 e0       	ldi	r23, 0x03	; 3
    1fe2:	8f e6       	ldi	r24, 0x6F	; 111
    1fe4:	93 e0       	ldi	r25, 0x03	; 3
    1fe6:	2a dc       	rcall	.-1964   	; 0x183c <tryTurnCW>
			break;
		case 4:	//Left
			tryShiftLeft(&g, &t);
    1fe8:	18 c0       	rjmp	.+48     	; 0x201a <UpdateGame+0x130>
    1fea:	6b e5       	ldi	r22, 0x5B	; 91
    1fec:	73 e0       	ldi	r23, 0x03	; 3
    1fee:	8f e6       	ldi	r24, 0x6F	; 111
    1ff0:	93 e0       	ldi	r25, 0x03	; 3
			break;
    1ff2:	66 dc       	rcall	.-1844   	; 0x18c0 <tryShiftLeft>
		case 5:	//Left + Right
			while(!land(&g, &t)) {
				down(&t);
    1ff4:	12 c0       	rjmp	.+36     	; 0x201a <UpdateGame+0x130>
    1ff6:	8b e5       	ldi	r24, 0x5B	; 91
    1ff8:	93 e0       	ldi	r25, 0x03	; 3
			break;
		case 4:	//Left
			tryShiftLeft(&g, &t);
			break;
		case 5:	//Left + Right
			while(!land(&g, &t)) {
    1ffa:	2c d8       	rcall	.-4008   	; 0x1054 <down>
    1ffc:	6b e5       	ldi	r22, 0x5B	; 91
    1ffe:	73 e0       	ldi	r23, 0x03	; 3
    2000:	8f e6       	ldi	r24, 0x6F	; 111
    2002:	93 e0       	ldi	r25, 0x03	; 3
    2004:	89 db       	rcall	.-2286   	; 0x1718 <land>
    2006:	88 23       	and	r24, r24
				down(&t);
			}
			break;
    2008:	b1 f3       	breq	.-20     	; 0x1ff6 <UpdateGame+0x10c>
		case 6:	//Left + Middle
			tryTurnCCW(&g, &t);
    200a:	07 c0       	rjmp	.+14     	; 0x201a <UpdateGame+0x130>
    200c:	6b e5       	ldi	r22, 0x5B	; 91
    200e:	73 e0       	ldi	r23, 0x03	; 3
    2010:	8f e6       	ldi	r24, 0x6F	; 111
    2012:	93 e0       	ldi	r25, 0x03	; 3
			break;
    2014:	f2 db       	rcall	.-2076   	; 0x17fa <tryTurnCCW>
		case 7:	//Left + Middle + Right
			break;
    2016:	01 c0       	rjmp	.+2      	; 0x201a <UpdateGame+0x130>
		}
		//pressed_prev = pressed;
		if(land(&g, &t)) {		//See if we stop falling here
    2018:	00 00       	nop
    201a:	6b e5       	ldi	r22, 0x5B	; 91
    201c:	73 e0       	ldi	r23, 0x03	; 3
    201e:	8f e6       	ldi	r24, 0x6F	; 111
    2020:	93 e0       	ldi	r25, 0x03	; 3
    2022:	7a db       	rcall	.-2316   	; 0x1718 <land>
    2024:	88 23       	and	r24, r24
    2026:	09 f4       	brne	.+2      	; 0x202a <UpdateGame+0x140>
			if(inBoundsOpen(&g, &t)) {	//We landed in the screen
    2028:	78 c0       	rjmp	.+240    	; 0x211a <UpdateGame+0x230>
    202a:	6b e5       	ldi	r22, 0x5B	; 91
    202c:	73 e0       	ldi	r23, 0x03	; 3
    202e:	8f e6       	ldi	r24, 0x6F	; 111
    2030:	93 e0       	ldi	r25, 0x03	; 3
    2032:	2e db       	rcall	.-2468   	; 0x1690 <inBoundsOpen>
    2034:	88 23       	and	r24, r24
    2036:	09 f4       	brne	.+2      	; 0x203a <UpdateGame+0x150>
				place(&g, &t);	//Place in grid
    2038:	62 c0       	rjmp	.+196    	; 0x20fe <UpdateGame+0x214>
    203a:	6b e5       	ldi	r22, 0x5B	; 91
    203c:	73 e0       	ldi	r23, 0x03	; 3
    203e:	8f e6       	ldi	r24, 0x6F	; 111
    2040:	93 e0       	ldi	r25, 0x03	; 3
    2042:	5f dc       	rcall	.-1858   	; 0x1902 <place>
				gameState = PlayInterval;
    2044:	82 e0       	ldi	r24, 0x02	; 2
    2046:	80 93 5a 03 	sts	0x035A, r24	; 0x80035a <gameState.2322>
				//Check for rows to clear
				for(unsigned short y = 0; y < HEIGHT; y++) {
    204a:	1a 82       	std	Y+2, r1	; 0x02
    204c:	19 82       	std	Y+1, r1	; 0x01
					if(rowFull(&g, y)) {
    204e:	21 c0       	rjmp	.+66     	; 0x2092 <UpdateGame+0x1a8>
    2050:	89 81       	ldd	r24, Y+1	; 0x01
    2052:	9a 81       	ldd	r25, Y+2	; 0x02
    2054:	bc 01       	movw	r22, r24
    2056:	8f e6       	ldi	r24, 0x6F	; 111
    2058:	93 e0       	ldi	r25, 0x03	; 3
    205a:	7a da       	rcall	.-2828   	; 0x1550 <rowFull>
    205c:	88 23       	and	r24, r24
    205e:	a1 f0       	breq	.+40     	; 0x2088 <UpdateGame+0x19e>
						rowCleared = y;
    2060:	89 81       	ldd	r24, Y+1	; 0x01
    2062:	9a 81       	ldd	r25, Y+2	; 0x02
    2064:	90 93 6c 04 	sts	0x046C, r25	; 0x80046c <rowCleared.2323+0x1>
    2068:	80 93 6b 04 	sts	0x046B, r24	; 0x80046b <rowCleared.2323>
						rowState = 6;
    206c:	86 e0       	ldi	r24, 0x06	; 6
    206e:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <rowState.2324>
						gameState = RowClear;
    2072:	83 e0       	ldi	r24, 0x03	; 3
    2074:	80 93 5a 03 	sts	0x035A, r24	; 0x80035a <gameState.2322>
						score += 1 + y;
    2078:	99 81       	ldd	r25, Y+1	; 0x01
    207a:	80 91 53 03 	lds	r24, 0x0353	; 0x800353 <score>
    207e:	89 0f       	add	r24, r25
    2080:	8f 5f       	subi	r24, 0xFF	; 255
    2082:	80 93 53 03 	sts	0x0353, r24	; 0x800353 <score>
						break;
    2086:	09 c0       	rjmp	.+18     	; 0x209a <UpdateGame+0x1b0>
		if(land(&g, &t)) {		//See if we stop falling here
			if(inBoundsOpen(&g, &t)) {	//We landed in the screen
				place(&g, &t);	//Place in grid
				gameState = PlayInterval;
				//Check for rows to clear
				for(unsigned short y = 0; y < HEIGHT; y++) {
    2088:	89 81       	ldd	r24, Y+1	; 0x01
    208a:	9a 81       	ldd	r25, Y+2	; 0x02
    208c:	01 96       	adiw	r24, 0x01	; 1
    208e:	9a 83       	std	Y+2, r25	; 0x02
    2090:	89 83       	std	Y+1, r24	; 0x01
    2092:	89 81       	ldd	r24, Y+1	; 0x01
    2094:	9a 81       	ldd	r25, Y+2	; 0x02
    2096:	45 97       	sbiw	r24, 0x15	; 21
    2098:	d8 f2       	brcs	.-74     	; 0x2050 <UpdateGame+0x166>
						gameState = RowClear;
						score += 1 + y;
						break;
					}
				}
				placed++;
    209a:	80 91 6d 04 	lds	r24, 0x046D	; 0x80046d <placed.2325>
    209e:	90 91 6e 04 	lds	r25, 0x046E	; 0x80046e <placed.2325+0x1>
    20a2:	01 96       	adiw	r24, 0x01	; 1
    20a4:	90 93 6e 04 	sts	0x046E, r25	; 0x80046e <placed.2325+0x1>
    20a8:	80 93 6d 04 	sts	0x046D, r24	; 0x80046d <placed.2325>
				fall = 0;
    20ac:	10 92 70 04 	sts	0x0470, r1	; 0x800470 <fall.2326+0x1>
    20b0:	10 92 6f 04 	sts	0x046F, r1	; 0x80046f <fall.2326>
				t = CreateTetra();
    20b4:	ce 01       	movw	r24, r28
    20b6:	ce 96       	adiw	r24, 0x3e	; 62
    20b8:	a4 d8       	rcall	.-3768   	; 0x1202 <CreateTetra>
    20ba:	84 e1       	ldi	r24, 0x14	; 20
    20bc:	fe 01       	movw	r30, r28
    20be:	fe 96       	adiw	r30, 0x3e	; 62
    20c0:	ab e5       	ldi	r26, 0x5B	; 91
    20c2:	b3 e0       	ldi	r27, 0x03	; 3
    20c4:	01 90       	ld	r0, Z+
    20c6:	0d 92       	st	X+, r0
    20c8:	8a 95       	dec	r24
    20ca:	e1 f7       	brne	.-8      	; 0x20c4 <UpdateGame+0x1da>
				if(gameState != RowClear) {
    20cc:	80 91 5a 03 	lds	r24, 0x035A	; 0x80035a <gameState.2322>
    20d0:	83 30       	cpi	r24, 0x03	; 3
    20d2:	71 f0       	breq	.+28     	; 0x20f0 <UpdateGame+0x206>
					time = standardInterval * 5;
    20d4:	2b 8d       	ldd	r18, Y+27	; 0x1b
    20d6:	3c 8d       	ldd	r19, Y+28	; 0x1c
    20d8:	c9 01       	movw	r24, r18
    20da:	88 0f       	add	r24, r24
    20dc:	99 1f       	adc	r25, r25
    20de:	88 0f       	add	r24, r24
    20e0:	99 1f       	adc	r25, r25
    20e2:	82 0f       	add	r24, r18
    20e4:	93 1f       	adc	r25, r19
    20e6:	90 93 59 03 	sts	0x0359, r25	; 0x800359 <time.2327+0x1>
    20ea:	80 93 58 03 	sts	0x0358, r24	; 0x800358 <time.2327>
			//place(&g, &t);
			fall++;
			time = standardInterval;
			gameState = PlayInterval;
		}
		break;
    20ee:	d9 c0       	rjmp	.+434    	; 0x22a2 <UpdateGame+0x3b8>
				fall = 0;
				t = CreateTetra();
				if(gameState != RowClear) {
					time = standardInterval * 5;
				} else {
					time = standardInterval;
    20f0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    20f2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    20f4:	90 93 59 03 	sts	0x0359, r25	; 0x800359 <time.2327+0x1>
    20f8:	80 93 58 03 	sts	0x0358, r24	; 0x800358 <time.2327>
			//place(&g, &t);
			fall++;
			time = standardInterval;
			gameState = PlayInterval;
		}
		break;
    20fc:	d2 c0       	rjmp	.+420    	; 0x22a2 <UpdateGame+0x3b8>
					time = standardInterval;
				}
			} else {
				//We landed above the top of the screen
				//Game over
				gameState = GameOver;
    20fe:	84 e0       	ldi	r24, 0x04	; 4
    2100:	80 93 5a 03 	sts	0x035A, r24	; 0x80035a <gameState.2322>
				rowCleared = 0;
    2104:	10 92 6c 04 	sts	0x046C, r1	; 0x80046c <rowCleared.2323+0x1>
    2108:	10 92 6b 04 	sts	0x046B, r1	; 0x80046b <rowCleared.2323>
				time = standardInterval;
    210c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    210e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2110:	90 93 59 03 	sts	0x0359, r25	; 0x800359 <time.2327+0x1>
    2114:	80 93 58 03 	sts	0x0358, r24	; 0x800358 <time.2327>
			//place(&g, &t);
			fall++;
			time = standardInterval;
			gameState = PlayInterval;
		}
		break;
    2118:	c4 c0       	rjmp	.+392    	; 0x22a2 <UpdateGame+0x3b8>
				gameState = GameOver;
				rowCleared = 0;
				time = standardInterval;
			}
		} else {
			down(&t);
    211a:	8b e5       	ldi	r24, 0x5B	; 91
    211c:	93 e0       	ldi	r25, 0x03	; 3
    211e:	0e 94 2a 08 	call	0x1054	; 0x1054 <down>
			//place(&g, &t);
			fall++;
    2122:	80 91 6f 04 	lds	r24, 0x046F	; 0x80046f <fall.2326>
    2126:	90 91 70 04 	lds	r25, 0x0470	; 0x800470 <fall.2326+0x1>
    212a:	01 96       	adiw	r24, 0x01	; 1
    212c:	90 93 70 04 	sts	0x0470, r25	; 0x800470 <fall.2326+0x1>
    2130:	80 93 6f 04 	sts	0x046F, r24	; 0x80046f <fall.2326>
			time = standardInterval;
    2134:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2136:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2138:	90 93 59 03 	sts	0x0359, r25	; 0x800359 <time.2327+0x1>
    213c:	80 93 58 03 	sts	0x0358, r24	; 0x800358 <time.2327>
			gameState = PlayInterval;
    2140:	82 e0       	ldi	r24, 0x02	; 2
    2142:	80 93 5a 03 	sts	0x035A, r24	; 0x80035a <gameState.2322>
		}
		break;
    2146:	ad c0       	rjmp	.+346    	; 0x22a2 <UpdateGame+0x3b8>
	} case PlayInterval:
		time = standardInterval;
    2148:	8b 8d       	ldd	r24, Y+27	; 0x1b
    214a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    214c:	90 93 59 03 	sts	0x0359, r25	; 0x800359 <time.2327+0x1>
    2150:	80 93 58 03 	sts	0x0358, r24	; 0x800358 <time.2327>
		gameState = Play;
    2154:	81 e0       	ldi	r24, 0x01	; 1
    2156:	80 93 5a 03 	sts	0x035A, r24	; 0x80035a <gameState.2322>
		break;
    215a:	a3 c0       	rjmp	.+326    	; 0x22a2 <UpdateGame+0x3b8>
	case RowClear:
		if(--rowState%2 == 1) {
    215c:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <rowState.2324>
    2160:	81 50       	subi	r24, 0x01	; 1
    2162:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <rowState.2324>
    2166:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <rowState.2324>
    216a:	81 70       	andi	r24, 0x01	; 1
    216c:	88 23       	and	r24, r24
			clearRow(&g, rowCleared);
    216e:	49 f0       	breq	.+18     	; 0x2182 <UpdateGame+0x298>
    2170:	80 91 6b 04 	lds	r24, 0x046B	; 0x80046b <rowCleared.2323>
    2174:	90 91 6c 04 	lds	r25, 0x046C	; 0x80046c <rowCleared.2323+0x1>
    2178:	bc 01       	movw	r22, r24
    217a:	8f e6       	ldi	r24, 0x6F	; 111
    217c:	93 e0       	ldi	r25, 0x03	; 3
    217e:	24 d9       	rcall	.-3512   	; 0x13c8 <clearRow>
		} else {
			fillRow(&g, rowCleared);
    2180:	08 c0       	rjmp	.+16     	; 0x2192 <UpdateGame+0x2a8>
    2182:	80 91 6b 04 	lds	r24, 0x046B	; 0x80046b <rowCleared.2323>
    2186:	90 91 6c 04 	lds	r25, 0x046C	; 0x80046c <rowCleared.2323+0x1>
    218a:	bc 01       	movw	r22, r24
    218c:	8f e6       	ldi	r24, 0x6F	; 111
    218e:	93 e0       	ldi	r25, 0x03	; 3
    2190:	4e d9       	rcall	.-3428   	; 0x142e <fillRow>
		}
		if(rowState > 0) {
    2192:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <rowState.2324>
    2196:	88 23       	and	r24, r24
			time = standardInterval;
    2198:	39 f0       	breq	.+14     	; 0x21a8 <UpdateGame+0x2be>
    219a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    219c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    219e:	90 93 59 03 	sts	0x0359, r25	; 0x800359 <time.2327+0x1>
    21a2:	80 93 58 03 	sts	0x0358, r24	; 0x800358 <time.2327>
		} else {
			descendRow(&g, rowCleared);
    21a6:	7d c0       	rjmp	.+250    	; 0x22a2 <UpdateGame+0x3b8>
    21a8:	80 91 6b 04 	lds	r24, 0x046B	; 0x80046b <rowCleared.2323>
    21ac:	90 91 6c 04 	lds	r25, 0x046C	; 0x80046c <rowCleared.2323+0x1>
    21b0:	bc 01       	movw	r22, r24
    21b2:	8f e6       	ldi	r24, 0x6F	; 111
    21b4:	93 e0       	ldi	r25, 0x03	; 3

			gameState = Play;
    21b6:	6f d9       	rcall	.-3362   	; 0x1496 <descendRow>
    21b8:	81 e0       	ldi	r24, 0x01	; 1
    21ba:	80 93 5a 03 	sts	0x035A, r24	; 0x80035a <gameState.2322>
			for(unsigned short y = 0; y < HEIGHT; y++) {
    21be:	1c 82       	std	Y+4, r1	; 0x04
    21c0:	1b 82       	std	Y+3, r1	; 0x03
				if(rowFull(&g, y)) {
    21c2:	1a c0       	rjmp	.+52     	; 0x21f8 <UpdateGame+0x30e>
    21c4:	8b 81       	ldd	r24, Y+3	; 0x03
    21c6:	9c 81       	ldd	r25, Y+4	; 0x04
    21c8:	bc 01       	movw	r22, r24
    21ca:	8f e6       	ldi	r24, 0x6F	; 111
    21cc:	93 e0       	ldi	r25, 0x03	; 3
    21ce:	c0 d9       	rcall	.-3200   	; 0x1550 <rowFull>
    21d0:	88 23       	and	r24, r24
    21d2:	69 f0       	breq	.+26     	; 0x21ee <UpdateGame+0x304>
					rowCleared = y;
    21d4:	8b 81       	ldd	r24, Y+3	; 0x03
    21d6:	9c 81       	ldd	r25, Y+4	; 0x04
    21d8:	90 93 6c 04 	sts	0x046C, r25	; 0x80046c <rowCleared.2323+0x1>
    21dc:	80 93 6b 04 	sts	0x046B, r24	; 0x80046b <rowCleared.2323>
					rowState = 6;
    21e0:	86 e0       	ldi	r24, 0x06	; 6
    21e2:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <rowState.2324>
					gameState = RowClear;
    21e6:	83 e0       	ldi	r24, 0x03	; 3
    21e8:	80 93 5a 03 	sts	0x035A, r24	; 0x80035a <gameState.2322>
					break;
    21ec:	09 c0       	rjmp	.+18     	; 0x2200 <UpdateGame+0x316>
			time = standardInterval;
		} else {
			descendRow(&g, rowCleared);

			gameState = Play;
			for(unsigned short y = 0; y < HEIGHT; y++) {
    21ee:	8b 81       	ldd	r24, Y+3	; 0x03
    21f0:	9c 81       	ldd	r25, Y+4	; 0x04
    21f2:	01 96       	adiw	r24, 0x01	; 1
    21f4:	9c 83       	std	Y+4, r25	; 0x04
    21f6:	8b 83       	std	Y+3, r24	; 0x03
    21f8:	8b 81       	ldd	r24, Y+3	; 0x03
    21fa:	9c 81       	ldd	r25, Y+4	; 0x04
    21fc:	45 97       	sbiw	r24, 0x15	; 21
    21fe:	10 f3       	brcs	.-60     	; 0x21c4 <UpdateGame+0x2da>
					rowState = 6;
					gameState = RowClear;
					break;
				}
			}
			if(gameState != RowClear) {
    2200:	80 91 5a 03 	lds	r24, 0x035A	; 0x80035a <gameState.2322>
    2204:	83 30       	cpi	r24, 0x03	; 3
    2206:	61 f0       	breq	.+24     	; 0x2220 <UpdateGame+0x336>
				time = standardInterval * 3;
    2208:	2b 8d       	ldd	r18, Y+27	; 0x1b
    220a:	3c 8d       	ldd	r19, Y+28	; 0x1c
    220c:	c9 01       	movw	r24, r18
    220e:	88 0f       	add	r24, r24
    2210:	99 1f       	adc	r25, r25
    2212:	82 0f       	add	r24, r18
    2214:	93 1f       	adc	r25, r19
    2216:	90 93 59 03 	sts	0x0359, r25	; 0x800359 <time.2327+0x1>
    221a:	80 93 58 03 	sts	0x0358, r24	; 0x800358 <time.2327>
			} else {
				time = standardInterval;
			}
		}
		break;
    221e:	41 c0       	rjmp	.+130    	; 0x22a2 <UpdateGame+0x3b8>
				}
			}
			if(gameState != RowClear) {
				time = standardInterval * 3;
			} else {
				time = standardInterval;
    2220:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2222:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2224:	90 93 59 03 	sts	0x0359, r25	; 0x800359 <time.2327+0x1>
    2228:	80 93 58 03 	sts	0x0358, r24	; 0x800358 <time.2327>
			}
		}
		break;
	case GameOver:
		if(rowCleared < HEIGHT && !rowEmpty(&g, rowCleared)) {
    222c:	3a c0       	rjmp	.+116    	; 0x22a2 <UpdateGame+0x3b8>
    222e:	80 91 6b 04 	lds	r24, 0x046B	; 0x80046b <rowCleared.2323>
    2232:	90 91 6c 04 	lds	r25, 0x046C	; 0x80046c <rowCleared.2323+0x1>
    2236:	45 97       	sbiw	r24, 0x15	; 21
    2238:	3c f5       	brge	.+78     	; 0x2288 <UpdateGame+0x39e>
    223a:	80 91 6b 04 	lds	r24, 0x046B	; 0x80046b <rowCleared.2323>
    223e:	90 91 6c 04 	lds	r25, 0x046C	; 0x80046c <rowCleared.2323+0x1>
    2242:	bc 01       	movw	r22, r24
    2244:	8f e6       	ldi	r24, 0x6F	; 111
    2246:	93 e0       	ldi	r25, 0x03	; 3
    2248:	ba d9       	rcall	.-3212   	; 0x15be <rowEmpty>
			clearRow(&g, 0);
    224a:	88 23       	and	r24, r24
    224c:	e9 f4       	brne	.+58     	; 0x2288 <UpdateGame+0x39e>
    224e:	60 e0       	ldi	r22, 0x00	; 0
    2250:	70 e0       	ldi	r23, 0x00	; 0
    2252:	8f e6       	ldi	r24, 0x6F	; 111
    2254:	93 e0       	ldi	r25, 0x03	; 3
			descendRow(&g, 0);
    2256:	b8 d8       	rcall	.-3728   	; 0x13c8 <clearRow>
    2258:	60 e0       	ldi	r22, 0x00	; 0
    225a:	70 e0       	ldi	r23, 0x00	; 0
    225c:	8f e6       	ldi	r24, 0x6F	; 111
    225e:	93 e0       	ldi	r25, 0x03	; 3
    2260:	1a d9       	rcall	.-3532   	; 0x1496 <descendRow>
			rowCleared++;
    2262:	80 91 6b 04 	lds	r24, 0x046B	; 0x80046b <rowCleared.2323>
    2266:	90 91 6c 04 	lds	r25, 0x046C	; 0x80046c <rowCleared.2323+0x1>
    226a:	01 96       	adiw	r24, 0x01	; 1
    226c:	90 93 6c 04 	sts	0x046C, r25	; 0x80046c <rowCleared.2323+0x1>
    2270:	80 93 6b 04 	sts	0x046B, r24	; 0x80046b <rowCleared.2323>
			time = standardInterval;
    2274:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2276:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2278:	90 93 59 03 	sts	0x0359, r25	; 0x800359 <time.2327+0x1>
    227c:	80 93 58 03 	sts	0x0358, r24	; 0x800358 <time.2327>
			gameState = GameOverFlash;
    2280:	85 e0       	ldi	r24, 0x05	; 5
    2282:	80 93 5a 03 	sts	0x035A, r24	; 0x80035a <gameState.2322>
		} else {
			setScreenState(FinalScore);
    2286:	0d c0       	rjmp	.+26     	; 0x22a2 <UpdateGame+0x3b8>
    2288:	82 e0       	ldi	r24, 0x02	; 2
    228a:	87 db       	rcall	.-2290   	; 0x199a <setScreenState>
		}
		break;
    228c:	0a c0       	rjmp	.+20     	; 0x22a2 <UpdateGame+0x3b8>
	case GameOverFlash:
		time = standardInterval;
    228e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2290:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2292:	90 93 59 03 	sts	0x0359, r25	; 0x800359 <time.2327+0x1>
    2296:	80 93 58 03 	sts	0x0358, r24	; 0x800358 <time.2327>
		gameState = GameOver;
    229a:	84 e0       	ldi	r24, 0x04	; 4
    229c:	80 93 5a 03 	sts	0x035A, r24	; 0x80035a <gameState.2322>
		break;
	}
	nokia_lcd_clear();
    22a0:	00 00       	nop
    22a2:	0e 94 6c 03 	call	0x6d8	; 0x6d8 <nokia_lcd_clear>
	if(gameState == GameOverFlash) {
    22a6:	80 91 5a 03 	lds	r24, 0x035A	; 0x80035a <gameState.2322>
    22aa:	85 30       	cpi	r24, 0x05	; 5
		//Black screen
		for(short x = 0; x < WIDTH; x++) {
    22ac:	09 f5       	brne	.+66     	; 0x22f0 <UpdateGame+0x406>
    22ae:	1e 82       	std	Y+6, r1	; 0x06
    22b0:	1d 82       	std	Y+5, r1	; 0x05
			for(short y = 0; y < HEIGHT; y++) {
    22b2:	19 c0       	rjmp	.+50     	; 0x22e6 <UpdateGame+0x3fc>
    22b4:	18 86       	std	Y+8, r1	; 0x08
    22b6:	1f 82       	std	Y+7, r1	; 0x07
				drawTile(x, y, 1);
    22b8:	0d c0       	rjmp	.+26     	; 0x22d4 <UpdateGame+0x3ea>
    22ba:	2f 81       	ldd	r18, Y+7	; 0x07
    22bc:	38 85       	ldd	r19, Y+8	; 0x08
    22be:	8d 81       	ldd	r24, Y+5	; 0x05
    22c0:	9e 81       	ldd	r25, Y+6	; 0x06
    22c2:	41 e0       	ldi	r20, 0x01	; 1
    22c4:	50 e0       	ldi	r21, 0x00	; 0
    22c6:	b9 01       	movw	r22, r18
    22c8:	cc dd       	rcall	.-1128   	; 0x1e62 <drawTile>
	}
	nokia_lcd_clear();
	if(gameState == GameOverFlash) {
		//Black screen
		for(short x = 0; x < WIDTH; x++) {
			for(short y = 0; y < HEIGHT; y++) {
    22ca:	8f 81       	ldd	r24, Y+7	; 0x07
    22cc:	98 85       	ldd	r25, Y+8	; 0x08
    22ce:	01 96       	adiw	r24, 0x01	; 1
    22d0:	98 87       	std	Y+8, r25	; 0x08
    22d2:	8f 83       	std	Y+7, r24	; 0x07
    22d4:	8f 81       	ldd	r24, Y+7	; 0x07
    22d6:	98 85       	ldd	r25, Y+8	; 0x08
    22d8:	45 97       	sbiw	r24, 0x15	; 21
    22da:	7c f3       	brlt	.-34     	; 0x22ba <UpdateGame+0x3d0>
		break;
	}
	nokia_lcd_clear();
	if(gameState == GameOverFlash) {
		//Black screen
		for(short x = 0; x < WIDTH; x++) {
    22dc:	8d 81       	ldd	r24, Y+5	; 0x05
    22de:	9e 81       	ldd	r25, Y+6	; 0x06
    22e0:	01 96       	adiw	r24, 0x01	; 1
    22e2:	9e 83       	std	Y+6, r25	; 0x06
    22e4:	8d 83       	std	Y+5, r24	; 0x05
    22e6:	8d 81       	ldd	r24, Y+5	; 0x05
    22e8:	9e 81       	ldd	r25, Y+6	; 0x06
    22ea:	0c 97       	sbiw	r24, 0x0c	; 12
    22ec:	1c f3       	brlt	.-58     	; 0x22b4 <UpdateGame+0x3ca>
    22ee:	21 c1       	rjmp	.+578    	; 0x2532 <UpdateGame+0x648>
			for(short y = 0; y < HEIGHT; y++) {
				drawTile(x, y, 1);
			}
		}
	} else if(gameState == Play) {
    22f0:	80 91 5a 03 	lds	r24, 0x035A	; 0x80035a <gameState.2322>
    22f4:	81 30       	cpi	r24, 0x01	; 1
    22f6:	09 f0       	breq	.+2      	; 0x22fa <UpdateGame+0x410>
    22f8:	91 c0       	rjmp	.+290    	; 0x241c <UpdateGame+0x532>
		for(short x = 0; x < WIDTH; x++) {
    22fa:	1a 86       	std	Y+10, r1	; 0x0a
    22fc:	19 86       	std	Y+9, r1	; 0x09
    22fe:	29 c0       	rjmp	.+82     	; 0x2352 <UpdateGame+0x468>
			for(short y = 0; y < HEIGHT; y++) {
    2300:	1c 86       	std	Y+12, r1	; 0x0c
    2302:	1b 86       	std	Y+11, r1	; 0x0b
    2304:	1d c0       	rjmp	.+58     	; 0x2340 <UpdateGame+0x456>
				drawTile(x, y, g.tiles[x][y]);
    2306:	89 85       	ldd	r24, Y+9	; 0x09
    2308:	9a 85       	ldd	r25, Y+10	; 0x0a
    230a:	45 e1       	ldi	r20, 0x15	; 21
    230c:	48 9f       	mul	r20, r24
    230e:	90 01       	movw	r18, r0
    2310:	49 9f       	mul	r20, r25
    2312:	30 0d       	add	r19, r0
    2314:	11 24       	eor	r1, r1
    2316:	8b 85       	ldd	r24, Y+11	; 0x0b
    2318:	9c 85       	ldd	r25, Y+12	; 0x0c
    231a:	82 0f       	add	r24, r18
    231c:	93 1f       	adc	r25, r19
    231e:	81 59       	subi	r24, 0x91	; 145
    2320:	9c 4f       	sbci	r25, 0xFC	; 252
    2322:	fc 01       	movw	r30, r24
    2324:	80 81       	ld	r24, Z
    2326:	48 2f       	mov	r20, r24
    2328:	50 e0       	ldi	r21, 0x00	; 0
    232a:	2b 85       	ldd	r18, Y+11	; 0x0b
    232c:	3c 85       	ldd	r19, Y+12	; 0x0c
    232e:	89 85       	ldd	r24, Y+9	; 0x09
    2330:	9a 85       	ldd	r25, Y+10	; 0x0a
    2332:	b9 01       	movw	r22, r18
    2334:	96 dd       	rcall	.-1236   	; 0x1e62 <drawTile>
				drawTile(x, y, 1);
			}
		}
	} else if(gameState == Play) {
		for(short x = 0; x < WIDTH; x++) {
			for(short y = 0; y < HEIGHT; y++) {
    2336:	8b 85       	ldd	r24, Y+11	; 0x0b
    2338:	9c 85       	ldd	r25, Y+12	; 0x0c
    233a:	01 96       	adiw	r24, 0x01	; 1
    233c:	9c 87       	std	Y+12, r25	; 0x0c
    233e:	8b 87       	std	Y+11, r24	; 0x0b
    2340:	8b 85       	ldd	r24, Y+11	; 0x0b
    2342:	9c 85       	ldd	r25, Y+12	; 0x0c
    2344:	45 97       	sbiw	r24, 0x15	; 21
    2346:	fc f2       	brlt	.-66     	; 0x2306 <UpdateGame+0x41c>
			for(short y = 0; y < HEIGHT; y++) {
				drawTile(x, y, 1);
			}
		}
	} else if(gameState == Play) {
		for(short x = 0; x < WIDTH; x++) {
    2348:	89 85       	ldd	r24, Y+9	; 0x09
    234a:	9a 85       	ldd	r25, Y+10	; 0x0a
    234c:	01 96       	adiw	r24, 0x01	; 1
    234e:	9a 87       	std	Y+10, r25	; 0x0a
    2350:	89 87       	std	Y+9, r24	; 0x09
    2352:	89 85       	ldd	r24, Y+9	; 0x09
    2354:	9a 85       	ldd	r25, Y+10	; 0x0a
    2356:	0c 97       	sbiw	r24, 0x0c	; 12
    2358:	9c f2       	brlt	.-90     	; 0x2300 <UpdateGame+0x416>
			for(short y = 0; y < HEIGHT; y++) {
				drawTile(x, y, g.tiles[x][y]);
			}
		}
		for(short i = 0; i < 4; i++) {
    235a:	1e 86       	std	Y+14, r1	; 0x0e
    235c:	1d 86       	std	Y+13, r1	; 0x0d
    235e:	1e c0       	rjmp	.+60     	; 0x239c <UpdateGame+0x4b2>
			Point p = getTile(&t, i);
    2360:	8d 85       	ldd	r24, Y+13	; 0x0d
    2362:	9e 85       	ldd	r25, Y+14	; 0x0e
    2364:	bc 01       	movw	r22, r24
    2366:	8b e5       	ldi	r24, 0x5B	; 91
    2368:	93 e0       	ldi	r25, 0x03	; 3
    236a:	0e 94 06 08 	call	0x100c	; 0x100c <getTile>
    236e:	dc 01       	movw	r26, r24
    2370:	cb 01       	movw	r24, r22
    2372:	8a ab       	std	Y+50, r24	; 0x32
    2374:	9b ab       	std	Y+51, r25	; 0x33
    2376:	ac ab       	std	Y+52, r26	; 0x34
			if(p.y < HEIGHT) {
    2378:	bd ab       	std	Y+53, r27	; 0x35
    237a:	8c a9       	ldd	r24, Y+52	; 0x34
    237c:	9d a9       	ldd	r25, Y+53	; 0x35
    237e:	45 97       	sbiw	r24, 0x15	; 21
				drawTile(p.x, p.y, 1);
    2380:	44 f4       	brge	.+16     	; 0x2392 <UpdateGame+0x4a8>
    2382:	2c a9       	ldd	r18, Y+52	; 0x34
    2384:	3d a9       	ldd	r19, Y+53	; 0x35
    2386:	8a a9       	ldd	r24, Y+50	; 0x32
    2388:	9b a9       	ldd	r25, Y+51	; 0x33
    238a:	41 e0       	ldi	r20, 0x01	; 1
    238c:	50 e0       	ldi	r21, 0x00	; 0
    238e:	b9 01       	movw	r22, r18
    2390:	68 dd       	rcall	.-1328   	; 0x1e62 <drawTile>
		for(short x = 0; x < WIDTH; x++) {
			for(short y = 0; y < HEIGHT; y++) {
				drawTile(x, y, g.tiles[x][y]);
			}
		}
		for(short i = 0; i < 4; i++) {
    2392:	8d 85       	ldd	r24, Y+13	; 0x0d
    2394:	9e 85       	ldd	r25, Y+14	; 0x0e
    2396:	01 96       	adiw	r24, 0x01	; 1
    2398:	9e 87       	std	Y+14, r25	; 0x0e
    239a:	8d 87       	std	Y+13, r24	; 0x0d
    239c:	8d 85       	ldd	r24, Y+13	; 0x0d
    239e:	9e 85       	ldd	r25, Y+14	; 0x0e
    23a0:	04 97       	sbiw	r24, 0x04	; 4
			Point p = getTile(&t, i);
			if(p.y < HEIGHT) {
				drawTile(p.x, p.y, 1);
			}
		}
		Tetra landed = t;
    23a2:	f4 f2       	brlt	.-68     	; 0x2360 <UpdateGame+0x476>
    23a4:	84 e1       	ldi	r24, 0x14	; 20
    23a6:	eb e5       	ldi	r30, 0x5B	; 91
    23a8:	f3 e0       	ldi	r31, 0x03	; 3
    23aa:	de 01       	movw	r26, r28
    23ac:	5e 96       	adiw	r26, 0x1e	; 30
    23ae:	01 90       	ld	r0, Z+
    23b0:	0d 92       	st	X+, r0
    23b2:	8a 95       	dec	r24
		while(!land(&g, &landed)) {
    23b4:	e1 f7       	brne	.-8      	; 0x23ae <UpdateGame+0x4c4>
			down(&landed);
    23b6:	04 c0       	rjmp	.+8      	; 0x23c0 <UpdateGame+0x4d6>
    23b8:	ce 01       	movw	r24, r28
    23ba:	4e 96       	adiw	r24, 0x1e	; 30
    23bc:	0e 94 2a 08 	call	0x1054	; 0x1054 <down>
			if(p.y < HEIGHT) {
				drawTile(p.x, p.y, 1);
			}
		}
		Tetra landed = t;
		while(!land(&g, &landed)) {
    23c0:	ce 01       	movw	r24, r28
    23c2:	4e 96       	adiw	r24, 0x1e	; 30
    23c4:	bc 01       	movw	r22, r24
    23c6:	8f e6       	ldi	r24, 0x6F	; 111
    23c8:	93 e0       	ldi	r25, 0x03	; 3
    23ca:	a6 d9       	rcall	.-3252   	; 0x1718 <land>
    23cc:	88 23       	and	r24, r24
    23ce:	a1 f3       	breq	.-24     	; 0x23b8 <UpdateGame+0x4ce>
			down(&landed);
		}
		for(short i = 0; i < 4; i++) {
    23d0:	18 8a       	std	Y+16, r1	; 0x10
    23d2:	1f 86       	std	Y+15, r1	; 0x0f
			Point p = getTile(&landed, i);
    23d4:	1e c0       	rjmp	.+60     	; 0x2412 <UpdateGame+0x528>
    23d6:	2f 85       	ldd	r18, Y+15	; 0x0f
    23d8:	38 89       	ldd	r19, Y+16	; 0x10
    23da:	ce 01       	movw	r24, r28
    23dc:	4e 96       	adiw	r24, 0x1e	; 30
    23de:	b9 01       	movw	r22, r18
    23e0:	0e 94 06 08 	call	0x100c	; 0x100c <getTile>
    23e4:	dc 01       	movw	r26, r24
    23e6:	cb 01       	movw	r24, r22
    23e8:	8e ab       	std	Y+54, r24	; 0x36
    23ea:	9f ab       	std	Y+55, r25	; 0x37
    23ec:	a8 af       	std	Y+56, r26	; 0x38
			if(p.y < HEIGHT) {
    23ee:	b9 af       	std	Y+57, r27	; 0x39
    23f0:	88 ad       	ldd	r24, Y+56	; 0x38
    23f2:	99 ad       	ldd	r25, Y+57	; 0x39
    23f4:	45 97       	sbiw	r24, 0x15	; 21
				drawTile(p.x, p.y, 1);
    23f6:	44 f4       	brge	.+16     	; 0x2408 <UpdateGame+0x51e>
    23f8:	28 ad       	ldd	r18, Y+56	; 0x38
    23fa:	39 ad       	ldd	r19, Y+57	; 0x39
    23fc:	8e a9       	ldd	r24, Y+54	; 0x36
    23fe:	9f a9       	ldd	r25, Y+55	; 0x37
    2400:	41 e0       	ldi	r20, 0x01	; 1
    2402:	50 e0       	ldi	r21, 0x00	; 0
    2404:	b9 01       	movw	r22, r18
    2406:	2d dd       	rcall	.-1446   	; 0x1e62 <drawTile>
		}
		Tetra landed = t;
		while(!land(&g, &landed)) {
			down(&landed);
		}
		for(short i = 0; i < 4; i++) {
    2408:	8f 85       	ldd	r24, Y+15	; 0x0f
    240a:	98 89       	ldd	r25, Y+16	; 0x10
    240c:	01 96       	adiw	r24, 0x01	; 1
    240e:	98 8b       	std	Y+16, r25	; 0x10
    2410:	8f 87       	std	Y+15, r24	; 0x0f
    2412:	8f 85       	ldd	r24, Y+15	; 0x0f
    2414:	98 89       	ldd	r25, Y+16	; 0x10
    2416:	04 97       	sbiw	r24, 0x04	; 4
    2418:	f4 f2       	brlt	.-68     	; 0x23d6 <UpdateGame+0x4ec>
    241a:	8b c0       	rjmp	.+278    	; 0x2532 <UpdateGame+0x648>
			Point p = getTile(&landed, i);
			if(p.y < HEIGHT) {
				drawTile(p.x, p.y, 1);
			}
		}
	} else if(gameState == PlayInterval) {
    241c:	80 91 5a 03 	lds	r24, 0x035A	; 0x80035a <gameState.2322>
    2420:	82 30       	cpi	r24, 0x02	; 2
    2422:	09 f0       	breq	.+2      	; 0x2426 <UpdateGame+0x53c>
    2424:	56 c0       	rjmp	.+172    	; 0x24d2 <UpdateGame+0x5e8>
		for(short x = 0; x < WIDTH; x++) {
    2426:	1a 8a       	std	Y+18, r1	; 0x12
    2428:	19 8a       	std	Y+17, r1	; 0x11
    242a:	29 c0       	rjmp	.+82     	; 0x247e <UpdateGame+0x594>
			for(short y = 0; y < HEIGHT; y++) {
    242c:	1c 8a       	std	Y+20, r1	; 0x14
    242e:	1b 8a       	std	Y+19, r1	; 0x13
				drawTile(x, y, g.tiles[x][y]);
    2430:	1d c0       	rjmp	.+58     	; 0x246c <UpdateGame+0x582>
    2432:	89 89       	ldd	r24, Y+17	; 0x11
    2434:	9a 89       	ldd	r25, Y+18	; 0x12
    2436:	45 e1       	ldi	r20, 0x15	; 21
    2438:	48 9f       	mul	r20, r24
    243a:	90 01       	movw	r18, r0
    243c:	49 9f       	mul	r20, r25
    243e:	30 0d       	add	r19, r0
    2440:	11 24       	eor	r1, r1
    2442:	8b 89       	ldd	r24, Y+19	; 0x13
    2444:	9c 89       	ldd	r25, Y+20	; 0x14
    2446:	82 0f       	add	r24, r18
    2448:	93 1f       	adc	r25, r19
    244a:	81 59       	subi	r24, 0x91	; 145
    244c:	9c 4f       	sbci	r25, 0xFC	; 252
    244e:	fc 01       	movw	r30, r24
    2450:	80 81       	ld	r24, Z
    2452:	48 2f       	mov	r20, r24
    2454:	50 e0       	ldi	r21, 0x00	; 0
    2456:	2b 89       	ldd	r18, Y+19	; 0x13
    2458:	3c 89       	ldd	r19, Y+20	; 0x14
    245a:	89 89       	ldd	r24, Y+17	; 0x11
    245c:	9a 89       	ldd	r25, Y+18	; 0x12
    245e:	b9 01       	movw	r22, r18
    2460:	00 dd       	rcall	.-1536   	; 0x1e62 <drawTile>
				drawTile(p.x, p.y, 1);
			}
		}
	} else if(gameState == PlayInterval) {
		for(short x = 0; x < WIDTH; x++) {
			for(short y = 0; y < HEIGHT; y++) {
    2462:	8b 89       	ldd	r24, Y+19	; 0x13
    2464:	9c 89       	ldd	r25, Y+20	; 0x14
    2466:	01 96       	adiw	r24, 0x01	; 1
    2468:	9c 8b       	std	Y+20, r25	; 0x14
    246a:	8b 8b       	std	Y+19, r24	; 0x13
    246c:	8b 89       	ldd	r24, Y+19	; 0x13
    246e:	9c 89       	ldd	r25, Y+20	; 0x14
    2470:	45 97       	sbiw	r24, 0x15	; 21
    2472:	fc f2       	brlt	.-66     	; 0x2432 <UpdateGame+0x548>
			if(p.y < HEIGHT) {
				drawTile(p.x, p.y, 1);
			}
		}
	} else if(gameState == PlayInterval) {
		for(short x = 0; x < WIDTH; x++) {
    2474:	89 89       	ldd	r24, Y+17	; 0x11
    2476:	9a 89       	ldd	r25, Y+18	; 0x12
    2478:	01 96       	adiw	r24, 0x01	; 1
    247a:	9a 8b       	std	Y+18, r25	; 0x12
    247c:	89 8b       	std	Y+17, r24	; 0x11
    247e:	89 89       	ldd	r24, Y+17	; 0x11
    2480:	9a 89       	ldd	r25, Y+18	; 0x12
    2482:	0c 97       	sbiw	r24, 0x0c	; 12
    2484:	9c f2       	brlt	.-90     	; 0x242c <UpdateGame+0x542>
			for(short y = 0; y < HEIGHT; y++) {
				drawTile(x, y, g.tiles[x][y]);
			}
		}
		for(short i = 0; i < 4; i++) {
    2486:	1e 8a       	std	Y+22, r1	; 0x16
    2488:	1d 8a       	std	Y+21, r1	; 0x15
			Point p = getTile(&t, i);
    248a:	1e c0       	rjmp	.+60     	; 0x24c8 <UpdateGame+0x5de>
    248c:	8d 89       	ldd	r24, Y+21	; 0x15
    248e:	9e 89       	ldd	r25, Y+22	; 0x16
    2490:	bc 01       	movw	r22, r24
    2492:	8b e5       	ldi	r24, 0x5B	; 91
    2494:	93 e0       	ldi	r25, 0x03	; 3
    2496:	0e 94 06 08 	call	0x100c	; 0x100c <getTile>
    249a:	dc 01       	movw	r26, r24
    249c:	cb 01       	movw	r24, r22
    249e:	8a af       	std	Y+58, r24	; 0x3a
    24a0:	9b af       	std	Y+59, r25	; 0x3b
    24a2:	ac af       	std	Y+60, r26	; 0x3c
			if(p.y < HEIGHT) {
    24a4:	bd af       	std	Y+61, r27	; 0x3d
    24a6:	8c ad       	ldd	r24, Y+60	; 0x3c
    24a8:	9d ad       	ldd	r25, Y+61	; 0x3d
    24aa:	45 97       	sbiw	r24, 0x15	; 21
				drawTile(p.x, p.y, 1);
    24ac:	44 f4       	brge	.+16     	; 0x24be <UpdateGame+0x5d4>
    24ae:	2c ad       	ldd	r18, Y+60	; 0x3c
    24b0:	3d ad       	ldd	r19, Y+61	; 0x3d
    24b2:	8a ad       	ldd	r24, Y+58	; 0x3a
    24b4:	9b ad       	ldd	r25, Y+59	; 0x3b
    24b6:	41 e0       	ldi	r20, 0x01	; 1
    24b8:	50 e0       	ldi	r21, 0x00	; 0
    24ba:	b9 01       	movw	r22, r18
    24bc:	d2 dc       	rcall	.-1628   	; 0x1e62 <drawTile>
		for(short x = 0; x < WIDTH; x++) {
			for(short y = 0; y < HEIGHT; y++) {
				drawTile(x, y, g.tiles[x][y]);
			}
		}
		for(short i = 0; i < 4; i++) {
    24be:	8d 89       	ldd	r24, Y+21	; 0x15
    24c0:	9e 89       	ldd	r25, Y+22	; 0x16
    24c2:	01 96       	adiw	r24, 0x01	; 1
    24c4:	9e 8b       	std	Y+22, r25	; 0x16
    24c6:	8d 8b       	std	Y+21, r24	; 0x15
    24c8:	8d 89       	ldd	r24, Y+21	; 0x15
    24ca:	9e 89       	ldd	r25, Y+22	; 0x16
    24cc:	04 97       	sbiw	r24, 0x04	; 4
    24ce:	f4 f2       	brlt	.-68     	; 0x248c <UpdateGame+0x5a2>
    24d0:	30 c0       	rjmp	.+96     	; 0x2532 <UpdateGame+0x648>
				drawTile(p.x, p.y, 1);
			}
		}
	} else {
		//Otherwise just draw the grid
		for(short x = 0; x < WIDTH; x++) {
    24d2:	18 8e       	std	Y+24, r1	; 0x18
    24d4:	1f 8a       	std	Y+23, r1	; 0x17
			for(short y = 0; y < HEIGHT; y++) {
    24d6:	29 c0       	rjmp	.+82     	; 0x252a <UpdateGame+0x640>
    24d8:	1a 8e       	std	Y+26, r1	; 0x1a
    24da:	19 8e       	std	Y+25, r1	; 0x19
				drawTile(x, y, g.tiles[x][y]);
    24dc:	1d c0       	rjmp	.+58     	; 0x2518 <UpdateGame+0x62e>
    24de:	8f 89       	ldd	r24, Y+23	; 0x17
    24e0:	98 8d       	ldd	r25, Y+24	; 0x18
    24e2:	45 e1       	ldi	r20, 0x15	; 21
    24e4:	48 9f       	mul	r20, r24
    24e6:	90 01       	movw	r18, r0
    24e8:	49 9f       	mul	r20, r25
    24ea:	30 0d       	add	r19, r0
    24ec:	11 24       	eor	r1, r1
    24ee:	89 8d       	ldd	r24, Y+25	; 0x19
    24f0:	9a 8d       	ldd	r25, Y+26	; 0x1a
    24f2:	82 0f       	add	r24, r18
    24f4:	93 1f       	adc	r25, r19
    24f6:	81 59       	subi	r24, 0x91	; 145
    24f8:	9c 4f       	sbci	r25, 0xFC	; 252
    24fa:	fc 01       	movw	r30, r24
    24fc:	80 81       	ld	r24, Z
    24fe:	48 2f       	mov	r20, r24
    2500:	50 e0       	ldi	r21, 0x00	; 0
    2502:	29 8d       	ldd	r18, Y+25	; 0x19
    2504:	3a 8d       	ldd	r19, Y+26	; 0x1a
    2506:	8f 89       	ldd	r24, Y+23	; 0x17
    2508:	98 8d       	ldd	r25, Y+24	; 0x18
    250a:	b9 01       	movw	r22, r18
    250c:	aa dc       	rcall	.-1708   	; 0x1e62 <drawTile>
			}
		}
	} else {
		//Otherwise just draw the grid
		for(short x = 0; x < WIDTH; x++) {
			for(short y = 0; y < HEIGHT; y++) {
    250e:	89 8d       	ldd	r24, Y+25	; 0x19
    2510:	9a 8d       	ldd	r25, Y+26	; 0x1a
    2512:	01 96       	adiw	r24, 0x01	; 1
    2514:	9a 8f       	std	Y+26, r25	; 0x1a
    2516:	89 8f       	std	Y+25, r24	; 0x19
    2518:	89 8d       	ldd	r24, Y+25	; 0x19
    251a:	9a 8d       	ldd	r25, Y+26	; 0x1a
    251c:	45 97       	sbiw	r24, 0x15	; 21
    251e:	fc f2       	brlt	.-66     	; 0x24de <UpdateGame+0x5f4>
				drawTile(p.x, p.y, 1);
			}
		}
	} else {
		//Otherwise just draw the grid
		for(short x = 0; x < WIDTH; x++) {
    2520:	8f 89       	ldd	r24, Y+23	; 0x17
    2522:	98 8d       	ldd	r25, Y+24	; 0x18
    2524:	01 96       	adiw	r24, 0x01	; 1
    2526:	98 8f       	std	Y+24, r25	; 0x18
    2528:	8f 8b       	std	Y+23, r24	; 0x17
    252a:	8f 89       	ldd	r24, Y+23	; 0x17
    252c:	98 8d       	ldd	r25, Y+24	; 0x18
    252e:	0c 97       	sbiw	r24, 0x0c	; 12
    2530:	9c f2       	brlt	.-90     	; 0x24d8 <UpdateGame+0x5ee>
			for(short y = 0; y < HEIGHT; y++) {
				drawTile(x, y, g.tiles[x][y]);
			}
		}
	}
	nokia_lcd_render();
    2532:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <nokia_lcd_render>
    2536:	01 c0       	rjmp	.+2      	; 0x253a <UpdateGame+0x650>
	static short time = 0;

	//static char pressed_prev = 0;

	if(--time > 0) {
		return;
    2538:	00 00       	nop
				drawTile(x, y, g.tiles[x][y]);
			}
		}
	}
	nokia_lcd_render();
}
    253a:	cf 5a       	subi	r28, 0xAF	; 175
    253c:	df 4f       	sbci	r29, 0xFF	; 255
    253e:	0f b6       	in	r0, 0x3f	; 63
    2540:	f8 94       	cli
    2542:	de bf       	out	0x3e, r29	; 62
    2544:	0f be       	out	0x3f, r0	; 63
    2546:	cd bf       	out	0x3d, r28	; 61
    2548:	df 91       	pop	r29
    254a:	cf 91       	pop	r28
    254c:	08 95       	ret

0000254e <UpdateState>:
void UpdateState() {
    254e:	cf 93       	push	r28
    2550:	df 93       	push	r29
    2552:	cd b7       	in	r28, 0x3d	; 61
    2554:	de b7       	in	r29, 0x3e	; 62
	switch(screenState) {
    2556:	80 91 71 04 	lds	r24, 0x0471	; 0x800471 <screenState>
    255a:	88 2f       	mov	r24, r24
    255c:	90 e0       	ldi	r25, 0x00	; 0
    255e:	81 30       	cpi	r24, 0x01	; 1
    2560:	91 05       	cpc	r25, r1
    2562:	41 f0       	breq	.+16     	; 0x2574 <UpdateState+0x26>
    2564:	82 30       	cpi	r24, 0x02	; 2
    2566:	91 05       	cpc	r25, r1
    2568:	39 f0       	breq	.+14     	; 0x2578 <UpdateState+0x2a>
    256a:	89 2b       	or	r24, r25
    256c:	09 f0       	breq	.+2      	; 0x2570 <UpdateState+0x22>
	case Title: UpdateTitle(); break;
	case Game: UpdateGame(); break;
	case FinalScore: UpdateFinalScore(); break;
	}
}
    256e:	06 c0       	rjmp	.+12     	; 0x257c <UpdateState+0x2e>
	}
	nokia_lcd_render();
}
void UpdateState() {
	switch(screenState) {
	case Title: UpdateTitle(); break;
    2570:	d4 da       	rcall	.-2648   	; 0x1b1a <UpdateTitle>
    2572:	04 c0       	rjmp	.+8      	; 0x257c <UpdateState+0x2e>
	case Game: UpdateGame(); break;
    2574:	ba dc       	rcall	.-1676   	; 0x1eea <UpdateGame>
    2576:	02 c0       	rjmp	.+4      	; 0x257c <UpdateState+0x2e>
	case FinalScore: UpdateFinalScore(); break;
    2578:	a8 db       	rcall	.-2224   	; 0x1cca <UpdateFinalScore>
    257a:	00 00       	nop
    257c:	00 00       	nop
	}
}
    257e:	df 91       	pop	r29
    2580:	cf 91       	pop	r28
    2582:	08 95       	ret

00002584 <main>:
    2584:	cf 93       	push	r28
int main(void)
{
    2586:	df 93       	push	r29
    2588:	cd b7       	in	r28, 0x3d	; 61
    258a:	de b7       	in	r29, 0x3e	; 62
    nokia_lcd_render();

	TimerSet(1000);
	TimerOn();
	*/
	DDR_BUTTONS = 0xFF;
    258c:	8a e2       	ldi	r24, 0x2A	; 42
    258e:	90 e0       	ldi	r25, 0x00	; 0
    2590:	2f ef       	ldi	r18, 0xFF	; 255
    2592:	fc 01       	movw	r30, r24
    2594:	20 83       	st	Z, r18
	PIN_BUTTONS = -1;
    2596:	89 e2       	ldi	r24, 0x29	; 41
    2598:	90 e0       	ldi	r25, 0x00	; 0
    259a:	2f ef       	ldi	r18, 0xFF	; 255
    259c:	fc 01       	movw	r30, r24
    259e:	20 83       	st	Z, r18
	    nokia_lcd_init();
    25a0:	0e 94 f7 01 	call	0x3ee	; 0x3ee <nokia_lcd_init>
	    nokia_lcd_clear();
    25a4:	0e 94 6c 03 	call	0x6d8	; 0x6d8 <nokia_lcd_clear>
		TimerSet(10);
    25a8:	6a e0       	ldi	r22, 0x0A	; 10
    25aa:	70 e0       	ldi	r23, 0x00	; 0
    25ac:	80 e0       	ldi	r24, 0x00	; 0
    25ae:	90 e0       	ldi	r25, 0x00	; 0
    25b0:	0e 94 ef 04 	call	0x9de	; 0x9de <TimerSet>
		TimerOn();
    25b4:	0e 94 1d 05 	call	0xa3a	; 0xa3a <TimerOn>
	while(1) {
		UpdateState();
    25b8:	ca df       	rcall	.-108    	; 0x254e <UpdateState>
		while(!TimerFlag);
    25ba:	00 00       	nop
    25bc:	80 91 4e 03 	lds	r24, 0x034E	; 0x80034e <TimerFlag>
    25c0:	88 23       	and	r24, r24
    25c2:	e1 f3       	breq	.-8      	; 0x25bc <main+0x38>
		TimerFlag = 0;
    25c4:	10 92 4e 03 	sts	0x034E, r1	; 0x80034e <TimerFlag>
	}
    25c8:	f7 cf       	rjmp	.-18     	; 0x25b8 <main+0x34>

000025ca <__cmpsf2>:
    25ca:	2f d0       	rcall	.+94     	; 0x262a <__fp_cmp>
    25cc:	08 f4       	brcc	.+2      	; 0x25d0 <__cmpsf2+0x6>
    25ce:	81 e0       	ldi	r24, 0x01	; 1
    25d0:	08 95       	ret

000025d2 <__fixunssfsi>:
    25d2:	57 d0       	rcall	.+174    	; 0x2682 <__fp_splitA>
    25d4:	88 f0       	brcs	.+34     	; 0x25f8 <__fixunssfsi+0x26>
    25d6:	9f 57       	subi	r25, 0x7F	; 127
    25d8:	90 f0       	brcs	.+36     	; 0x25fe <__fixunssfsi+0x2c>
    25da:	b9 2f       	mov	r27, r25
    25dc:	99 27       	eor	r25, r25
    25de:	b7 51       	subi	r27, 0x17	; 23
    25e0:	a0 f0       	brcs	.+40     	; 0x260a <__fixunssfsi+0x38>
    25e2:	d1 f0       	breq	.+52     	; 0x2618 <__fixunssfsi+0x46>
    25e4:	66 0f       	add	r22, r22
    25e6:	77 1f       	adc	r23, r23
    25e8:	88 1f       	adc	r24, r24
    25ea:	99 1f       	adc	r25, r25
    25ec:	1a f0       	brmi	.+6      	; 0x25f4 <__fixunssfsi+0x22>
    25ee:	ba 95       	dec	r27
    25f0:	c9 f7       	brne	.-14     	; 0x25e4 <__fixunssfsi+0x12>
    25f2:	12 c0       	rjmp	.+36     	; 0x2618 <__fixunssfsi+0x46>
    25f4:	b1 30       	cpi	r27, 0x01	; 1
    25f6:	81 f0       	breq	.+32     	; 0x2618 <__fixunssfsi+0x46>
    25f8:	5e d0       	rcall	.+188    	; 0x26b6 <__fp_zero>
    25fa:	b1 e0       	ldi	r27, 0x01	; 1
    25fc:	08 95       	ret
    25fe:	5b c0       	rjmp	.+182    	; 0x26b6 <__fp_zero>
    2600:	67 2f       	mov	r22, r23
    2602:	78 2f       	mov	r23, r24
    2604:	88 27       	eor	r24, r24
    2606:	b8 5f       	subi	r27, 0xF8	; 248
    2608:	39 f0       	breq	.+14     	; 0x2618 <__fixunssfsi+0x46>
    260a:	b9 3f       	cpi	r27, 0xF9	; 249
    260c:	cc f3       	brlt	.-14     	; 0x2600 <__fixunssfsi+0x2e>
    260e:	86 95       	lsr	r24
    2610:	77 95       	ror	r23
    2612:	67 95       	ror	r22
    2614:	b3 95       	inc	r27
    2616:	d9 f7       	brne	.-10     	; 0x260e <__fixunssfsi+0x3c>
    2618:	3e f4       	brtc	.+14     	; 0x2628 <__fixunssfsi+0x56>
    261a:	90 95       	com	r25
    261c:	80 95       	com	r24
    261e:	70 95       	com	r23
    2620:	61 95       	neg	r22
    2622:	7f 4f       	sbci	r23, 0xFF	; 255
    2624:	8f 4f       	sbci	r24, 0xFF	; 255
    2626:	9f 4f       	sbci	r25, 0xFF	; 255
    2628:	08 95       	ret

0000262a <__fp_cmp>:
    262a:	99 0f       	add	r25, r25
    262c:	00 08       	sbc	r0, r0
    262e:	55 0f       	add	r21, r21
    2630:	aa 0b       	sbc	r26, r26
    2632:	e0 e8       	ldi	r30, 0x80	; 128
    2634:	fe ef       	ldi	r31, 0xFE	; 254
    2636:	16 16       	cp	r1, r22
    2638:	17 06       	cpc	r1, r23
    263a:	e8 07       	cpc	r30, r24
    263c:	f9 07       	cpc	r31, r25
    263e:	c0 f0       	brcs	.+48     	; 0x2670 <__fp_cmp+0x46>
    2640:	12 16       	cp	r1, r18
    2642:	13 06       	cpc	r1, r19
    2644:	e4 07       	cpc	r30, r20
    2646:	f5 07       	cpc	r31, r21
    2648:	98 f0       	brcs	.+38     	; 0x2670 <__fp_cmp+0x46>
    264a:	62 1b       	sub	r22, r18
    264c:	73 0b       	sbc	r23, r19
    264e:	84 0b       	sbc	r24, r20
    2650:	95 0b       	sbc	r25, r21
    2652:	39 f4       	brne	.+14     	; 0x2662 <__fp_cmp+0x38>
    2654:	0a 26       	eor	r0, r26
    2656:	61 f0       	breq	.+24     	; 0x2670 <__fp_cmp+0x46>
    2658:	23 2b       	or	r18, r19
    265a:	24 2b       	or	r18, r20
    265c:	25 2b       	or	r18, r21
    265e:	21 f4       	brne	.+8      	; 0x2668 <__fp_cmp+0x3e>
    2660:	08 95       	ret
    2662:	0a 26       	eor	r0, r26
    2664:	09 f4       	brne	.+2      	; 0x2668 <__fp_cmp+0x3e>
    2666:	a1 40       	sbci	r26, 0x01	; 1
    2668:	a6 95       	lsr	r26
    266a:	8f ef       	ldi	r24, 0xFF	; 255
    266c:	81 1d       	adc	r24, r1
    266e:	81 1d       	adc	r24, r1
    2670:	08 95       	ret

00002672 <__fp_split3>:
    2672:	57 fd       	sbrc	r21, 7
    2674:	90 58       	subi	r25, 0x80	; 128
    2676:	44 0f       	add	r20, r20
    2678:	55 1f       	adc	r21, r21
    267a:	59 f0       	breq	.+22     	; 0x2692 <__fp_splitA+0x10>
    267c:	5f 3f       	cpi	r21, 0xFF	; 255
    267e:	71 f0       	breq	.+28     	; 0x269c <__fp_splitA+0x1a>
    2680:	47 95       	ror	r20

00002682 <__fp_splitA>:
    2682:	88 0f       	add	r24, r24
    2684:	97 fb       	bst	r25, 7
    2686:	99 1f       	adc	r25, r25
    2688:	61 f0       	breq	.+24     	; 0x26a2 <__fp_splitA+0x20>
    268a:	9f 3f       	cpi	r25, 0xFF	; 255
    268c:	79 f0       	breq	.+30     	; 0x26ac <__fp_splitA+0x2a>
    268e:	87 95       	ror	r24
    2690:	08 95       	ret
    2692:	12 16       	cp	r1, r18
    2694:	13 06       	cpc	r1, r19
    2696:	14 06       	cpc	r1, r20
    2698:	55 1f       	adc	r21, r21
    269a:	f2 cf       	rjmp	.-28     	; 0x2680 <__fp_split3+0xe>
    269c:	46 95       	lsr	r20
    269e:	f1 df       	rcall	.-30     	; 0x2682 <__fp_splitA>
    26a0:	08 c0       	rjmp	.+16     	; 0x26b2 <__fp_splitA+0x30>
    26a2:	16 16       	cp	r1, r22
    26a4:	17 06       	cpc	r1, r23
    26a6:	18 06       	cpc	r1, r24
    26a8:	99 1f       	adc	r25, r25
    26aa:	f1 cf       	rjmp	.-30     	; 0x268e <__fp_splitA+0xc>
    26ac:	86 95       	lsr	r24
    26ae:	71 05       	cpc	r23, r1
    26b0:	61 05       	cpc	r22, r1
    26b2:	08 94       	sec
    26b4:	08 95       	ret

000026b6 <__fp_zero>:
    26b6:	e8 94       	clt

000026b8 <__fp_szero>:
    26b8:	bb 27       	eor	r27, r27
    26ba:	66 27       	eor	r22, r22
    26bc:	77 27       	eor	r23, r23
    26be:	cb 01       	movw	r24, r22
    26c0:	97 f9       	bld	r25, 7
    26c2:	08 95       	ret

000026c4 <__gesf2>:
    26c4:	b2 df       	rcall	.-156    	; 0x262a <__fp_cmp>
    26c6:	08 f4       	brcc	.+2      	; 0x26ca <__gesf2+0x6>
    26c8:	8f ef       	ldi	r24, 0xFF	; 255
    26ca:	08 95       	ret

000026cc <__mulsf3>:
    26cc:	0b d0       	rcall	.+22     	; 0x26e4 <__mulsf3x>
    26ce:	78 c0       	rjmp	.+240    	; 0x27c0 <__fp_round>
    26d0:	69 d0       	rcall	.+210    	; 0x27a4 <__fp_pscA>
    26d2:	28 f0       	brcs	.+10     	; 0x26de <__mulsf3+0x12>
    26d4:	6e d0       	rcall	.+220    	; 0x27b2 <__fp_pscB>
    26d6:	18 f0       	brcs	.+6      	; 0x26de <__mulsf3+0x12>
    26d8:	95 23       	and	r25, r21
    26da:	09 f0       	breq	.+2      	; 0x26de <__mulsf3+0x12>
    26dc:	5a c0       	rjmp	.+180    	; 0x2792 <__fp_inf>
    26de:	5f c0       	rjmp	.+190    	; 0x279e <__fp_nan>
    26e0:	11 24       	eor	r1, r1
    26e2:	ea cf       	rjmp	.-44     	; 0x26b8 <__fp_szero>

000026e4 <__mulsf3x>:
    26e4:	c6 df       	rcall	.-116    	; 0x2672 <__fp_split3>
    26e6:	a0 f3       	brcs	.-24     	; 0x26d0 <__mulsf3+0x4>

000026e8 <__mulsf3_pse>:
    26e8:	95 9f       	mul	r25, r21
    26ea:	d1 f3       	breq	.-12     	; 0x26e0 <__mulsf3+0x14>
    26ec:	95 0f       	add	r25, r21
    26ee:	50 e0       	ldi	r21, 0x00	; 0
    26f0:	55 1f       	adc	r21, r21
    26f2:	62 9f       	mul	r22, r18
    26f4:	f0 01       	movw	r30, r0
    26f6:	72 9f       	mul	r23, r18
    26f8:	bb 27       	eor	r27, r27
    26fa:	f0 0d       	add	r31, r0
    26fc:	b1 1d       	adc	r27, r1
    26fe:	63 9f       	mul	r22, r19
    2700:	aa 27       	eor	r26, r26
    2702:	f0 0d       	add	r31, r0
    2704:	b1 1d       	adc	r27, r1
    2706:	aa 1f       	adc	r26, r26
    2708:	64 9f       	mul	r22, r20
    270a:	66 27       	eor	r22, r22
    270c:	b0 0d       	add	r27, r0
    270e:	a1 1d       	adc	r26, r1
    2710:	66 1f       	adc	r22, r22
    2712:	82 9f       	mul	r24, r18
    2714:	22 27       	eor	r18, r18
    2716:	b0 0d       	add	r27, r0
    2718:	a1 1d       	adc	r26, r1
    271a:	62 1f       	adc	r22, r18
    271c:	73 9f       	mul	r23, r19
    271e:	b0 0d       	add	r27, r0
    2720:	a1 1d       	adc	r26, r1
    2722:	62 1f       	adc	r22, r18
    2724:	83 9f       	mul	r24, r19
    2726:	a0 0d       	add	r26, r0
    2728:	61 1d       	adc	r22, r1
    272a:	22 1f       	adc	r18, r18
    272c:	74 9f       	mul	r23, r20
    272e:	33 27       	eor	r19, r19
    2730:	a0 0d       	add	r26, r0
    2732:	61 1d       	adc	r22, r1
    2734:	23 1f       	adc	r18, r19
    2736:	84 9f       	mul	r24, r20
    2738:	60 0d       	add	r22, r0
    273a:	21 1d       	adc	r18, r1
    273c:	82 2f       	mov	r24, r18
    273e:	76 2f       	mov	r23, r22
    2740:	6a 2f       	mov	r22, r26
    2742:	11 24       	eor	r1, r1
    2744:	9f 57       	subi	r25, 0x7F	; 127
    2746:	50 40       	sbci	r21, 0x00	; 0
    2748:	8a f0       	brmi	.+34     	; 0x276c <__mulsf3_pse+0x84>
    274a:	e1 f0       	breq	.+56     	; 0x2784 <__mulsf3_pse+0x9c>
    274c:	88 23       	and	r24, r24
    274e:	4a f0       	brmi	.+18     	; 0x2762 <__mulsf3_pse+0x7a>
    2750:	ee 0f       	add	r30, r30
    2752:	ff 1f       	adc	r31, r31
    2754:	bb 1f       	adc	r27, r27
    2756:	66 1f       	adc	r22, r22
    2758:	77 1f       	adc	r23, r23
    275a:	88 1f       	adc	r24, r24
    275c:	91 50       	subi	r25, 0x01	; 1
    275e:	50 40       	sbci	r21, 0x00	; 0
    2760:	a9 f7       	brne	.-22     	; 0x274c <__mulsf3_pse+0x64>
    2762:	9e 3f       	cpi	r25, 0xFE	; 254
    2764:	51 05       	cpc	r21, r1
    2766:	70 f0       	brcs	.+28     	; 0x2784 <__mulsf3_pse+0x9c>
    2768:	14 c0       	rjmp	.+40     	; 0x2792 <__fp_inf>
    276a:	a6 cf       	rjmp	.-180    	; 0x26b8 <__fp_szero>
    276c:	5f 3f       	cpi	r21, 0xFF	; 255
    276e:	ec f3       	brlt	.-6      	; 0x276a <__mulsf3_pse+0x82>
    2770:	98 3e       	cpi	r25, 0xE8	; 232
    2772:	dc f3       	brlt	.-10     	; 0x276a <__mulsf3_pse+0x82>
    2774:	86 95       	lsr	r24
    2776:	77 95       	ror	r23
    2778:	67 95       	ror	r22
    277a:	b7 95       	ror	r27
    277c:	f7 95       	ror	r31
    277e:	e7 95       	ror	r30
    2780:	9f 5f       	subi	r25, 0xFF	; 255
    2782:	c1 f7       	brne	.-16     	; 0x2774 <__mulsf3_pse+0x8c>
    2784:	fe 2b       	or	r31, r30
    2786:	88 0f       	add	r24, r24
    2788:	91 1d       	adc	r25, r1
    278a:	96 95       	lsr	r25
    278c:	87 95       	ror	r24
    278e:	97 f9       	bld	r25, 7
    2790:	08 95       	ret

00002792 <__fp_inf>:
    2792:	97 f9       	bld	r25, 7
    2794:	9f 67       	ori	r25, 0x7F	; 127
    2796:	80 e8       	ldi	r24, 0x80	; 128
    2798:	70 e0       	ldi	r23, 0x00	; 0
    279a:	60 e0       	ldi	r22, 0x00	; 0
    279c:	08 95       	ret

0000279e <__fp_nan>:
    279e:	9f ef       	ldi	r25, 0xFF	; 255
    27a0:	80 ec       	ldi	r24, 0xC0	; 192
    27a2:	08 95       	ret

000027a4 <__fp_pscA>:
    27a4:	00 24       	eor	r0, r0
    27a6:	0a 94       	dec	r0
    27a8:	16 16       	cp	r1, r22
    27aa:	17 06       	cpc	r1, r23
    27ac:	18 06       	cpc	r1, r24
    27ae:	09 06       	cpc	r0, r25
    27b0:	08 95       	ret

000027b2 <__fp_pscB>:
    27b2:	00 24       	eor	r0, r0
    27b4:	0a 94       	dec	r0
    27b6:	12 16       	cp	r1, r18
    27b8:	13 06       	cpc	r1, r19
    27ba:	14 06       	cpc	r1, r20
    27bc:	05 06       	cpc	r0, r21
    27be:	08 95       	ret

000027c0 <__fp_round>:
    27c0:	09 2e       	mov	r0, r25
    27c2:	03 94       	inc	r0
    27c4:	00 0c       	add	r0, r0
    27c6:	11 f4       	brne	.+4      	; 0x27cc <__fp_round+0xc>
    27c8:	88 23       	and	r24, r24
    27ca:	52 f0       	brmi	.+20     	; 0x27e0 <__fp_round+0x20>
    27cc:	bb 0f       	add	r27, r27
    27ce:	40 f4       	brcc	.+16     	; 0x27e0 <__fp_round+0x20>
    27d0:	bf 2b       	or	r27, r31
    27d2:	11 f4       	brne	.+4      	; 0x27d8 <__fp_round+0x18>
    27d4:	60 ff       	sbrs	r22, 0
    27d6:	04 c0       	rjmp	.+8      	; 0x27e0 <__fp_round+0x20>
    27d8:	6f 5f       	subi	r22, 0xFF	; 255
    27da:	7f 4f       	sbci	r23, 0xFF	; 255
    27dc:	8f 4f       	sbci	r24, 0xFF	; 255
    27de:	9f 4f       	sbci	r25, 0xFF	; 255
    27e0:	08 95       	ret

000027e2 <__udivmodqi4>:
    27e2:	99 1b       	sub	r25, r25
    27e4:	79 e0       	ldi	r23, 0x09	; 9
    27e6:	04 c0       	rjmp	.+8      	; 0x27f0 <__udivmodqi4_ep>

000027e8 <__udivmodqi4_loop>:
    27e8:	99 1f       	adc	r25, r25
    27ea:	96 17       	cp	r25, r22
    27ec:	08 f0       	brcs	.+2      	; 0x27f0 <__udivmodqi4_ep>
    27ee:	96 1b       	sub	r25, r22

000027f0 <__udivmodqi4_ep>:
    27f0:	88 1f       	adc	r24, r24
    27f2:	7a 95       	dec	r23
    27f4:	c9 f7       	brne	.-14     	; 0x27e8 <__udivmodqi4_loop>
    27f6:	80 95       	com	r24
    27f8:	08 95       	ret

000027fa <__divmodhi4>:
    27fa:	97 fb       	bst	r25, 7
    27fc:	07 2e       	mov	r0, r23
    27fe:	16 f4       	brtc	.+4      	; 0x2804 <__divmodhi4+0xa>
    2800:	00 94       	com	r0
    2802:	06 d0       	rcall	.+12     	; 0x2810 <__divmodhi4_neg1>
    2804:	77 fd       	sbrc	r23, 7
    2806:	08 d0       	rcall	.+16     	; 0x2818 <__divmodhi4_neg2>
    2808:	14 d0       	rcall	.+40     	; 0x2832 <__udivmodhi4>
    280a:	07 fc       	sbrc	r0, 7
    280c:	05 d0       	rcall	.+10     	; 0x2818 <__divmodhi4_neg2>
    280e:	3e f4       	brtc	.+14     	; 0x281e <__divmodhi4_exit>

00002810 <__divmodhi4_neg1>:
    2810:	90 95       	com	r25
    2812:	81 95       	neg	r24
    2814:	9f 4f       	sbci	r25, 0xFF	; 255
    2816:	08 95       	ret

00002818 <__divmodhi4_neg2>:
    2818:	70 95       	com	r23
    281a:	61 95       	neg	r22
    281c:	7f 4f       	sbci	r23, 0xFF	; 255

0000281e <__divmodhi4_exit>:
    281e:	08 95       	ret

00002820 <__tablejump2__>:
    2820:	ee 0f       	add	r30, r30
    2822:	ff 1f       	adc	r31, r31
    2824:	00 24       	eor	r0, r0
    2826:	00 1c       	adc	r0, r0
    2828:	0b be       	out	0x3b, r0	; 59
    282a:	07 90       	elpm	r0, Z+
    282c:	f6 91       	elpm	r31, Z
    282e:	e0 2d       	mov	r30, r0
    2830:	09 94       	ijmp

00002832 <__udivmodhi4>:
    2832:	aa 1b       	sub	r26, r26
    2834:	bb 1b       	sub	r27, r27
    2836:	51 e1       	ldi	r21, 0x11	; 17
    2838:	07 c0       	rjmp	.+14     	; 0x2848 <__udivmodhi4_ep>

0000283a <__udivmodhi4_loop>:
    283a:	aa 1f       	adc	r26, r26
    283c:	bb 1f       	adc	r27, r27
    283e:	a6 17       	cp	r26, r22
    2840:	b7 07       	cpc	r27, r23
    2842:	10 f0       	brcs	.+4      	; 0x2848 <__udivmodhi4_ep>
    2844:	a6 1b       	sub	r26, r22
    2846:	b7 0b       	sbc	r27, r23

00002848 <__udivmodhi4_ep>:
    2848:	88 1f       	adc	r24, r24
    284a:	99 1f       	adc	r25, r25
    284c:	5a 95       	dec	r21
    284e:	a9 f7       	brne	.-22     	; 0x283a <__udivmodhi4_loop>
    2850:	80 95       	com	r24
    2852:	90 95       	com	r25
    2854:	bc 01       	movw	r22, r24
    2856:	cd 01       	movw	r24, r26
    2858:	08 95       	ret

0000285a <do_rand>:
    285a:	8f 92       	push	r8
    285c:	9f 92       	push	r9
    285e:	af 92       	push	r10
    2860:	bf 92       	push	r11
    2862:	cf 92       	push	r12
    2864:	df 92       	push	r13
    2866:	ef 92       	push	r14
    2868:	ff 92       	push	r15
    286a:	cf 93       	push	r28
    286c:	df 93       	push	r29
    286e:	ec 01       	movw	r28, r24
    2870:	68 81       	ld	r22, Y
    2872:	79 81       	ldd	r23, Y+1	; 0x01
    2874:	8a 81       	ldd	r24, Y+2	; 0x02
    2876:	9b 81       	ldd	r25, Y+3	; 0x03
    2878:	61 15       	cp	r22, r1
    287a:	71 05       	cpc	r23, r1
    287c:	81 05       	cpc	r24, r1
    287e:	91 05       	cpc	r25, r1
    2880:	21 f4       	brne	.+8      	; 0x288a <do_rand+0x30>
    2882:	64 e2       	ldi	r22, 0x24	; 36
    2884:	79 ed       	ldi	r23, 0xD9	; 217
    2886:	8b e5       	ldi	r24, 0x5B	; 91
    2888:	97 e0       	ldi	r25, 0x07	; 7
    288a:	2d e1       	ldi	r18, 0x1D	; 29
    288c:	33 ef       	ldi	r19, 0xF3	; 243
    288e:	41 e0       	ldi	r20, 0x01	; 1
    2890:	50 e0       	ldi	r21, 0x00	; 0
    2892:	38 d0       	rcall	.+112    	; 0x2904 <__divmodsi4>
    2894:	49 01       	movw	r8, r18
    2896:	5a 01       	movw	r10, r20
    2898:	9b 01       	movw	r18, r22
    289a:	ac 01       	movw	r20, r24
    289c:	a7 ea       	ldi	r26, 0xA7	; 167
    289e:	b1 e4       	ldi	r27, 0x41	; 65
    28a0:	4d d0       	rcall	.+154    	; 0x293c <__muluhisi3>
    28a2:	6b 01       	movw	r12, r22
    28a4:	7c 01       	movw	r14, r24
    28a6:	ac ee       	ldi	r26, 0xEC	; 236
    28a8:	b4 ef       	ldi	r27, 0xF4	; 244
    28aa:	a5 01       	movw	r20, r10
    28ac:	94 01       	movw	r18, r8
    28ae:	52 d0       	rcall	.+164    	; 0x2954 <__mulohisi3>
    28b0:	dc 01       	movw	r26, r24
    28b2:	cb 01       	movw	r24, r22
    28b4:	8c 0d       	add	r24, r12
    28b6:	9d 1d       	adc	r25, r13
    28b8:	ae 1d       	adc	r26, r14
    28ba:	bf 1d       	adc	r27, r15
    28bc:	b7 ff       	sbrs	r27, 7
    28be:	03 c0       	rjmp	.+6      	; 0x28c6 <do_rand+0x6c>
    28c0:	01 97       	sbiw	r24, 0x01	; 1
    28c2:	a1 09       	sbc	r26, r1
    28c4:	b0 48       	sbci	r27, 0x80	; 128
    28c6:	88 83       	st	Y, r24
    28c8:	99 83       	std	Y+1, r25	; 0x01
    28ca:	aa 83       	std	Y+2, r26	; 0x02
    28cc:	bb 83       	std	Y+3, r27	; 0x03
    28ce:	9f 77       	andi	r25, 0x7F	; 127
    28d0:	df 91       	pop	r29
    28d2:	cf 91       	pop	r28
    28d4:	ff 90       	pop	r15
    28d6:	ef 90       	pop	r14
    28d8:	df 90       	pop	r13
    28da:	cf 90       	pop	r12
    28dc:	bf 90       	pop	r11
    28de:	af 90       	pop	r10
    28e0:	9f 90       	pop	r9
    28e2:	8f 90       	pop	r8
    28e4:	08 95       	ret

000028e6 <rand_r>:
    28e6:	b9 cf       	rjmp	.-142    	; 0x285a <do_rand>

000028e8 <rand>:
    28e8:	80 e0       	ldi	r24, 0x00	; 0
    28ea:	91 e0       	ldi	r25, 0x01	; 1
    28ec:	b6 cf       	rjmp	.-148    	; 0x285a <do_rand>

000028ee <srand>:
    28ee:	a0 e0       	ldi	r26, 0x00	; 0
    28f0:	b0 e0       	ldi	r27, 0x00	; 0
    28f2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    28f6:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
    28fa:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
    28fe:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
    2902:	08 95       	ret

00002904 <__divmodsi4>:
    2904:	05 2e       	mov	r0, r21
    2906:	97 fb       	bst	r25, 7
    2908:	16 f4       	brtc	.+4      	; 0x290e <__divmodsi4+0xa>
    290a:	00 94       	com	r0
    290c:	0f d0       	rcall	.+30     	; 0x292c <__negsi2>
    290e:	57 fd       	sbrc	r21, 7
    2910:	05 d0       	rcall	.+10     	; 0x291c <__divmodsi4_neg2>
    2912:	24 d0       	rcall	.+72     	; 0x295c <__udivmodsi4>
    2914:	07 fc       	sbrc	r0, 7
    2916:	02 d0       	rcall	.+4      	; 0x291c <__divmodsi4_neg2>
    2918:	46 f4       	brtc	.+16     	; 0x292a <__divmodsi4_exit>
    291a:	08 c0       	rjmp	.+16     	; 0x292c <__negsi2>

0000291c <__divmodsi4_neg2>:
    291c:	50 95       	com	r21
    291e:	40 95       	com	r20
    2920:	30 95       	com	r19
    2922:	21 95       	neg	r18
    2924:	3f 4f       	sbci	r19, 0xFF	; 255
    2926:	4f 4f       	sbci	r20, 0xFF	; 255
    2928:	5f 4f       	sbci	r21, 0xFF	; 255

0000292a <__divmodsi4_exit>:
    292a:	08 95       	ret

0000292c <__negsi2>:
    292c:	90 95       	com	r25
    292e:	80 95       	com	r24
    2930:	70 95       	com	r23
    2932:	61 95       	neg	r22
    2934:	7f 4f       	sbci	r23, 0xFF	; 255
    2936:	8f 4f       	sbci	r24, 0xFF	; 255
    2938:	9f 4f       	sbci	r25, 0xFF	; 255
    293a:	08 95       	ret

0000293c <__muluhisi3>:
    293c:	31 d0       	rcall	.+98     	; 0x29a0 <__umulhisi3>
    293e:	a5 9f       	mul	r26, r21
    2940:	90 0d       	add	r25, r0
    2942:	b4 9f       	mul	r27, r20
    2944:	90 0d       	add	r25, r0
    2946:	a4 9f       	mul	r26, r20
    2948:	80 0d       	add	r24, r0
    294a:	91 1d       	adc	r25, r1
    294c:	11 24       	eor	r1, r1
    294e:	08 95       	ret

00002950 <__mulshisi3>:
    2950:	b7 ff       	sbrs	r27, 7
    2952:	f4 cf       	rjmp	.-24     	; 0x293c <__muluhisi3>

00002954 <__mulohisi3>:
    2954:	f3 df       	rcall	.-26     	; 0x293c <__muluhisi3>
    2956:	82 1b       	sub	r24, r18
    2958:	93 0b       	sbc	r25, r19
    295a:	08 95       	ret

0000295c <__udivmodsi4>:
    295c:	a1 e2       	ldi	r26, 0x21	; 33
    295e:	1a 2e       	mov	r1, r26
    2960:	aa 1b       	sub	r26, r26
    2962:	bb 1b       	sub	r27, r27
    2964:	fd 01       	movw	r30, r26
    2966:	0d c0       	rjmp	.+26     	; 0x2982 <__udivmodsi4_ep>

00002968 <__udivmodsi4_loop>:
    2968:	aa 1f       	adc	r26, r26
    296a:	bb 1f       	adc	r27, r27
    296c:	ee 1f       	adc	r30, r30
    296e:	ff 1f       	adc	r31, r31
    2970:	a2 17       	cp	r26, r18
    2972:	b3 07       	cpc	r27, r19
    2974:	e4 07       	cpc	r30, r20
    2976:	f5 07       	cpc	r31, r21
    2978:	20 f0       	brcs	.+8      	; 0x2982 <__udivmodsi4_ep>
    297a:	a2 1b       	sub	r26, r18
    297c:	b3 0b       	sbc	r27, r19
    297e:	e4 0b       	sbc	r30, r20
    2980:	f5 0b       	sbc	r31, r21

00002982 <__udivmodsi4_ep>:
    2982:	66 1f       	adc	r22, r22
    2984:	77 1f       	adc	r23, r23
    2986:	88 1f       	adc	r24, r24
    2988:	99 1f       	adc	r25, r25
    298a:	1a 94       	dec	r1
    298c:	69 f7       	brne	.-38     	; 0x2968 <__udivmodsi4_loop>
    298e:	60 95       	com	r22
    2990:	70 95       	com	r23
    2992:	80 95       	com	r24
    2994:	90 95       	com	r25
    2996:	9b 01       	movw	r18, r22
    2998:	ac 01       	movw	r20, r24
    299a:	bd 01       	movw	r22, r26
    299c:	cf 01       	movw	r24, r30
    299e:	08 95       	ret

000029a0 <__umulhisi3>:
    29a0:	a2 9f       	mul	r26, r18
    29a2:	b0 01       	movw	r22, r0
    29a4:	b3 9f       	mul	r27, r19
    29a6:	c0 01       	movw	r24, r0
    29a8:	a3 9f       	mul	r26, r19
    29aa:	70 0d       	add	r23, r0
    29ac:	81 1d       	adc	r24, r1
    29ae:	11 24       	eor	r1, r1
    29b0:	91 1d       	adc	r25, r1
    29b2:	b2 9f       	mul	r27, r18
    29b4:	70 0d       	add	r23, r0
    29b6:	81 1d       	adc	r24, r1
    29b8:	11 24       	eor	r1, r1
    29ba:	91 1d       	adc	r25, r1
    29bc:	08 95       	ret

000029be <_exit>:
    29be:	f8 94       	cli

000029c0 <__stop_program>:
    29c0:	ff cf       	rjmp	.-2      	; 0x29c0 <__stop_program>
