
achen115_project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000048  00800100  00002ae6  00002b7a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002ae6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000321  00800148  00800148  00002bc2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002bc2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002bf4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001f0  00000000  00000000  00002c34  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c80  00000000  00000000  00002e24  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000aff  00000000  00000000  00004aa4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000174c  00000000  00000000  000055a3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000810  00000000  00000000  00006cf0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000085e  00000000  00000000  00007500  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000011b8  00000000  00000000  00007d5e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001e0  00000000  00000000  00008f16  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	43 c1       	rjmp	.+646    	; 0x288 <__ctors_end>
       2:	00 00       	nop
       4:	60 c1       	rjmp	.+704    	; 0x2c6 <__bad_interrupt>
       6:	00 00       	nop
       8:	5e c1       	rjmp	.+700    	; 0x2c6 <__bad_interrupt>
       a:	00 00       	nop
       c:	5c c1       	rjmp	.+696    	; 0x2c6 <__bad_interrupt>
       e:	00 00       	nop
      10:	5a c1       	rjmp	.+692    	; 0x2c6 <__bad_interrupt>
      12:	00 00       	nop
      14:	58 c1       	rjmp	.+688    	; 0x2c6 <__bad_interrupt>
      16:	00 00       	nop
      18:	56 c1       	rjmp	.+684    	; 0x2c6 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	54 c1       	rjmp	.+680    	; 0x2c6 <__bad_interrupt>
      1e:	00 00       	nop
      20:	52 c1       	rjmp	.+676    	; 0x2c6 <__bad_interrupt>
      22:	00 00       	nop
      24:	50 c1       	rjmp	.+672    	; 0x2c6 <__bad_interrupt>
      26:	00 00       	nop
      28:	4e c1       	rjmp	.+668    	; 0x2c6 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4c c1       	rjmp	.+664    	; 0x2c6 <__bad_interrupt>
      2e:	00 00       	nop
      30:	4a c1       	rjmp	.+660    	; 0x2c6 <__bad_interrupt>
      32:	00 00       	nop
      34:	44 c5       	rjmp	.+2696   	; 0xabe <__vector_13>
      36:	00 00       	nop
      38:	46 c1       	rjmp	.+652    	; 0x2c6 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	44 c1       	rjmp	.+648    	; 0x2c6 <__bad_interrupt>
      3e:	00 00       	nop
      40:	42 c1       	rjmp	.+644    	; 0x2c6 <__bad_interrupt>
      42:	00 00       	nop
      44:	40 c1       	rjmp	.+640    	; 0x2c6 <__bad_interrupt>
      46:	00 00       	nop
      48:	3e c1       	rjmp	.+636    	; 0x2c6 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3c c1       	rjmp	.+632    	; 0x2c6 <__bad_interrupt>
      4e:	00 00       	nop
      50:	3a c1       	rjmp	.+628    	; 0x2c6 <__bad_interrupt>
      52:	00 00       	nop
      54:	38 c1       	rjmp	.+624    	; 0x2c6 <__bad_interrupt>
      56:	00 00       	nop
      58:	36 c1       	rjmp	.+620    	; 0x2c6 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	34 c1       	rjmp	.+616    	; 0x2c6 <__bad_interrupt>
      5e:	00 00       	nop
      60:	32 c1       	rjmp	.+612    	; 0x2c6 <__bad_interrupt>
      62:	00 00       	nop
      64:	30 c1       	rjmp	.+608    	; 0x2c6 <__bad_interrupt>
      66:	00 00       	nop
      68:	2e c1       	rjmp	.+604    	; 0x2c6 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2c c1       	rjmp	.+600    	; 0x2c6 <__bad_interrupt>
      6e:	00 00       	nop
      70:	2a c1       	rjmp	.+596    	; 0x2c6 <__bad_interrupt>
      72:	00 00       	nop
      74:	28 c1       	rjmp	.+592    	; 0x2c6 <__bad_interrupt>
      76:	00 00       	nop
      78:	26 c1       	rjmp	.+588    	; 0x2c6 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	24 c1       	rjmp	.+584    	; 0x2c6 <__bad_interrupt>
      7e:	00 00       	nop
      80:	22 c1       	rjmp	.+580    	; 0x2c6 <__bad_interrupt>
      82:	00 00       	nop
      84:	20 c1       	rjmp	.+576    	; 0x2c6 <__bad_interrupt>
      86:	00 00       	nop
      88:	1e c1       	rjmp	.+572    	; 0x2c6 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	5e 0e       	add	r5, r30
      8e:	64 0e       	add	r6, r20
      90:	80 0e       	add	r8, r16
      92:	68 0e       	add	r6, r24
      94:	6e 0e       	add	r6, r30
      96:	80 0e       	add	r8, r16
      98:	77 0e       	add	r7, r23
      9a:	38 10       	cpse	r3, r8
      9c:	3e 10       	cpse	r3, r14
      9e:	44 10       	cpse	r4, r4
      a0:	4a 10       	cpse	r4, r10
      a2:	53 10       	cpse	r5, r3
      a4:	5b 10       	cpse	r5, r11
      a6:	61 10       	cpse	r6, r1

000000a8 <CHARSET>:
      a8:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
      b8:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
      c8:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
      d8:	1c 00 14 08 3e 08 14 08 08 3e 08 08 00 50 30 00     ....>....>...P0.
      e8:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
      f8:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
     108:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
     118:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
     128:	29 1e 00 36 36 00 00 00 56 36 00 00 08 14 22 41     )..66...V6...."A
     138:	00 14 14 14 14 14 00 41 22 14 08 02 01 51 09 06     .......A"....Q..
     148:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
     158:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
     168:	09 09 01 3e 41 49 49 7a 7f 08 08 08 7f 00 41 7f     ...>AIIz......A.
     178:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
     188:	40 7f 02 0c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
     198:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
     1a8:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
     1b8:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 07 08 70     @ .?@8@?c...c..p
     1c8:	08 07 61 51 49 45 43 00 7f 41 41 00 02 04 08 10     ..aQIEC..AA.....
     1d8:	20 00 41 41 7f 00 04 02 01 02 04 40 40 40 40 40      .AA.......@@@@@
     1e8:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
     1f8:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
     208:	09 01 02 0c 52 52 52 3e 7f 08 04 04 78 00 44 7d     ....RRR>....x.D}
     218:	40 00 20 40 44 3d 00 7f 10 28 44 00 00 41 7f 40     @. @D=...(D..A.@
     228:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
     238:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
     248:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
     258:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
     268:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
     278:	00 00 41 36 08 00 10 08 08 10 08 00 00 00 00 00     ..A6............

00000288 <__ctors_end>:
     288:	11 24       	eor	r1, r1
     28a:	1f be       	out	0x3f, r1	; 63
     28c:	cf ef       	ldi	r28, 0xFF	; 255
     28e:	d0 e4       	ldi	r29, 0x40	; 64
     290:	de bf       	out	0x3e, r29	; 62
     292:	cd bf       	out	0x3d, r28	; 61

00000294 <__do_copy_data>:
     294:	11 e0       	ldi	r17, 0x01	; 1
     296:	a0 e0       	ldi	r26, 0x00	; 0
     298:	b1 e0       	ldi	r27, 0x01	; 1
     29a:	e6 ee       	ldi	r30, 0xE6	; 230
     29c:	fa e2       	ldi	r31, 0x2A	; 42
     29e:	00 e0       	ldi	r16, 0x00	; 0
     2a0:	0b bf       	out	0x3b, r16	; 59
     2a2:	02 c0       	rjmp	.+4      	; 0x2a8 <__do_copy_data+0x14>
     2a4:	07 90       	elpm	r0, Z+
     2a6:	0d 92       	st	X+, r0
     2a8:	a8 34       	cpi	r26, 0x48	; 72
     2aa:	b1 07       	cpc	r27, r17
     2ac:	d9 f7       	brne	.-10     	; 0x2a4 <__do_copy_data+0x10>

000002ae <__do_clear_bss>:
     2ae:	24 e0       	ldi	r18, 0x04	; 4
     2b0:	a8 e4       	ldi	r26, 0x48	; 72
     2b2:	b1 e0       	ldi	r27, 0x01	; 1
     2b4:	01 c0       	rjmp	.+2      	; 0x2b8 <.do_clear_bss_start>

000002b6 <.do_clear_bss_loop>:
     2b6:	1d 92       	st	X+, r1

000002b8 <.do_clear_bss_start>:
     2b8:	a9 36       	cpi	r26, 0x69	; 105
     2ba:	b2 07       	cpc	r27, r18
     2bc:	e1 f7       	brne	.-8      	; 0x2b6 <.do_clear_bss_loop>
     2be:	0e 94 4c 13 	call	0x2698	; 0x2698 <main>
     2c2:	0c 94 71 15 	jmp	0x2ae2	; 0x2ae2 <_exit>

000002c6 <__bad_interrupt>:
     2c6:	9c ce       	rjmp	.-712    	; 0x0 <__vectors>

000002c8 <write>:
		Point p = getTile(t, i);
		if(inBoundsPoint(g, &p)) {
			g->tiles[p.x][p.y] = 0;
		}
	}
}
     2c8:	1f 93       	push	r17
     2ca:	cf 93       	push	r28
     2cc:	df 93       	push	r29
     2ce:	00 d0       	rcall	.+0      	; 0x2d0 <write+0x8>
     2d0:	cd b7       	in	r28, 0x3d	; 61
     2d2:	de b7       	in	r29, 0x3e	; 62
     2d4:	89 83       	std	Y+1, r24	; 0x01
     2d6:	6a 83       	std	Y+2, r22	; 0x02
     2d8:	82 e2       	ldi	r24, 0x22	; 34
     2da:	90 e0       	ldi	r25, 0x00	; 0
     2dc:	22 e2       	ldi	r18, 0x22	; 34
     2de:	30 e0       	ldi	r19, 0x00	; 0
     2e0:	f9 01       	movw	r30, r18
     2e2:	20 81       	ld	r18, Z
     2e4:	2d 7f       	andi	r18, 0xFD	; 253
     2e6:	fc 01       	movw	r30, r24
     2e8:	20 83       	st	Z, r18
     2ea:	8a 81       	ldd	r24, Y+2	; 0x02
     2ec:	88 23       	and	r24, r24
     2ee:	51 f0       	breq	.+20     	; 0x304 <write+0x3c>
     2f0:	82 e2       	ldi	r24, 0x22	; 34
     2f2:	90 e0       	ldi	r25, 0x00	; 0
     2f4:	22 e2       	ldi	r18, 0x22	; 34
     2f6:	30 e0       	ldi	r19, 0x00	; 0
     2f8:	f9 01       	movw	r30, r18
     2fa:	20 81       	ld	r18, Z
     2fc:	28 60       	ori	r18, 0x08	; 8
     2fe:	fc 01       	movw	r30, r24
     300:	20 83       	st	Z, r18
     302:	09 c0       	rjmp	.+18     	; 0x316 <write+0x4e>
     304:	82 e2       	ldi	r24, 0x22	; 34
     306:	90 e0       	ldi	r25, 0x00	; 0
     308:	22 e2       	ldi	r18, 0x22	; 34
     30a:	30 e0       	ldi	r19, 0x00	; 0
     30c:	f9 01       	movw	r30, r18
     30e:	20 81       	ld	r18, Z
     310:	27 7f       	andi	r18, 0xF7	; 247
     312:	fc 01       	movw	r30, r24
     314:	20 83       	st	Z, r18
     316:	10 e0       	ldi	r17, 0x00	; 0
     318:	3c c0       	rjmp	.+120    	; 0x392 <write+0xca>
     31a:	89 81       	ldd	r24, Y+1	; 0x01
     31c:	88 2f       	mov	r24, r24
     31e:	90 e0       	ldi	r25, 0x00	; 0
     320:	21 2f       	mov	r18, r17
     322:	30 e0       	ldi	r19, 0x00	; 0
     324:	47 e0       	ldi	r20, 0x07	; 7
     326:	50 e0       	ldi	r21, 0x00	; 0
     328:	ba 01       	movw	r22, r20
     32a:	62 1b       	sub	r22, r18
     32c:	73 0b       	sbc	r23, r19
     32e:	9b 01       	movw	r18, r22
     330:	02 c0       	rjmp	.+4      	; 0x336 <write+0x6e>
     332:	95 95       	asr	r25
     334:	87 95       	ror	r24
     336:	2a 95       	dec	r18
     338:	e2 f7       	brpl	.-8      	; 0x332 <write+0x6a>
     33a:	81 70       	andi	r24, 0x01	; 1
     33c:	99 27       	eor	r25, r25
     33e:	89 2b       	or	r24, r25
     340:	51 f0       	breq	.+20     	; 0x356 <write+0x8e>
     342:	82 e2       	ldi	r24, 0x22	; 34
     344:	90 e0       	ldi	r25, 0x00	; 0
     346:	22 e2       	ldi	r18, 0x22	; 34
     348:	30 e0       	ldi	r19, 0x00	; 0
     34a:	f9 01       	movw	r30, r18
     34c:	20 81       	ld	r18, Z
     34e:	20 61       	ori	r18, 0x10	; 16
     350:	fc 01       	movw	r30, r24
     352:	20 83       	st	Z, r18
     354:	09 c0       	rjmp	.+18     	; 0x368 <write+0xa0>
     356:	82 e2       	ldi	r24, 0x22	; 34
     358:	90 e0       	ldi	r25, 0x00	; 0
     35a:	22 e2       	ldi	r18, 0x22	; 34
     35c:	30 e0       	ldi	r19, 0x00	; 0
     35e:	f9 01       	movw	r30, r18
     360:	20 81       	ld	r18, Z
     362:	2f 7e       	andi	r18, 0xEF	; 239
     364:	fc 01       	movw	r30, r24
     366:	20 83       	st	Z, r18
     368:	82 e2       	ldi	r24, 0x22	; 34
     36a:	90 e0       	ldi	r25, 0x00	; 0
     36c:	22 e2       	ldi	r18, 0x22	; 34
     36e:	30 e0       	ldi	r19, 0x00	; 0
     370:	f9 01       	movw	r30, r18
     372:	20 81       	ld	r18, Z
     374:	20 62       	ori	r18, 0x20	; 32
     376:	fc 01       	movw	r30, r24
     378:	20 83       	st	Z, r18
     37a:	82 e2       	ldi	r24, 0x22	; 34
     37c:	90 e0       	ldi	r25, 0x00	; 0
     37e:	22 e2       	ldi	r18, 0x22	; 34
     380:	30 e0       	ldi	r19, 0x00	; 0
     382:	f9 01       	movw	r30, r18
     384:	20 81       	ld	r18, Z
     386:	2f 7d       	andi	r18, 0xDF	; 223
     388:	fc 01       	movw	r30, r24
     38a:	20 83       	st	Z, r18
     38c:	81 2f       	mov	r24, r17
     38e:	11 e0       	ldi	r17, 0x01	; 1
     390:	18 0f       	add	r17, r24
     392:	18 30       	cpi	r17, 0x08	; 8
     394:	10 f2       	brcs	.-124    	; 0x31a <write+0x52>
     396:	82 e2       	ldi	r24, 0x22	; 34
     398:	90 e0       	ldi	r25, 0x00	; 0
     39a:	22 e2       	ldi	r18, 0x22	; 34
     39c:	30 e0       	ldi	r19, 0x00	; 0
     39e:	f9 01       	movw	r30, r18
     3a0:	20 81       	ld	r18, Z
     3a2:	22 60       	ori	r18, 0x02	; 2
     3a4:	fc 01       	movw	r30, r24
     3a6:	20 83       	st	Z, r18
     3a8:	00 00       	nop
     3aa:	0f 90       	pop	r0
     3ac:	0f 90       	pop	r0
     3ae:	df 91       	pop	r29
     3b0:	cf 91       	pop	r28
     3b2:	1f 91       	pop	r17
     3b4:	08 95       	ret

000003b6 <write_cmd>:
     3b6:	cf 93       	push	r28
     3b8:	df 93       	push	r29
     3ba:	1f 92       	push	r1
     3bc:	cd b7       	in	r28, 0x3d	; 61
     3be:	de b7       	in	r29, 0x3e	; 62
     3c0:	89 83       	std	Y+1, r24	; 0x01
     3c2:	60 e0       	ldi	r22, 0x00	; 0
     3c4:	89 81       	ldd	r24, Y+1	; 0x01
     3c6:	80 df       	rcall	.-256    	; 0x2c8 <write>
     3c8:	00 00       	nop
     3ca:	0f 90       	pop	r0
     3cc:	df 91       	pop	r29
     3ce:	cf 91       	pop	r28
     3d0:	08 95       	ret

000003d2 <write_data>:
     3d2:	cf 93       	push	r28
     3d4:	df 93       	push	r29
     3d6:	1f 92       	push	r1
     3d8:	cd b7       	in	r28, 0x3d	; 61
     3da:	de b7       	in	r29, 0x3e	; 62
     3dc:	89 83       	std	Y+1, r24	; 0x01
     3de:	61 e0       	ldi	r22, 0x01	; 1
     3e0:	89 81       	ldd	r24, Y+1	; 0x01
     3e2:	72 df       	rcall	.-284    	; 0x2c8 <write>
     3e4:	00 00       	nop
     3e6:	0f 90       	pop	r0
     3e8:	df 91       	pop	r29
     3ea:	cf 91       	pop	r28
     3ec:	08 95       	ret

000003ee <nokia_lcd_init>:
     3ee:	0f 93       	push	r16
     3f0:	1f 93       	push	r17
     3f2:	cf 93       	push	r28
     3f4:	df 93       	push	r29
     3f6:	cd b7       	in	r28, 0x3d	; 61
     3f8:	de b7       	in	r29, 0x3e	; 62
     3fa:	6c 97       	sbiw	r28, 0x1c	; 28
     3fc:	0f b6       	in	r0, 0x3f	; 63
     3fe:	f8 94       	cli
     400:	de bf       	out	0x3e, r29	; 62
     402:	0f be       	out	0x3f, r0	; 63
     404:	cd bf       	out	0x3d, r28	; 61
     406:	81 e2       	ldi	r24, 0x21	; 33
     408:	90 e0       	ldi	r25, 0x00	; 0
     40a:	21 e2       	ldi	r18, 0x21	; 33
     40c:	30 e0       	ldi	r19, 0x00	; 0
     40e:	f9 01       	movw	r30, r18
     410:	20 81       	ld	r18, Z
     412:	22 60       	ori	r18, 0x02	; 2
     414:	fc 01       	movw	r30, r24
     416:	20 83       	st	Z, r18
     418:	81 e2       	ldi	r24, 0x21	; 33
     41a:	90 e0       	ldi	r25, 0x00	; 0
     41c:	21 e2       	ldi	r18, 0x21	; 33
     41e:	30 e0       	ldi	r19, 0x00	; 0
     420:	f9 01       	movw	r30, r18
     422:	20 81       	ld	r18, Z
     424:	24 60       	ori	r18, 0x04	; 4
     426:	fc 01       	movw	r30, r24
     428:	20 83       	st	Z, r18
     42a:	81 e2       	ldi	r24, 0x21	; 33
     42c:	90 e0       	ldi	r25, 0x00	; 0
     42e:	21 e2       	ldi	r18, 0x21	; 33
     430:	30 e0       	ldi	r19, 0x00	; 0
     432:	f9 01       	movw	r30, r18
     434:	20 81       	ld	r18, Z
     436:	28 60       	ori	r18, 0x08	; 8
     438:	fc 01       	movw	r30, r24
     43a:	20 83       	st	Z, r18
     43c:	81 e2       	ldi	r24, 0x21	; 33
     43e:	90 e0       	ldi	r25, 0x00	; 0
     440:	21 e2       	ldi	r18, 0x21	; 33
     442:	30 e0       	ldi	r19, 0x00	; 0
     444:	f9 01       	movw	r30, r18
     446:	20 81       	ld	r18, Z
     448:	20 61       	ori	r18, 0x10	; 16
     44a:	fc 01       	movw	r30, r24
     44c:	20 83       	st	Z, r18
     44e:	81 e2       	ldi	r24, 0x21	; 33
     450:	90 e0       	ldi	r25, 0x00	; 0
     452:	21 e2       	ldi	r18, 0x21	; 33
     454:	30 e0       	ldi	r19, 0x00	; 0
     456:	f9 01       	movw	r30, r18
     458:	20 81       	ld	r18, Z
     45a:	20 62       	ori	r18, 0x20	; 32
     45c:	fc 01       	movw	r30, r24
     45e:	20 83       	st	Z, r18
     460:	82 e2       	ldi	r24, 0x22	; 34
     462:	90 e0       	ldi	r25, 0x00	; 0
     464:	22 e2       	ldi	r18, 0x22	; 34
     466:	30 e0       	ldi	r19, 0x00	; 0
     468:	f9 01       	movw	r30, r18
     46a:	20 81       	ld	r18, Z
     46c:	24 60       	ori	r18, 0x04	; 4
     46e:	fc 01       	movw	r30, r24
     470:	20 83       	st	Z, r18
     472:	82 e2       	ldi	r24, 0x22	; 34
     474:	90 e0       	ldi	r25, 0x00	; 0
     476:	22 e2       	ldi	r18, 0x22	; 34
     478:	30 e0       	ldi	r19, 0x00	; 0
     47a:	f9 01       	movw	r30, r18
     47c:	20 81       	ld	r18, Z
     47e:	22 60       	ori	r18, 0x02	; 2
     480:	fc 01       	movw	r30, r24
     482:	20 83       	st	Z, r18
     484:	80 e0       	ldi	r24, 0x00	; 0
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	a0 e2       	ldi	r26, 0x20	; 32
     48a:	b1 e4       	ldi	r27, 0x41	; 65
     48c:	89 83       	std	Y+1, r24	; 0x01
     48e:	9a 83       	std	Y+2, r25	; 0x02
     490:	ab 83       	std	Y+3, r26	; 0x03
     492:	bc 83       	std	Y+4, r27	; 0x04
     494:	20 e0       	ldi	r18, 0x00	; 0
     496:	30 e0       	ldi	r19, 0x00	; 0
     498:	4a e7       	ldi	r20, 0x7A	; 122
     49a:	53 e4       	ldi	r21, 0x43	; 67
     49c:	69 81       	ldd	r22, Y+1	; 0x01
     49e:	7a 81       	ldd	r23, Y+2	; 0x02
     4a0:	8b 81       	ldd	r24, Y+3	; 0x03
     4a2:	9c 81       	ldd	r25, Y+4	; 0x04
     4a4:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <__mulsf3>
     4a8:	dc 01       	movw	r26, r24
     4aa:	cb 01       	movw	r24, r22
     4ac:	8b 8b       	std	Y+19, r24	; 0x13
     4ae:	9c 8b       	std	Y+20, r25	; 0x14
     4b0:	ad 8b       	std	Y+21, r26	; 0x15
     4b2:	be 8b       	std	Y+22, r27	; 0x16
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	30 e0       	ldi	r19, 0x00	; 0
     4b8:	40 e8       	ldi	r20, 0x80	; 128
     4ba:	5f e3       	ldi	r21, 0x3F	; 63
     4bc:	6b 89       	ldd	r22, Y+19	; 0x13
     4be:	7c 89       	ldd	r23, Y+20	; 0x14
     4c0:	8d 89       	ldd	r24, Y+21	; 0x15
     4c2:	9e 89       	ldd	r25, Y+22	; 0x16
     4c4:	0e 94 77 13 	call	0x26ee	; 0x26ee <__cmpsf2>
     4c8:	88 23       	and	r24, r24
     4ca:	2c f4       	brge	.+10     	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
     4cc:	81 e0       	ldi	r24, 0x01	; 1
     4ce:	90 e0       	ldi	r25, 0x00	; 0
     4d0:	98 8f       	std	Y+24, r25	; 0x18
     4d2:	8f 8b       	std	Y+23, r24	; 0x17
     4d4:	3f c0       	rjmp	.+126    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
     4d6:	20 e0       	ldi	r18, 0x00	; 0
     4d8:	3f ef       	ldi	r19, 0xFF	; 255
     4da:	4f e7       	ldi	r20, 0x7F	; 127
     4dc:	57 e4       	ldi	r21, 0x47	; 71
     4de:	6b 89       	ldd	r22, Y+19	; 0x13
     4e0:	7c 89       	ldd	r23, Y+20	; 0x14
     4e2:	8d 89       	ldd	r24, Y+21	; 0x15
     4e4:	9e 89       	ldd	r25, Y+22	; 0x16
     4e6:	0e 94 f4 13 	call	0x27e8	; 0x27e8 <__gesf2>
     4ea:	18 16       	cp	r1, r24
     4ec:	4c f5       	brge	.+82     	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
     4ee:	20 e0       	ldi	r18, 0x00	; 0
     4f0:	30 e0       	ldi	r19, 0x00	; 0
     4f2:	40 e2       	ldi	r20, 0x20	; 32
     4f4:	51 e4       	ldi	r21, 0x41	; 65
     4f6:	69 81       	ldd	r22, Y+1	; 0x01
     4f8:	7a 81       	ldd	r23, Y+2	; 0x02
     4fa:	8b 81       	ldd	r24, Y+3	; 0x03
     4fc:	9c 81       	ldd	r25, Y+4	; 0x04
     4fe:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <__mulsf3>
     502:	dc 01       	movw	r26, r24
     504:	cb 01       	movw	r24, r22
     506:	bc 01       	movw	r22, r24
     508:	cd 01       	movw	r24, r26
     50a:	0e 94 7b 13 	call	0x26f6	; 0x26f6 <__fixunssfsi>
     50e:	dc 01       	movw	r26, r24
     510:	cb 01       	movw	r24, r22
     512:	98 8f       	std	Y+24, r25	; 0x18
     514:	8f 8b       	std	Y+23, r24	; 0x17
     516:	0f c0       	rjmp	.+30     	; 0x536 <__LOCK_REGION_LENGTH__+0x136>
     518:	89 e1       	ldi	r24, 0x19	; 25
     51a:	90 e0       	ldi	r25, 0x00	; 0
     51c:	9a 8f       	std	Y+26, r25	; 0x1a
     51e:	89 8f       	std	Y+25, r24	; 0x19
     520:	89 8d       	ldd	r24, Y+25	; 0x19
     522:	9a 8d       	ldd	r25, Y+26	; 0x1a
     524:	01 97       	sbiw	r24, 0x01	; 1
     526:	f1 f7       	brne	.-4      	; 0x524 <__LOCK_REGION_LENGTH__+0x124>
     528:	9a 8f       	std	Y+26, r25	; 0x1a
     52a:	89 8f       	std	Y+25, r24	; 0x19
     52c:	8f 89       	ldd	r24, Y+23	; 0x17
     52e:	98 8d       	ldd	r25, Y+24	; 0x18
     530:	01 97       	sbiw	r24, 0x01	; 1
     532:	98 8f       	std	Y+24, r25	; 0x18
     534:	8f 8b       	std	Y+23, r24	; 0x17
     536:	8f 89       	ldd	r24, Y+23	; 0x17
     538:	98 8d       	ldd	r25, Y+24	; 0x18
     53a:	89 2b       	or	r24, r25
     53c:	69 f7       	brne	.-38     	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
     53e:	14 c0       	rjmp	.+40     	; 0x568 <__LOCK_REGION_LENGTH__+0x168>
     540:	6b 89       	ldd	r22, Y+19	; 0x13
     542:	7c 89       	ldd	r23, Y+20	; 0x14
     544:	8d 89       	ldd	r24, Y+21	; 0x15
     546:	9e 89       	ldd	r25, Y+22	; 0x16
     548:	0e 94 7b 13 	call	0x26f6	; 0x26f6 <__fixunssfsi>
     54c:	dc 01       	movw	r26, r24
     54e:	cb 01       	movw	r24, r22
     550:	98 8f       	std	Y+24, r25	; 0x18
     552:	8f 8b       	std	Y+23, r24	; 0x17
     554:	8f 89       	ldd	r24, Y+23	; 0x17
     556:	98 8d       	ldd	r25, Y+24	; 0x18
     558:	9c 8f       	std	Y+28, r25	; 0x1c
     55a:	8b 8f       	std	Y+27, r24	; 0x1b
     55c:	8b 8d       	ldd	r24, Y+27	; 0x1b
     55e:	9c 8d       	ldd	r25, Y+28	; 0x1c
     560:	01 97       	sbiw	r24, 0x01	; 1
     562:	f1 f7       	brne	.-4      	; 0x560 <__LOCK_REGION_LENGTH__+0x160>
     564:	9c 8f       	std	Y+28, r25	; 0x1c
     566:	8b 8f       	std	Y+27, r24	; 0x1b
     568:	82 e2       	ldi	r24, 0x22	; 34
     56a:	90 e0       	ldi	r25, 0x00	; 0
     56c:	22 e2       	ldi	r18, 0x22	; 34
     56e:	30 e0       	ldi	r19, 0x00	; 0
     570:	f9 01       	movw	r30, r18
     572:	20 81       	ld	r18, Z
     574:	2b 7f       	andi	r18, 0xFB	; 251
     576:	fc 01       	movw	r30, r24
     578:	20 83       	st	Z, r18
     57a:	80 e0       	ldi	r24, 0x00	; 0
     57c:	90 e0       	ldi	r25, 0x00	; 0
     57e:	ac e8       	ldi	r26, 0x8C	; 140
     580:	b2 e4       	ldi	r27, 0x42	; 66
     582:	8d 83       	std	Y+5, r24	; 0x05
     584:	9e 83       	std	Y+6, r25	; 0x06
     586:	af 83       	std	Y+7, r26	; 0x07
     588:	b8 87       	std	Y+8, r27	; 0x08
     58a:	20 e0       	ldi	r18, 0x00	; 0
     58c:	30 e0       	ldi	r19, 0x00	; 0
     58e:	4a e7       	ldi	r20, 0x7A	; 122
     590:	53 e4       	ldi	r21, 0x43	; 67
     592:	6d 81       	ldd	r22, Y+5	; 0x05
     594:	7e 81       	ldd	r23, Y+6	; 0x06
     596:	8f 81       	ldd	r24, Y+7	; 0x07
     598:	98 85       	ldd	r25, Y+8	; 0x08
     59a:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <__mulsf3>
     59e:	dc 01       	movw	r26, r24
     5a0:	cb 01       	movw	r24, r22
     5a2:	89 87       	std	Y+9, r24	; 0x09
     5a4:	9a 87       	std	Y+10, r25	; 0x0a
     5a6:	ab 87       	std	Y+11, r26	; 0x0b
     5a8:	bc 87       	std	Y+12, r27	; 0x0c
     5aa:	20 e0       	ldi	r18, 0x00	; 0
     5ac:	30 e0       	ldi	r19, 0x00	; 0
     5ae:	40 e8       	ldi	r20, 0x80	; 128
     5b0:	5f e3       	ldi	r21, 0x3F	; 63
     5b2:	69 85       	ldd	r22, Y+9	; 0x09
     5b4:	7a 85       	ldd	r23, Y+10	; 0x0a
     5b6:	8b 85       	ldd	r24, Y+11	; 0x0b
     5b8:	9c 85       	ldd	r25, Y+12	; 0x0c
     5ba:	0e 94 77 13 	call	0x26ee	; 0x26ee <__cmpsf2>
     5be:	88 23       	and	r24, r24
     5c0:	2c f4       	brge	.+10     	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
     5c2:	81 e0       	ldi	r24, 0x01	; 1
     5c4:	90 e0       	ldi	r25, 0x00	; 0
     5c6:	9e 87       	std	Y+14, r25	; 0x0e
     5c8:	8d 87       	std	Y+13, r24	; 0x0d
     5ca:	3f c0       	rjmp	.+126    	; 0x64a <__LOCK_REGION_LENGTH__+0x24a>
     5cc:	20 e0       	ldi	r18, 0x00	; 0
     5ce:	3f ef       	ldi	r19, 0xFF	; 255
     5d0:	4f e7       	ldi	r20, 0x7F	; 127
     5d2:	57 e4       	ldi	r21, 0x47	; 71
     5d4:	69 85       	ldd	r22, Y+9	; 0x09
     5d6:	7a 85       	ldd	r23, Y+10	; 0x0a
     5d8:	8b 85       	ldd	r24, Y+11	; 0x0b
     5da:	9c 85       	ldd	r25, Y+12	; 0x0c
     5dc:	0e 94 f4 13 	call	0x27e8	; 0x27e8 <__gesf2>
     5e0:	18 16       	cp	r1, r24
     5e2:	4c f5       	brge	.+82     	; 0x636 <__LOCK_REGION_LENGTH__+0x236>
     5e4:	20 e0       	ldi	r18, 0x00	; 0
     5e6:	30 e0       	ldi	r19, 0x00	; 0
     5e8:	40 e2       	ldi	r20, 0x20	; 32
     5ea:	51 e4       	ldi	r21, 0x41	; 65
     5ec:	6d 81       	ldd	r22, Y+5	; 0x05
     5ee:	7e 81       	ldd	r23, Y+6	; 0x06
     5f0:	8f 81       	ldd	r24, Y+7	; 0x07
     5f2:	98 85       	ldd	r25, Y+8	; 0x08
     5f4:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <__mulsf3>
     5f8:	dc 01       	movw	r26, r24
     5fa:	cb 01       	movw	r24, r22
     5fc:	bc 01       	movw	r22, r24
     5fe:	cd 01       	movw	r24, r26
     600:	0e 94 7b 13 	call	0x26f6	; 0x26f6 <__fixunssfsi>
     604:	dc 01       	movw	r26, r24
     606:	cb 01       	movw	r24, r22
     608:	9e 87       	std	Y+14, r25	; 0x0e
     60a:	8d 87       	std	Y+13, r24	; 0x0d
     60c:	0f c0       	rjmp	.+30     	; 0x62c <__LOCK_REGION_LENGTH__+0x22c>
     60e:	89 e1       	ldi	r24, 0x19	; 25
     610:	90 e0       	ldi	r25, 0x00	; 0
     612:	98 8b       	std	Y+16, r25	; 0x10
     614:	8f 87       	std	Y+15, r24	; 0x0f
     616:	8f 85       	ldd	r24, Y+15	; 0x0f
     618:	98 89       	ldd	r25, Y+16	; 0x10
     61a:	01 97       	sbiw	r24, 0x01	; 1
     61c:	f1 f7       	brne	.-4      	; 0x61a <__LOCK_REGION_LENGTH__+0x21a>
     61e:	98 8b       	std	Y+16, r25	; 0x10
     620:	8f 87       	std	Y+15, r24	; 0x0f
     622:	8d 85       	ldd	r24, Y+13	; 0x0d
     624:	9e 85       	ldd	r25, Y+14	; 0x0e
     626:	01 97       	sbiw	r24, 0x01	; 1
     628:	9e 87       	std	Y+14, r25	; 0x0e
     62a:	8d 87       	std	Y+13, r24	; 0x0d
     62c:	8d 85       	ldd	r24, Y+13	; 0x0d
     62e:	9e 85       	ldd	r25, Y+14	; 0x0e
     630:	89 2b       	or	r24, r25
     632:	69 f7       	brne	.-38     	; 0x60e <__LOCK_REGION_LENGTH__+0x20e>
     634:	14 c0       	rjmp	.+40     	; 0x65e <__LOCK_REGION_LENGTH__+0x25e>
     636:	69 85       	ldd	r22, Y+9	; 0x09
     638:	7a 85       	ldd	r23, Y+10	; 0x0a
     63a:	8b 85       	ldd	r24, Y+11	; 0x0b
     63c:	9c 85       	ldd	r25, Y+12	; 0x0c
     63e:	0e 94 7b 13 	call	0x26f6	; 0x26f6 <__fixunssfsi>
     642:	dc 01       	movw	r26, r24
     644:	cb 01       	movw	r24, r22
     646:	9e 87       	std	Y+14, r25	; 0x0e
     648:	8d 87       	std	Y+13, r24	; 0x0d
     64a:	8d 85       	ldd	r24, Y+13	; 0x0d
     64c:	9e 85       	ldd	r25, Y+14	; 0x0e
     64e:	9a 8b       	std	Y+18, r25	; 0x12
     650:	89 8b       	std	Y+17, r24	; 0x11
     652:	89 89       	ldd	r24, Y+17	; 0x11
     654:	9a 89       	ldd	r25, Y+18	; 0x12
     656:	01 97       	sbiw	r24, 0x01	; 1
     658:	f1 f7       	brne	.-4      	; 0x656 <__LOCK_REGION_LENGTH__+0x256>
     65a:	9a 8b       	std	Y+18, r25	; 0x12
     65c:	89 8b       	std	Y+17, r24	; 0x11
     65e:	82 e2       	ldi	r24, 0x22	; 34
     660:	90 e0       	ldi	r25, 0x00	; 0
     662:	22 e2       	ldi	r18, 0x22	; 34
     664:	30 e0       	ldi	r19, 0x00	; 0
     666:	f9 01       	movw	r30, r18
     668:	20 81       	ld	r18, Z
     66a:	24 60       	ori	r18, 0x04	; 4
     66c:	fc 01       	movw	r30, r24
     66e:	20 83       	st	Z, r18
     670:	82 e2       	ldi	r24, 0x22	; 34
     672:	90 e0       	ldi	r25, 0x00	; 0
     674:	22 e2       	ldi	r18, 0x22	; 34
     676:	30 e0       	ldi	r19, 0x00	; 0
     678:	f9 01       	movw	r30, r18
     67a:	20 81       	ld	r18, Z
     67c:	2d 7f       	andi	r18, 0xFD	; 253
     67e:	fc 01       	movw	r30, r24
     680:	20 83       	st	Z, r18
     682:	81 e2       	ldi	r24, 0x21	; 33
     684:	98 de       	rcall	.-720    	; 0x3b6 <write_cmd>
     686:	83 e1       	ldi	r24, 0x13	; 19
     688:	96 de       	rcall	.-724    	; 0x3b6 <write_cmd>
     68a:	86 e0       	ldi	r24, 0x06	; 6
     68c:	94 de       	rcall	.-728    	; 0x3b6 <write_cmd>
     68e:	82 ec       	ldi	r24, 0xC2	; 194
     690:	92 de       	rcall	.-732    	; 0x3b6 <write_cmd>
     692:	80 e2       	ldi	r24, 0x20	; 32
     694:	90 de       	rcall	.-736    	; 0x3b6 <write_cmd>
     696:	89 e0       	ldi	r24, 0x09	; 9
     698:	8e de       	rcall	.-740    	; 0x3b6 <write_cmd>
     69a:	80 e8       	ldi	r24, 0x80	; 128
     69c:	8c de       	rcall	.-744    	; 0x3b6 <write_cmd>
     69e:	80 e4       	ldi	r24, 0x40	; 64
     6a0:	8a de       	rcall	.-748    	; 0x3b6 <write_cmd>
     6a2:	00 e0       	ldi	r16, 0x00	; 0
     6a4:	10 e0       	ldi	r17, 0x00	; 0
     6a6:	04 c0       	rjmp	.+8      	; 0x6b0 <__LOCK_REGION_LENGTH__+0x2b0>
     6a8:	80 e0       	ldi	r24, 0x00	; 0
     6aa:	93 de       	rcall	.-730    	; 0x3d2 <write_data>
     6ac:	0f 5f       	subi	r16, 0xFF	; 255
     6ae:	1f 4f       	sbci	r17, 0xFF	; 255
     6b0:	08 3f       	cpi	r16, 0xF8	; 248
     6b2:	f1 e0       	ldi	r31, 0x01	; 1
     6b4:	1f 07       	cpc	r17, r31
     6b6:	c0 f3       	brcs	.-16     	; 0x6a8 <__LOCK_REGION_LENGTH__+0x2a8>
     6b8:	88 e0       	ldi	r24, 0x08	; 8
     6ba:	7d de       	rcall	.-774    	; 0x3b6 <write_cmd>
     6bc:	8c e0       	ldi	r24, 0x0C	; 12
     6be:	7b de       	rcall	.-778    	; 0x3b6 <write_cmd>
     6c0:	00 00       	nop
     6c2:	6c 96       	adiw	r28, 0x1c	; 28
     6c4:	0f b6       	in	r0, 0x3f	; 63
     6c6:	f8 94       	cli
     6c8:	de bf       	out	0x3e, r29	; 62
     6ca:	0f be       	out	0x3f, r0	; 63
     6cc:	cd bf       	out	0x3d, r28	; 61
     6ce:	df 91       	pop	r29
     6d0:	cf 91       	pop	r28
     6d2:	1f 91       	pop	r17
     6d4:	0f 91       	pop	r16
     6d6:	08 95       	ret

000006d8 <nokia_lcd_clear>:
     6d8:	0f 93       	push	r16
     6da:	1f 93       	push	r17
     6dc:	cf 93       	push	r28
     6de:	df 93       	push	r29
     6e0:	cd b7       	in	r28, 0x3d	; 61
     6e2:	de b7       	in	r29, 0x3e	; 62
     6e4:	80 e8       	ldi	r24, 0x80	; 128
     6e6:	67 de       	rcall	.-818    	; 0x3b6 <write_cmd>
     6e8:	80 e4       	ldi	r24, 0x40	; 64
     6ea:	65 de       	rcall	.-822    	; 0x3b6 <write_cmd>
     6ec:	10 92 40 03 	sts	0x0340, r1	; 0x800340 <__data_end+0x1f8>
     6f0:	10 92 41 03 	sts	0x0341, r1	; 0x800341 <__data_end+0x1f9>
     6f4:	00 e0       	ldi	r16, 0x00	; 0
     6f6:	10 e0       	ldi	r17, 0x00	; 0
     6f8:	07 c0       	rjmp	.+14     	; 0x708 <nokia_lcd_clear+0x30>
     6fa:	c8 01       	movw	r24, r16
     6fc:	88 5b       	subi	r24, 0xB8	; 184
     6fe:	9e 4f       	sbci	r25, 0xFE	; 254
     700:	fc 01       	movw	r30, r24
     702:	10 82       	st	Z, r1
     704:	0f 5f       	subi	r16, 0xFF	; 255
     706:	1f 4f       	sbci	r17, 0xFF	; 255
     708:	08 3f       	cpi	r16, 0xF8	; 248
     70a:	f1 e0       	ldi	r31, 0x01	; 1
     70c:	1f 07       	cpc	r17, r31
     70e:	a8 f3       	brcs	.-22     	; 0x6fa <nokia_lcd_clear+0x22>
     710:	00 00       	nop
     712:	df 91       	pop	r29
     714:	cf 91       	pop	r28
     716:	1f 91       	pop	r17
     718:	0f 91       	pop	r16
     71a:	08 95       	ret

0000071c <nokia_lcd_set_pixel>:
     71c:	cf 93       	push	r28
     71e:	df 93       	push	r29
     720:	00 d0       	rcall	.+0      	; 0x722 <nokia_lcd_set_pixel+0x6>
     722:	00 d0       	rcall	.+0      	; 0x724 <nokia_lcd_set_pixel+0x8>
     724:	1f 92       	push	r1
     726:	cd b7       	in	r28, 0x3d	; 61
     728:	de b7       	in	r29, 0x3e	; 62
     72a:	8b 83       	std	Y+3, r24	; 0x03
     72c:	6c 83       	std	Y+4, r22	; 0x04
     72e:	4d 83       	std	Y+5, r20	; 0x05
     730:	8c 81       	ldd	r24, Y+4	; 0x04
     732:	86 95       	lsr	r24
     734:	86 95       	lsr	r24
     736:	86 95       	lsr	r24
     738:	88 2f       	mov	r24, r24
     73a:	90 e0       	ldi	r25, 0x00	; 0
     73c:	44 e5       	ldi	r20, 0x54	; 84
     73e:	48 9f       	mul	r20, r24
     740:	90 01       	movw	r18, r0
     742:	49 9f       	mul	r20, r25
     744:	30 0d       	add	r19, r0
     746:	11 24       	eor	r1, r1
     748:	8b 81       	ldd	r24, Y+3	; 0x03
     74a:	88 2f       	mov	r24, r24
     74c:	90 e0       	ldi	r25, 0x00	; 0
     74e:	82 0f       	add	r24, r18
     750:	93 1f       	adc	r25, r19
     752:	88 5b       	subi	r24, 0xB8	; 184
     754:	9e 4f       	sbci	r25, 0xFE	; 254
     756:	9a 83       	std	Y+2, r25	; 0x02
     758:	89 83       	std	Y+1, r24	; 0x01
     75a:	8d 81       	ldd	r24, Y+5	; 0x05
     75c:	88 23       	and	r24, r24
     75e:	c9 f0       	breq	.+50     	; 0x792 <nokia_lcd_set_pixel+0x76>
     760:	89 81       	ldd	r24, Y+1	; 0x01
     762:	9a 81       	ldd	r25, Y+2	; 0x02
     764:	fc 01       	movw	r30, r24
     766:	80 81       	ld	r24, Z
     768:	48 2f       	mov	r20, r24
     76a:	8c 81       	ldd	r24, Y+4	; 0x04
     76c:	88 2f       	mov	r24, r24
     76e:	90 e0       	ldi	r25, 0x00	; 0
     770:	9c 01       	movw	r18, r24
     772:	27 70       	andi	r18, 0x07	; 7
     774:	33 27       	eor	r19, r19
     776:	81 e0       	ldi	r24, 0x01	; 1
     778:	90 e0       	ldi	r25, 0x00	; 0
     77a:	02 c0       	rjmp	.+4      	; 0x780 <nokia_lcd_set_pixel+0x64>
     77c:	88 0f       	add	r24, r24
     77e:	99 1f       	adc	r25, r25
     780:	2a 95       	dec	r18
     782:	e2 f7       	brpl	.-8      	; 0x77c <nokia_lcd_set_pixel+0x60>
     784:	84 2b       	or	r24, r20
     786:	28 2f       	mov	r18, r24
     788:	89 81       	ldd	r24, Y+1	; 0x01
     78a:	9a 81       	ldd	r25, Y+2	; 0x02
     78c:	fc 01       	movw	r30, r24
     78e:	20 83       	st	Z, r18
     790:	19 c0       	rjmp	.+50     	; 0x7c4 <nokia_lcd_set_pixel+0xa8>
     792:	89 81       	ldd	r24, Y+1	; 0x01
     794:	9a 81       	ldd	r25, Y+2	; 0x02
     796:	fc 01       	movw	r30, r24
     798:	80 81       	ld	r24, Z
     79a:	48 2f       	mov	r20, r24
     79c:	8c 81       	ldd	r24, Y+4	; 0x04
     79e:	88 2f       	mov	r24, r24
     7a0:	90 e0       	ldi	r25, 0x00	; 0
     7a2:	9c 01       	movw	r18, r24
     7a4:	27 70       	andi	r18, 0x07	; 7
     7a6:	33 27       	eor	r19, r19
     7a8:	81 e0       	ldi	r24, 0x01	; 1
     7aa:	90 e0       	ldi	r25, 0x00	; 0
     7ac:	02 c0       	rjmp	.+4      	; 0x7b2 <nokia_lcd_set_pixel+0x96>
     7ae:	88 0f       	add	r24, r24
     7b0:	99 1f       	adc	r25, r25
     7b2:	2a 95       	dec	r18
     7b4:	e2 f7       	brpl	.-8      	; 0x7ae <nokia_lcd_set_pixel+0x92>
     7b6:	80 95       	com	r24
     7b8:	84 23       	and	r24, r20
     7ba:	28 2f       	mov	r18, r24
     7bc:	89 81       	ldd	r24, Y+1	; 0x01
     7be:	9a 81       	ldd	r25, Y+2	; 0x02
     7c0:	fc 01       	movw	r30, r24
     7c2:	20 83       	st	Z, r18
     7c4:	00 00       	nop
     7c6:	0f 90       	pop	r0
     7c8:	0f 90       	pop	r0
     7ca:	0f 90       	pop	r0
     7cc:	0f 90       	pop	r0
     7ce:	0f 90       	pop	r0
     7d0:	df 91       	pop	r29
     7d2:	cf 91       	pop	r28
     7d4:	08 95       	ret

000007d6 <nokia_lcd_write_char>:
     7d6:	0f 93       	push	r16
     7d8:	1f 93       	push	r17
     7da:	cf 93       	push	r28
     7dc:	df 93       	push	r29
     7de:	00 d0       	rcall	.+0      	; 0x7e0 <nokia_lcd_write_char+0xa>
     7e0:	00 d0       	rcall	.+0      	; 0x7e2 <nokia_lcd_write_char+0xc>
     7e2:	1f 92       	push	r1
     7e4:	cd b7       	in	r28, 0x3d	; 61
     7e6:	de b7       	in	r29, 0x3e	; 62
     7e8:	8c 83       	std	Y+4, r24	; 0x04
     7ea:	6d 83       	std	Y+5, r22	; 0x05
     7ec:	10 e0       	ldi	r17, 0x00	; 0
     7ee:	63 c0       	rjmp	.+198    	; 0x8b6 <nokia_lcd_write_char+0xe0>
     7f0:	00 e0       	ldi	r16, 0x00	; 0
     7f2:	4c c0       	rjmp	.+152    	; 0x88c <nokia_lcd_write_char+0xb6>
     7f4:	8c 81       	ldd	r24, Y+4	; 0x04
     7f6:	88 2f       	mov	r24, r24
     7f8:	90 e0       	ldi	r25, 0x00	; 0
     7fa:	9c 01       	movw	r18, r24
     7fc:	20 52       	subi	r18, 0x20	; 32
     7fe:	31 09       	sbc	r19, r1
     800:	9d 81       	ldd	r25, Y+5	; 0x05
     802:	81 2f       	mov	r24, r17
     804:	69 2f       	mov	r22, r25
     806:	0e 94 83 14 	call	0x2906	; 0x2906 <__udivmodqi4>
     80a:	48 2f       	mov	r20, r24
     80c:	50 e0       	ldi	r21, 0x00	; 0
     80e:	c9 01       	movw	r24, r18
     810:	88 0f       	add	r24, r24
     812:	99 1f       	adc	r25, r25
     814:	88 0f       	add	r24, r24
     816:	99 1f       	adc	r25, r25
     818:	82 0f       	add	r24, r18
     81a:	93 1f       	adc	r25, r19
     81c:	84 0f       	add	r24, r20
     81e:	95 1f       	adc	r25, r21
     820:	88 55       	subi	r24, 0x58	; 88
     822:	9f 4f       	sbci	r25, 0xFF	; 255
     824:	9a 83       	std	Y+2, r25	; 0x02
     826:	89 83       	std	Y+1, r24	; 0x01
     828:	89 81       	ldd	r24, Y+1	; 0x01
     82a:	9a 81       	ldd	r25, Y+2	; 0x02
     82c:	fc 01       	movw	r30, r24
     82e:	84 91       	lpm	r24, Z
     830:	8b 83       	std	Y+3, r24	; 0x03
     832:	8b 81       	ldd	r24, Y+3	; 0x03
     834:	28 2f       	mov	r18, r24
     836:	30 e0       	ldi	r19, 0x00	; 0
     838:	9d 81       	ldd	r25, Y+5	; 0x05
     83a:	80 2f       	mov	r24, r16
     83c:	69 2f       	mov	r22, r25
     83e:	0e 94 83 14 	call	0x2906	; 0x2906 <__udivmodqi4>
     842:	88 2f       	mov	r24, r24
     844:	90 e0       	ldi	r25, 0x00	; 0
     846:	a9 01       	movw	r20, r18
     848:	02 c0       	rjmp	.+4      	; 0x84e <nokia_lcd_write_char+0x78>
     84a:	55 95       	asr	r21
     84c:	47 95       	ror	r20
     84e:	8a 95       	dec	r24
     850:	e2 f7       	brpl	.-8      	; 0x84a <nokia_lcd_write_char+0x74>
     852:	ca 01       	movw	r24, r20
     854:	81 70       	andi	r24, 0x01	; 1
     856:	99 27       	eor	r25, r25
     858:	89 2b       	or	r24, r25
     85a:	59 f0       	breq	.+22     	; 0x872 <nokia_lcd_write_char+0x9c>
     85c:	80 91 41 03 	lds	r24, 0x0341	; 0x800341 <__data_end+0x1f9>
     860:	98 2f       	mov	r25, r24
     862:	90 0f       	add	r25, r16
     864:	80 91 40 03 	lds	r24, 0x0340	; 0x800340 <__data_end+0x1f8>
     868:	81 0f       	add	r24, r17
     86a:	41 e0       	ldi	r20, 0x01	; 1
     86c:	69 2f       	mov	r22, r25
     86e:	56 df       	rcall	.-340    	; 0x71c <nokia_lcd_set_pixel>
     870:	0a c0       	rjmp	.+20     	; 0x886 <nokia_lcd_write_char+0xb0>
     872:	80 91 41 03 	lds	r24, 0x0341	; 0x800341 <__data_end+0x1f9>
     876:	98 2f       	mov	r25, r24
     878:	90 0f       	add	r25, r16
     87a:	80 91 40 03 	lds	r24, 0x0340	; 0x800340 <__data_end+0x1f8>
     87e:	81 0f       	add	r24, r17
     880:	40 e0       	ldi	r20, 0x00	; 0
     882:	69 2f       	mov	r22, r25
     884:	4b df       	rcall	.-362    	; 0x71c <nokia_lcd_set_pixel>
     886:	80 2f       	mov	r24, r16
     888:	01 e0       	ldi	r16, 0x01	; 1
     88a:	08 0f       	add	r16, r24
     88c:	40 2f       	mov	r20, r16
     88e:	50 e0       	ldi	r21, 0x00	; 0
     890:	8d 81       	ldd	r24, Y+5	; 0x05
     892:	28 2f       	mov	r18, r24
     894:	30 e0       	ldi	r19, 0x00	; 0
     896:	c9 01       	movw	r24, r18
     898:	88 0f       	add	r24, r24
     89a:	99 1f       	adc	r25, r25
     89c:	88 0f       	add	r24, r24
     89e:	99 1f       	adc	r25, r25
     8a0:	88 0f       	add	r24, r24
     8a2:	99 1f       	adc	r25, r25
     8a4:	82 1b       	sub	r24, r18
     8a6:	93 0b       	sbc	r25, r19
     8a8:	48 17       	cp	r20, r24
     8aa:	59 07       	cpc	r21, r25
     8ac:	0c f4       	brge	.+2      	; 0x8b0 <nokia_lcd_write_char+0xda>
     8ae:	a2 cf       	rjmp	.-188    	; 0x7f4 <nokia_lcd_write_char+0x1e>
     8b0:	81 2f       	mov	r24, r17
     8b2:	11 e0       	ldi	r17, 0x01	; 1
     8b4:	18 0f       	add	r17, r24
     8b6:	41 2f       	mov	r20, r17
     8b8:	50 e0       	ldi	r21, 0x00	; 0
     8ba:	8d 81       	ldd	r24, Y+5	; 0x05
     8bc:	28 2f       	mov	r18, r24
     8be:	30 e0       	ldi	r19, 0x00	; 0
     8c0:	c9 01       	movw	r24, r18
     8c2:	88 0f       	add	r24, r24
     8c4:	99 1f       	adc	r25, r25
     8c6:	88 0f       	add	r24, r24
     8c8:	99 1f       	adc	r25, r25
     8ca:	82 0f       	add	r24, r18
     8cc:	93 1f       	adc	r25, r19
     8ce:	48 17       	cp	r20, r24
     8d0:	59 07       	cpc	r21, r25
     8d2:	0c f4       	brge	.+2      	; 0x8d6 <nokia_lcd_write_char+0x100>
     8d4:	8d cf       	rjmp	.-230    	; 0x7f0 <nokia_lcd_write_char+0x1a>
     8d6:	20 91 40 03 	lds	r18, 0x0340	; 0x800340 <__data_end+0x1f8>
     8da:	9d 81       	ldd	r25, Y+5	; 0x05
     8dc:	89 2f       	mov	r24, r25
     8de:	88 0f       	add	r24, r24
     8e0:	88 0f       	add	r24, r24
     8e2:	89 0f       	add	r24, r25
     8e4:	82 0f       	add	r24, r18
     8e6:	8f 5f       	subi	r24, 0xFF	; 255
     8e8:	80 93 40 03 	sts	0x0340, r24	; 0x800340 <__data_end+0x1f8>
     8ec:	80 91 40 03 	lds	r24, 0x0340	; 0x800340 <__data_end+0x1f8>
     8f0:	84 35       	cpi	r24, 0x54	; 84
     8f2:	70 f0       	brcs	.+28     	; 0x910 <nokia_lcd_write_char+0x13a>
     8f4:	10 92 40 03 	sts	0x0340, r1	; 0x800340 <__data_end+0x1f8>
     8f8:	20 91 41 03 	lds	r18, 0x0341	; 0x800341 <__data_end+0x1f9>
     8fc:	9d 81       	ldd	r25, Y+5	; 0x05
     8fe:	89 2f       	mov	r24, r25
     900:	88 0f       	add	r24, r24
     902:	88 0f       	add	r24, r24
     904:	88 0f       	add	r24, r24
     906:	89 1b       	sub	r24, r25
     908:	82 0f       	add	r24, r18
     90a:	8f 5f       	subi	r24, 0xFF	; 255
     90c:	80 93 41 03 	sts	0x0341, r24	; 0x800341 <__data_end+0x1f9>
     910:	80 91 41 03 	lds	r24, 0x0341	; 0x800341 <__data_end+0x1f9>
     914:	80 33       	cpi	r24, 0x30	; 48
     916:	20 f0       	brcs	.+8      	; 0x920 <nokia_lcd_write_char+0x14a>
     918:	10 92 40 03 	sts	0x0340, r1	; 0x800340 <__data_end+0x1f8>
     91c:	10 92 41 03 	sts	0x0341, r1	; 0x800341 <__data_end+0x1f9>
     920:	00 00       	nop
     922:	0f 90       	pop	r0
     924:	0f 90       	pop	r0
     926:	0f 90       	pop	r0
     928:	0f 90       	pop	r0
     92a:	0f 90       	pop	r0
     92c:	df 91       	pop	r29
     92e:	cf 91       	pop	r28
     930:	1f 91       	pop	r17
     932:	0f 91       	pop	r16
     934:	08 95       	ret

00000936 <nokia_lcd_write_string>:
     936:	cf 93       	push	r28
     938:	df 93       	push	r29
     93a:	00 d0       	rcall	.+0      	; 0x93c <nokia_lcd_write_string+0x6>
     93c:	1f 92       	push	r1
     93e:	cd b7       	in	r28, 0x3d	; 61
     940:	de b7       	in	r29, 0x3e	; 62
     942:	9a 83       	std	Y+2, r25	; 0x02
     944:	89 83       	std	Y+1, r24	; 0x01
     946:	6b 83       	std	Y+3, r22	; 0x03
     948:	0b c0       	rjmp	.+22     	; 0x960 <nokia_lcd_write_string+0x2a>
     94a:	89 81       	ldd	r24, Y+1	; 0x01
     94c:	9a 81       	ldd	r25, Y+2	; 0x02
     94e:	9c 01       	movw	r18, r24
     950:	2f 5f       	subi	r18, 0xFF	; 255
     952:	3f 4f       	sbci	r19, 0xFF	; 255
     954:	3a 83       	std	Y+2, r19	; 0x02
     956:	29 83       	std	Y+1, r18	; 0x01
     958:	fc 01       	movw	r30, r24
     95a:	80 81       	ld	r24, Z
     95c:	6b 81       	ldd	r22, Y+3	; 0x03
     95e:	3b df       	rcall	.-394    	; 0x7d6 <nokia_lcd_write_char>
     960:	89 81       	ldd	r24, Y+1	; 0x01
     962:	9a 81       	ldd	r25, Y+2	; 0x02
     964:	fc 01       	movw	r30, r24
     966:	80 81       	ld	r24, Z
     968:	88 23       	and	r24, r24
     96a:	79 f7       	brne	.-34     	; 0x94a <nokia_lcd_write_string+0x14>
     96c:	00 00       	nop
     96e:	0f 90       	pop	r0
     970:	0f 90       	pop	r0
     972:	0f 90       	pop	r0
     974:	df 91       	pop	r29
     976:	cf 91       	pop	r28
     978:	08 95       	ret

0000097a <nokia_lcd_set_cursor>:
     97a:	cf 93       	push	r28
     97c:	df 93       	push	r29
     97e:	00 d0       	rcall	.+0      	; 0x980 <nokia_lcd_set_cursor+0x6>
     980:	cd b7       	in	r28, 0x3d	; 61
     982:	de b7       	in	r29, 0x3e	; 62
     984:	89 83       	std	Y+1, r24	; 0x01
     986:	6a 83       	std	Y+2, r22	; 0x02
     988:	89 81       	ldd	r24, Y+1	; 0x01
     98a:	80 93 40 03 	sts	0x0340, r24	; 0x800340 <__data_end+0x1f8>
     98e:	8a 81       	ldd	r24, Y+2	; 0x02
     990:	80 93 41 03 	sts	0x0341, r24	; 0x800341 <__data_end+0x1f9>
     994:	00 00       	nop
     996:	0f 90       	pop	r0
     998:	0f 90       	pop	r0
     99a:	df 91       	pop	r29
     99c:	cf 91       	pop	r28
     99e:	08 95       	ret

000009a0 <nokia_lcd_render>:
     9a0:	0f 93       	push	r16
     9a2:	1f 93       	push	r17
     9a4:	cf 93       	push	r28
     9a6:	df 93       	push	r29
     9a8:	cd b7       	in	r28, 0x3d	; 61
     9aa:	de b7       	in	r29, 0x3e	; 62
     9ac:	80 e8       	ldi	r24, 0x80	; 128
     9ae:	03 dd       	rcall	.-1530   	; 0x3b6 <write_cmd>
     9b0:	80 e4       	ldi	r24, 0x40	; 64
     9b2:	01 dd       	rcall	.-1534   	; 0x3b6 <write_cmd>
     9b4:	00 e0       	ldi	r16, 0x00	; 0
     9b6:	10 e0       	ldi	r17, 0x00	; 0
     9b8:	08 c0       	rjmp	.+16     	; 0x9ca <nokia_lcd_render+0x2a>
     9ba:	c8 01       	movw	r24, r16
     9bc:	88 5b       	subi	r24, 0xB8	; 184
     9be:	9e 4f       	sbci	r25, 0xFE	; 254
     9c0:	fc 01       	movw	r30, r24
     9c2:	80 81       	ld	r24, Z
     9c4:	06 dd       	rcall	.-1524   	; 0x3d2 <write_data>
     9c6:	0f 5f       	subi	r16, 0xFF	; 255
     9c8:	1f 4f       	sbci	r17, 0xFF	; 255
     9ca:	08 3f       	cpi	r16, 0xF8	; 248
     9cc:	f1 e0       	ldi	r31, 0x01	; 1
     9ce:	1f 07       	cpc	r17, r31
     9d0:	a0 f3       	brcs	.-24     	; 0x9ba <nokia_lcd_render+0x1a>
     9d2:	00 00       	nop
     9d4:	df 91       	pop	r29
     9d6:	cf 91       	pop	r28
     9d8:	1f 91       	pop	r17
     9da:	0f 91       	pop	r16
     9dc:	08 95       	ret

000009de <TimerSet>:
     9de:	cf 93       	push	r28
     9e0:	df 93       	push	r29
     9e2:	00 d0       	rcall	.+0      	; 0x9e4 <TimerSet+0x6>
     9e4:	00 d0       	rcall	.+0      	; 0x9e6 <TimerSet+0x8>
     9e6:	cd b7       	in	r28, 0x3d	; 61
     9e8:	de b7       	in	r29, 0x3e	; 62
     9ea:	69 83       	std	Y+1, r22	; 0x01
     9ec:	7a 83       	std	Y+2, r23	; 0x02
     9ee:	8b 83       	std	Y+3, r24	; 0x03
     9f0:	9c 83       	std	Y+4, r25	; 0x04
     9f2:	89 81       	ldd	r24, Y+1	; 0x01
     9f4:	9a 81       	ldd	r25, Y+2	; 0x02
     9f6:	ab 81       	ldd	r26, Y+3	; 0x03
     9f8:	bc 81       	ldd	r27, Y+4	; 0x04
     9fa:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <_avr_timer_M>
     9fe:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <_avr_timer_M+0x1>
     a02:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <_avr_timer_M+0x2>
     a06:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <_avr_timer_M+0x3>
     a0a:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <_avr_timer_M>
     a0e:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <_avr_timer_M+0x1>
     a12:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <_avr_timer_M+0x2>
     a16:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <_avr_timer_M+0x3>
     a1a:	80 93 43 03 	sts	0x0343, r24	; 0x800343 <_avr_timer_cntcurr>
     a1e:	90 93 44 03 	sts	0x0344, r25	; 0x800344 <_avr_timer_cntcurr+0x1>
     a22:	a0 93 45 03 	sts	0x0345, r26	; 0x800345 <_avr_timer_cntcurr+0x2>
     a26:	b0 93 46 03 	sts	0x0346, r27	; 0x800346 <_avr_timer_cntcurr+0x3>
     a2a:	00 00       	nop
     a2c:	0f 90       	pop	r0
     a2e:	0f 90       	pop	r0
     a30:	0f 90       	pop	r0
     a32:	0f 90       	pop	r0
     a34:	df 91       	pop	r29
     a36:	cf 91       	pop	r28
     a38:	08 95       	ret

00000a3a <TimerOn>:
     a3a:	cf 93       	push	r28
     a3c:	df 93       	push	r29
     a3e:	cd b7       	in	r28, 0x3d	; 61
     a40:	de b7       	in	r29, 0x3e	; 62
     a42:	81 e8       	ldi	r24, 0x81	; 129
     a44:	90 e0       	ldi	r25, 0x00	; 0
     a46:	2b e0       	ldi	r18, 0x0B	; 11
     a48:	fc 01       	movw	r30, r24
     a4a:	20 83       	st	Z, r18
     a4c:	88 e8       	ldi	r24, 0x88	; 136
     a4e:	90 e0       	ldi	r25, 0x00	; 0
     a50:	2d e7       	ldi	r18, 0x7D	; 125
     a52:	30 e0       	ldi	r19, 0x00	; 0
     a54:	fc 01       	movw	r30, r24
     a56:	31 83       	std	Z+1, r19	; 0x01
     a58:	20 83       	st	Z, r18
     a5a:	8f e6       	ldi	r24, 0x6F	; 111
     a5c:	90 e0       	ldi	r25, 0x00	; 0
     a5e:	22 e0       	ldi	r18, 0x02	; 2
     a60:	fc 01       	movw	r30, r24
     a62:	20 83       	st	Z, r18
     a64:	84 e8       	ldi	r24, 0x84	; 132
     a66:	90 e0       	ldi	r25, 0x00	; 0
     a68:	fc 01       	movw	r30, r24
     a6a:	11 82       	std	Z+1, r1	; 0x01
     a6c:	10 82       	st	Z, r1
     a6e:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <_avr_timer_M>
     a72:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <_avr_timer_M+0x1>
     a76:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <_avr_timer_M+0x2>
     a7a:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <_avr_timer_M+0x3>
     a7e:	80 93 43 03 	sts	0x0343, r24	; 0x800343 <_avr_timer_cntcurr>
     a82:	90 93 44 03 	sts	0x0344, r25	; 0x800344 <_avr_timer_cntcurr+0x1>
     a86:	a0 93 45 03 	sts	0x0345, r26	; 0x800345 <_avr_timer_cntcurr+0x2>
     a8a:	b0 93 46 03 	sts	0x0346, r27	; 0x800346 <_avr_timer_cntcurr+0x3>
     a8e:	8f e5       	ldi	r24, 0x5F	; 95
     a90:	90 e0       	ldi	r25, 0x00	; 0
     a92:	2f e5       	ldi	r18, 0x5F	; 95
     a94:	30 e0       	ldi	r19, 0x00	; 0
     a96:	f9 01       	movw	r30, r18
     a98:	20 81       	ld	r18, Z
     a9a:	20 68       	ori	r18, 0x80	; 128
     a9c:	fc 01       	movw	r30, r24
     a9e:	20 83       	st	Z, r18
     aa0:	00 00       	nop
     aa2:	df 91       	pop	r29
     aa4:	cf 91       	pop	r28
     aa6:	08 95       	ret

00000aa8 <TimerISR>:
     aa8:	cf 93       	push	r28
     aaa:	df 93       	push	r29
     aac:	cd b7       	in	r28, 0x3d	; 61
     aae:	de b7       	in	r29, 0x3e	; 62
     ab0:	81 e0       	ldi	r24, 0x01	; 1
     ab2:	80 93 42 03 	sts	0x0342, r24	; 0x800342 <TimerFlag>
     ab6:	00 00       	nop
     ab8:	df 91       	pop	r29
     aba:	cf 91       	pop	r28
     abc:	08 95       	ret

00000abe <__vector_13>:
     abe:	1f 92       	push	r1
     ac0:	0f 92       	push	r0
     ac2:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     ac6:	0f 92       	push	r0
     ac8:	11 24       	eor	r1, r1
     aca:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
     ace:	0f 92       	push	r0
     ad0:	2f 93       	push	r18
     ad2:	3f 93       	push	r19
     ad4:	4f 93       	push	r20
     ad6:	5f 93       	push	r21
     ad8:	6f 93       	push	r22
     ada:	7f 93       	push	r23
     adc:	8f 93       	push	r24
     ade:	9f 93       	push	r25
     ae0:	af 93       	push	r26
     ae2:	bf 93       	push	r27
     ae4:	ef 93       	push	r30
     ae6:	ff 93       	push	r31
     ae8:	cf 93       	push	r28
     aea:	df 93       	push	r29
     aec:	cd b7       	in	r28, 0x3d	; 61
     aee:	de b7       	in	r29, 0x3e	; 62
     af0:	80 91 43 03 	lds	r24, 0x0343	; 0x800343 <_avr_timer_cntcurr>
     af4:	90 91 44 03 	lds	r25, 0x0344	; 0x800344 <_avr_timer_cntcurr+0x1>
     af8:	a0 91 45 03 	lds	r26, 0x0345	; 0x800345 <_avr_timer_cntcurr+0x2>
     afc:	b0 91 46 03 	lds	r27, 0x0346	; 0x800346 <_avr_timer_cntcurr+0x3>
     b00:	01 97       	sbiw	r24, 0x01	; 1
     b02:	a1 09       	sbc	r26, r1
     b04:	b1 09       	sbc	r27, r1
     b06:	80 93 43 03 	sts	0x0343, r24	; 0x800343 <_avr_timer_cntcurr>
     b0a:	90 93 44 03 	sts	0x0344, r25	; 0x800344 <_avr_timer_cntcurr+0x1>
     b0e:	a0 93 45 03 	sts	0x0345, r26	; 0x800345 <_avr_timer_cntcurr+0x2>
     b12:	b0 93 46 03 	sts	0x0346, r27	; 0x800346 <_avr_timer_cntcurr+0x3>
     b16:	80 91 43 03 	lds	r24, 0x0343	; 0x800343 <_avr_timer_cntcurr>
     b1a:	90 91 44 03 	lds	r25, 0x0344	; 0x800344 <_avr_timer_cntcurr+0x1>
     b1e:	a0 91 45 03 	lds	r26, 0x0345	; 0x800345 <_avr_timer_cntcurr+0x2>
     b22:	b0 91 46 03 	lds	r27, 0x0346	; 0x800346 <_avr_timer_cntcurr+0x3>
     b26:	89 2b       	or	r24, r25
     b28:	8a 2b       	or	r24, r26
     b2a:	8b 2b       	or	r24, r27
     b2c:	89 f4       	brne	.+34     	; 0xb50 <__vector_13+0x92>
     b2e:	bc df       	rcall	.-136    	; 0xaa8 <TimerISR>
     b30:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <_avr_timer_M>
     b34:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <_avr_timer_M+0x1>
     b38:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <_avr_timer_M+0x2>
     b3c:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <_avr_timer_M+0x3>
     b40:	80 93 43 03 	sts	0x0343, r24	; 0x800343 <_avr_timer_cntcurr>
     b44:	90 93 44 03 	sts	0x0344, r25	; 0x800344 <_avr_timer_cntcurr+0x1>
     b48:	a0 93 45 03 	sts	0x0345, r26	; 0x800345 <_avr_timer_cntcurr+0x2>
     b4c:	b0 93 46 03 	sts	0x0346, r27	; 0x800346 <_avr_timer_cntcurr+0x3>
     b50:	00 00       	nop
     b52:	df 91       	pop	r29
     b54:	cf 91       	pop	r28
     b56:	ff 91       	pop	r31
     b58:	ef 91       	pop	r30
     b5a:	bf 91       	pop	r27
     b5c:	af 91       	pop	r26
     b5e:	9f 91       	pop	r25
     b60:	8f 91       	pop	r24
     b62:	7f 91       	pop	r23
     b64:	6f 91       	pop	r22
     b66:	5f 91       	pop	r21
     b68:	4f 91       	pop	r20
     b6a:	3f 91       	pop	r19
     b6c:	2f 91       	pop	r18
     b6e:	0f 90       	pop	r0
     b70:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
     b74:	0f 90       	pop	r0
     b76:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     b7a:	0f 90       	pop	r0
     b7c:	1f 90       	pop	r1
     b7e:	18 95       	reti

00000b80 <store>:
     b80:	cf 93       	push	r28
     b82:	df 93       	push	r29
     b84:	00 d0       	rcall	.+0      	; 0xb86 <store+0x6>
     b86:	cd b7       	in	r28, 0x3d	; 61
     b88:	de b7       	in	r29, 0x3e	; 62
     b8a:	89 83       	std	Y+1, r24	; 0x01
     b8c:	6a 83       	std	Y+2, r22	; 0x02
     b8e:	00 00       	nop
     b90:	8f e3       	ldi	r24, 0x3F	; 63
     b92:	90 e0       	ldi	r25, 0x00	; 0
     b94:	fc 01       	movw	r30, r24
     b96:	80 81       	ld	r24, Z
     b98:	88 2f       	mov	r24, r24
     b9a:	90 e0       	ldi	r25, 0x00	; 0
     b9c:	84 70       	andi	r24, 0x04	; 4
     b9e:	99 27       	eor	r25, r25
     ba0:	89 2b       	or	r24, r25
     ba2:	b1 f7       	brne	.-20     	; 0xb90 <store+0x10>
     ba4:	81 e4       	ldi	r24, 0x41	; 65
     ba6:	90 e0       	ldi	r25, 0x00	; 0
     ba8:	29 81       	ldd	r18, Y+1	; 0x01
     baa:	22 2f       	mov	r18, r18
     bac:	30 e0       	ldi	r19, 0x00	; 0
     bae:	fc 01       	movw	r30, r24
     bb0:	31 83       	std	Z+1, r19	; 0x01
     bb2:	20 83       	st	Z, r18
     bb4:	80 e4       	ldi	r24, 0x40	; 64
     bb6:	90 e0       	ldi	r25, 0x00	; 0
     bb8:	2a 81       	ldd	r18, Y+2	; 0x02
     bba:	fc 01       	movw	r30, r24
     bbc:	20 83       	st	Z, r18
     bbe:	8f e3       	ldi	r24, 0x3F	; 63
     bc0:	90 e0       	ldi	r25, 0x00	; 0
     bc2:	2f e3       	ldi	r18, 0x3F	; 63
     bc4:	30 e0       	ldi	r19, 0x00	; 0
     bc6:	f9 01       	movw	r30, r18
     bc8:	20 81       	ld	r18, Z
     bca:	2f 70       	andi	r18, 0x0F	; 15
     bcc:	fc 01       	movw	r30, r24
     bce:	20 83       	st	Z, r18
     bd0:	8f e3       	ldi	r24, 0x3F	; 63
     bd2:	90 e0       	ldi	r25, 0x00	; 0
     bd4:	2f e3       	ldi	r18, 0x3F	; 63
     bd6:	30 e0       	ldi	r19, 0x00	; 0
     bd8:	f9 01       	movw	r30, r18
     bda:	20 81       	ld	r18, Z
     bdc:	2d 7f       	andi	r18, 0xFD	; 253
     bde:	fc 01       	movw	r30, r24
     be0:	20 83       	st	Z, r18
     be2:	8f e3       	ldi	r24, 0x3F	; 63
     be4:	90 e0       	ldi	r25, 0x00	; 0
     be6:	2f e3       	ldi	r18, 0x3F	; 63
     be8:	30 e0       	ldi	r19, 0x00	; 0
     bea:	f9 01       	movw	r30, r18
     bec:	20 81       	ld	r18, Z
     bee:	24 60       	ori	r18, 0x04	; 4
     bf0:	fc 01       	movw	r30, r24
     bf2:	20 83       	st	Z, r18
     bf4:	8f e3       	ldi	r24, 0x3F	; 63
     bf6:	90 e0       	ldi	r25, 0x00	; 0
     bf8:	2f e3       	ldi	r18, 0x3F	; 63
     bfa:	30 e0       	ldi	r19, 0x00	; 0
     bfc:	f9 01       	movw	r30, r18
     bfe:	20 81       	ld	r18, Z
     c00:	22 60       	ori	r18, 0x02	; 2
     c02:	fc 01       	movw	r30, r24
     c04:	20 83       	st	Z, r18
     c06:	00 00       	nop
     c08:	8f e3       	ldi	r24, 0x3F	; 63
     c0a:	90 e0       	ldi	r25, 0x00	; 0
     c0c:	fc 01       	movw	r30, r24
     c0e:	80 81       	ld	r24, Z
     c10:	88 2f       	mov	r24, r24
     c12:	90 e0       	ldi	r25, 0x00	; 0
     c14:	84 70       	andi	r24, 0x04	; 4
     c16:	99 27       	eor	r25, r25
     c18:	89 2b       	or	r24, r25
     c1a:	b1 f7       	brne	.-20     	; 0xc08 <store+0x88>
     c1c:	00 00       	nop
     c1e:	0f 90       	pop	r0
     c20:	0f 90       	pop	r0
     c22:	df 91       	pop	r29
     c24:	cf 91       	pop	r28
     c26:	08 95       	ret

00000c28 <load>:
     c28:	cf 93       	push	r28
     c2a:	df 93       	push	r29
     c2c:	00 d0       	rcall	.+0      	; 0xc2e <load+0x6>
     c2e:	cd b7       	in	r28, 0x3d	; 61
     c30:	de b7       	in	r29, 0x3e	; 62
     c32:	9a 83       	std	Y+2, r25	; 0x02
     c34:	89 83       	std	Y+1, r24	; 0x01
     c36:	00 00       	nop
     c38:	8f e3       	ldi	r24, 0x3F	; 63
     c3a:	90 e0       	ldi	r25, 0x00	; 0
     c3c:	fc 01       	movw	r30, r24
     c3e:	80 81       	ld	r24, Z
     c40:	88 2f       	mov	r24, r24
     c42:	90 e0       	ldi	r25, 0x00	; 0
     c44:	84 70       	andi	r24, 0x04	; 4
     c46:	99 27       	eor	r25, r25
     c48:	89 2b       	or	r24, r25
     c4a:	b1 f7       	brne	.-20     	; 0xc38 <load+0x10>
     c4c:	8f e3       	ldi	r24, 0x3F	; 63
     c4e:	90 e0       	ldi	r25, 0x00	; 0
     c50:	fc 01       	movw	r30, r24
     c52:	80 81       	ld	r24, Z
     c54:	88 2f       	mov	r24, r24
     c56:	90 e0       	ldi	r25, 0x00	; 0
     c58:	82 70       	andi	r24, 0x02	; 2
     c5a:	99 27       	eor	r25, r25
     c5c:	89 2b       	or	r24, r25
     c5e:	61 f7       	brne	.-40     	; 0xc38 <load+0x10>
     c60:	81 e4       	ldi	r24, 0x41	; 65
     c62:	90 e0       	ldi	r25, 0x00	; 0
     c64:	29 81       	ldd	r18, Y+1	; 0x01
     c66:	3a 81       	ldd	r19, Y+2	; 0x02
     c68:	fc 01       	movw	r30, r24
     c6a:	31 83       	std	Z+1, r19	; 0x01
     c6c:	20 83       	st	Z, r18
     c6e:	8f e3       	ldi	r24, 0x3F	; 63
     c70:	90 e0       	ldi	r25, 0x00	; 0
     c72:	2f e3       	ldi	r18, 0x3F	; 63
     c74:	30 e0       	ldi	r19, 0x00	; 0
     c76:	f9 01       	movw	r30, r18
     c78:	20 81       	ld	r18, Z
     c7a:	21 60       	ori	r18, 0x01	; 1
     c7c:	fc 01       	movw	r30, r24
     c7e:	20 83       	st	Z, r18
     c80:	00 00       	nop
     c82:	8f e3       	ldi	r24, 0x3F	; 63
     c84:	90 e0       	ldi	r25, 0x00	; 0
     c86:	fc 01       	movw	r30, r24
     c88:	80 81       	ld	r24, Z
     c8a:	88 2f       	mov	r24, r24
     c8c:	90 e0       	ldi	r25, 0x00	; 0
     c8e:	81 70       	andi	r24, 0x01	; 1
     c90:	99 27       	eor	r25, r25
     c92:	89 2b       	or	r24, r25
     c94:	b1 f7       	brne	.-20     	; 0xc82 <load+0x5a>
     c96:	80 e4       	ldi	r24, 0x40	; 64
     c98:	90 e0       	ldi	r25, 0x00	; 0
     c9a:	fc 01       	movw	r30, r24
     c9c:	80 81       	ld	r24, Z
     c9e:	0f 90       	pop	r0
     ca0:	0f 90       	pop	r0
     ca2:	df 91       	pop	r29
     ca4:	cf 91       	pop	r28
     ca6:	08 95       	ret

00000ca8 <add>:
     ca8:	cf 93       	push	r28
     caa:	df 93       	push	r29
     cac:	cd b7       	in	r28, 0x3d	; 61
     cae:	de b7       	in	r29, 0x3e	; 62
     cb0:	28 97       	sbiw	r28, 0x08	; 8
     cb2:	0f b6       	in	r0, 0x3f	; 63
     cb4:	f8 94       	cli
     cb6:	de bf       	out	0x3e, r29	; 62
     cb8:	0f be       	out	0x3f, r0	; 63
     cba:	cd bf       	out	0x3d, r28	; 61
     cbc:	9e 83       	std	Y+6, r25	; 0x06
     cbe:	8d 83       	std	Y+5, r24	; 0x05
     cc0:	78 87       	std	Y+8, r23	; 0x08
     cc2:	6f 83       	std	Y+7, r22	; 0x07
     cc4:	8d 81       	ldd	r24, Y+5	; 0x05
     cc6:	9e 81       	ldd	r25, Y+6	; 0x06
     cc8:	fc 01       	movw	r30, r24
     cca:	20 81       	ld	r18, Z
     ccc:	31 81       	ldd	r19, Z+1	; 0x01
     cce:	8f 81       	ldd	r24, Y+7	; 0x07
     cd0:	98 85       	ldd	r25, Y+8	; 0x08
     cd2:	fc 01       	movw	r30, r24
     cd4:	80 81       	ld	r24, Z
     cd6:	91 81       	ldd	r25, Z+1	; 0x01
     cd8:	82 0f       	add	r24, r18
     cda:	93 1f       	adc	r25, r19
     cdc:	9a 83       	std	Y+2, r25	; 0x02
     cde:	89 83       	std	Y+1, r24	; 0x01
     ce0:	8d 81       	ldd	r24, Y+5	; 0x05
     ce2:	9e 81       	ldd	r25, Y+6	; 0x06
     ce4:	fc 01       	movw	r30, r24
     ce6:	22 81       	ldd	r18, Z+2	; 0x02
     ce8:	33 81       	ldd	r19, Z+3	; 0x03
     cea:	8f 81       	ldd	r24, Y+7	; 0x07
     cec:	98 85       	ldd	r25, Y+8	; 0x08
     cee:	fc 01       	movw	r30, r24
     cf0:	82 81       	ldd	r24, Z+2	; 0x02
     cf2:	93 81       	ldd	r25, Z+3	; 0x03
     cf4:	82 0f       	add	r24, r18
     cf6:	93 1f       	adc	r25, r19
     cf8:	9c 83       	std	Y+4, r25	; 0x04
     cfa:	8b 83       	std	Y+3, r24	; 0x03
     cfc:	89 81       	ldd	r24, Y+1	; 0x01
     cfe:	9a 81       	ldd	r25, Y+2	; 0x02
     d00:	ab 81       	ldd	r26, Y+3	; 0x03
     d02:	bc 81       	ldd	r27, Y+4	; 0x04
     d04:	bc 01       	movw	r22, r24
     d06:	cd 01       	movw	r24, r26
     d08:	28 96       	adiw	r28, 0x08	; 8
     d0a:	0f b6       	in	r0, 0x3f	; 63
     d0c:	f8 94       	cli
     d0e:	de bf       	out	0x3e, r29	; 62
     d10:	0f be       	out	0x3f, r0	; 63
     d12:	cd bf       	out	0x3d, r28	; 61
     d14:	df 91       	pop	r29
     d16:	cf 91       	pop	r28
     d18:	08 95       	ret

00000d1a <pivotCCW>:
     d1a:	cf 93       	push	r28
     d1c:	df 93       	push	r29
     d1e:	00 d0       	rcall	.+0      	; 0xd20 <pivotCCW+0x6>
     d20:	00 d0       	rcall	.+0      	; 0xd22 <pivotCCW+0x8>
     d22:	cd b7       	in	r28, 0x3d	; 61
     d24:	de b7       	in	r29, 0x3e	; 62
     d26:	9c 83       	std	Y+4, r25	; 0x04
     d28:	8b 83       	std	Y+3, r24	; 0x03
     d2a:	8b 81       	ldd	r24, Y+3	; 0x03
     d2c:	9c 81       	ldd	r25, Y+4	; 0x04
     d2e:	fc 01       	movw	r30, r24
     d30:	80 81       	ld	r24, Z
     d32:	91 81       	ldd	r25, Z+1	; 0x01
     d34:	9a 83       	std	Y+2, r25	; 0x02
     d36:	89 83       	std	Y+1, r24	; 0x01
     d38:	8b 81       	ldd	r24, Y+3	; 0x03
     d3a:	9c 81       	ldd	r25, Y+4	; 0x04
     d3c:	fc 01       	movw	r30, r24
     d3e:	82 81       	ldd	r24, Z+2	; 0x02
     d40:	93 81       	ldd	r25, Z+3	; 0x03
     d42:	22 27       	eor	r18, r18
     d44:	33 27       	eor	r19, r19
     d46:	28 1b       	sub	r18, r24
     d48:	39 0b       	sbc	r19, r25
     d4a:	8b 81       	ldd	r24, Y+3	; 0x03
     d4c:	9c 81       	ldd	r25, Y+4	; 0x04
     d4e:	fc 01       	movw	r30, r24
     d50:	31 83       	std	Z+1, r19	; 0x01
     d52:	20 83       	st	Z, r18
     d54:	8b 81       	ldd	r24, Y+3	; 0x03
     d56:	9c 81       	ldd	r25, Y+4	; 0x04
     d58:	29 81       	ldd	r18, Y+1	; 0x01
     d5a:	3a 81       	ldd	r19, Y+2	; 0x02
     d5c:	fc 01       	movw	r30, r24
     d5e:	33 83       	std	Z+3, r19	; 0x03
     d60:	22 83       	std	Z+2, r18	; 0x02
     d62:	00 00       	nop
     d64:	0f 90       	pop	r0
     d66:	0f 90       	pop	r0
     d68:	0f 90       	pop	r0
     d6a:	0f 90       	pop	r0
     d6c:	df 91       	pop	r29
     d6e:	cf 91       	pop	r28
     d70:	08 95       	ret

00000d72 <pivotCW>:
     d72:	cf 93       	push	r28
     d74:	df 93       	push	r29
     d76:	00 d0       	rcall	.+0      	; 0xd78 <pivotCW+0x6>
     d78:	00 d0       	rcall	.+0      	; 0xd7a <pivotCW+0x8>
     d7a:	cd b7       	in	r28, 0x3d	; 61
     d7c:	de b7       	in	r29, 0x3e	; 62
     d7e:	9c 83       	std	Y+4, r25	; 0x04
     d80:	8b 83       	std	Y+3, r24	; 0x03
     d82:	8b 81       	ldd	r24, Y+3	; 0x03
     d84:	9c 81       	ldd	r25, Y+4	; 0x04
     d86:	fc 01       	movw	r30, r24
     d88:	82 81       	ldd	r24, Z+2	; 0x02
     d8a:	93 81       	ldd	r25, Z+3	; 0x03
     d8c:	9a 83       	std	Y+2, r25	; 0x02
     d8e:	89 83       	std	Y+1, r24	; 0x01
     d90:	8b 81       	ldd	r24, Y+3	; 0x03
     d92:	9c 81       	ldd	r25, Y+4	; 0x04
     d94:	fc 01       	movw	r30, r24
     d96:	80 81       	ld	r24, Z
     d98:	91 81       	ldd	r25, Z+1	; 0x01
     d9a:	22 27       	eor	r18, r18
     d9c:	33 27       	eor	r19, r19
     d9e:	28 1b       	sub	r18, r24
     da0:	39 0b       	sbc	r19, r25
     da2:	8b 81       	ldd	r24, Y+3	; 0x03
     da4:	9c 81       	ldd	r25, Y+4	; 0x04
     da6:	fc 01       	movw	r30, r24
     da8:	33 83       	std	Z+3, r19	; 0x03
     daa:	22 83       	std	Z+2, r18	; 0x02
     dac:	8b 81       	ldd	r24, Y+3	; 0x03
     dae:	9c 81       	ldd	r25, Y+4	; 0x04
     db0:	29 81       	ldd	r18, Y+1	; 0x01
     db2:	3a 81       	ldd	r19, Y+2	; 0x02
     db4:	fc 01       	movw	r30, r24
     db6:	31 83       	std	Z+1, r19	; 0x01
     db8:	20 83       	st	Z, r18
     dba:	00 00       	nop
     dbc:	0f 90       	pop	r0
     dbe:	0f 90       	pop	r0
     dc0:	0f 90       	pop	r0
     dc2:	0f 90       	pop	r0
     dc4:	df 91       	pop	r29
     dc6:	cf 91       	pop	r28
     dc8:	08 95       	ret

00000dca <L>:
     dca:	cf 93       	push	r28
     dcc:	df 93       	push	r29
     dce:	00 d0       	rcall	.+0      	; 0xdd0 <L+0x6>
     dd0:	00 d0       	rcall	.+0      	; 0xdd2 <L+0x8>
     dd2:	00 d0       	rcall	.+0      	; 0xdd4 <L+0xa>
     dd4:	cd b7       	in	r28, 0x3d	; 61
     dd6:	de b7       	in	r29, 0x3e	; 62
     dd8:	9a 83       	std	Y+2, r25	; 0x02
     dda:	89 83       	std	Y+1, r24	; 0x01
     ddc:	4b 83       	std	Y+3, r20	; 0x03
     dde:	5c 83       	std	Y+4, r21	; 0x04
     de0:	6d 83       	std	Y+5, r22	; 0x05
     de2:	7e 83       	std	Y+6, r23	; 0x06
     de4:	29 81       	ldd	r18, Y+1	; 0x01
     de6:	3a 81       	ldd	r19, Y+2	; 0x02
     de8:	8b 81       	ldd	r24, Y+3	; 0x03
     dea:	9c 81       	ldd	r25, Y+4	; 0x04
     dec:	ad 81       	ldd	r26, Y+5	; 0x05
     dee:	be 81       	ldd	r27, Y+6	; 0x06
     df0:	f9 01       	movw	r30, r18
     df2:	80 83       	st	Z, r24
     df4:	91 83       	std	Z+1, r25	; 0x01
     df6:	a2 83       	std	Z+2, r26	; 0x02
     df8:	b3 83       	std	Z+3, r27	; 0x03
     dfa:	89 81       	ldd	r24, Y+1	; 0x01
     dfc:	9a 81       	ldd	r25, Y+2	; 0x02
     dfe:	fc 01       	movw	r30, r24
     e00:	15 82       	std	Z+5, r1	; 0x05
     e02:	14 82       	std	Z+4, r1	; 0x04
     e04:	89 81       	ldd	r24, Y+1	; 0x01
     e06:	9a 81       	ldd	r25, Y+2	; 0x02
     e08:	21 e0       	ldi	r18, 0x01	; 1
     e0a:	30 e0       	ldi	r19, 0x00	; 0
     e0c:	fc 01       	movw	r30, r24
     e0e:	37 83       	std	Z+7, r19	; 0x07
     e10:	26 83       	std	Z+6, r18	; 0x06
     e12:	89 81       	ldd	r24, Y+1	; 0x01
     e14:	9a 81       	ldd	r25, Y+2	; 0x02
     e16:	fc 01       	movw	r30, r24
     e18:	11 86       	std	Z+9, r1	; 0x09
     e1a:	10 86       	std	Z+8, r1	; 0x08
     e1c:	89 81       	ldd	r24, Y+1	; 0x01
     e1e:	9a 81       	ldd	r25, Y+2	; 0x02
     e20:	fc 01       	movw	r30, r24
     e22:	13 86       	std	Z+11, r1	; 0x0b
     e24:	12 86       	std	Z+10, r1	; 0x0a
     e26:	89 81       	ldd	r24, Y+1	; 0x01
     e28:	9a 81       	ldd	r25, Y+2	; 0x02
     e2a:	fc 01       	movw	r30, r24
     e2c:	15 86       	std	Z+13, r1	; 0x0d
     e2e:	14 86       	std	Z+12, r1	; 0x0c
     e30:	89 81       	ldd	r24, Y+1	; 0x01
     e32:	9a 81       	ldd	r25, Y+2	; 0x02
     e34:	2f ef       	ldi	r18, 0xFF	; 255
     e36:	3f ef       	ldi	r19, 0xFF	; 255
     e38:	fc 01       	movw	r30, r24
     e3a:	37 87       	std	Z+15, r19	; 0x0f
     e3c:	26 87       	std	Z+14, r18	; 0x0e
     e3e:	89 81       	ldd	r24, Y+1	; 0x01
     e40:	9a 81       	ldd	r25, Y+2	; 0x02
     e42:	21 e0       	ldi	r18, 0x01	; 1
     e44:	30 e0       	ldi	r19, 0x00	; 0
     e46:	fc 01       	movw	r30, r24
     e48:	31 8b       	std	Z+17, r19	; 0x11
     e4a:	20 8b       	std	Z+16, r18	; 0x10
     e4c:	89 81       	ldd	r24, Y+1	; 0x01
     e4e:	9a 81       	ldd	r25, Y+2	; 0x02
     e50:	2f ef       	ldi	r18, 0xFF	; 255
     e52:	3f ef       	ldi	r19, 0xFF	; 255
     e54:	fc 01       	movw	r30, r24
     e56:	33 8b       	std	Z+19, r19	; 0x13
     e58:	22 8b       	std	Z+18, r18	; 0x12
     e5a:	89 81       	ldd	r24, Y+1	; 0x01
     e5c:	9a 81       	ldd	r25, Y+2	; 0x02
     e5e:	26 96       	adiw	r28, 0x06	; 6
     e60:	0f b6       	in	r0, 0x3f	; 63
     e62:	f8 94       	cli
     e64:	de bf       	out	0x3e, r29	; 62
     e66:	0f be       	out	0x3f, r0	; 63
     e68:	cd bf       	out	0x3d, r28	; 61
     e6a:	df 91       	pop	r29
     e6c:	cf 91       	pop	r28
     e6e:	08 95       	ret

00000e70 <Z>:
     e70:	cf 93       	push	r28
     e72:	df 93       	push	r29
     e74:	00 d0       	rcall	.+0      	; 0xe76 <Z+0x6>
     e76:	00 d0       	rcall	.+0      	; 0xe78 <Z+0x8>
     e78:	00 d0       	rcall	.+0      	; 0xe7a <Z+0xa>
     e7a:	cd b7       	in	r28, 0x3d	; 61
     e7c:	de b7       	in	r29, 0x3e	; 62
     e7e:	9a 83       	std	Y+2, r25	; 0x02
     e80:	89 83       	std	Y+1, r24	; 0x01
     e82:	4b 83       	std	Y+3, r20	; 0x03
     e84:	5c 83       	std	Y+4, r21	; 0x04
     e86:	6d 83       	std	Y+5, r22	; 0x05
     e88:	7e 83       	std	Y+6, r23	; 0x06
     e8a:	29 81       	ldd	r18, Y+1	; 0x01
     e8c:	3a 81       	ldd	r19, Y+2	; 0x02
     e8e:	8b 81       	ldd	r24, Y+3	; 0x03
     e90:	9c 81       	ldd	r25, Y+4	; 0x04
     e92:	ad 81       	ldd	r26, Y+5	; 0x05
     e94:	be 81       	ldd	r27, Y+6	; 0x06
     e96:	f9 01       	movw	r30, r18
     e98:	80 83       	st	Z, r24
     e9a:	91 83       	std	Z+1, r25	; 0x01
     e9c:	a2 83       	std	Z+2, r26	; 0x02
     e9e:	b3 83       	std	Z+3, r27	; 0x03
     ea0:	89 81       	ldd	r24, Y+1	; 0x01
     ea2:	9a 81       	ldd	r25, Y+2	; 0x02
     ea4:	2f ef       	ldi	r18, 0xFF	; 255
     ea6:	3f ef       	ldi	r19, 0xFF	; 255
     ea8:	fc 01       	movw	r30, r24
     eaa:	35 83       	std	Z+5, r19	; 0x05
     eac:	24 83       	std	Z+4, r18	; 0x04
     eae:	89 81       	ldd	r24, Y+1	; 0x01
     eb0:	9a 81       	ldd	r25, Y+2	; 0x02
     eb2:	fc 01       	movw	r30, r24
     eb4:	17 82       	std	Z+7, r1	; 0x07
     eb6:	16 82       	std	Z+6, r1	; 0x06
     eb8:	89 81       	ldd	r24, Y+1	; 0x01
     eba:	9a 81       	ldd	r25, Y+2	; 0x02
     ebc:	fc 01       	movw	r30, r24
     ebe:	11 86       	std	Z+9, r1	; 0x09
     ec0:	10 86       	std	Z+8, r1	; 0x08
     ec2:	89 81       	ldd	r24, Y+1	; 0x01
     ec4:	9a 81       	ldd	r25, Y+2	; 0x02
     ec6:	fc 01       	movw	r30, r24
     ec8:	13 86       	std	Z+11, r1	; 0x0b
     eca:	12 86       	std	Z+10, r1	; 0x0a
     ecc:	89 81       	ldd	r24, Y+1	; 0x01
     ece:	9a 81       	ldd	r25, Y+2	; 0x02
     ed0:	fc 01       	movw	r30, r24
     ed2:	15 86       	std	Z+13, r1	; 0x0d
     ed4:	14 86       	std	Z+12, r1	; 0x0c
     ed6:	89 81       	ldd	r24, Y+1	; 0x01
     ed8:	9a 81       	ldd	r25, Y+2	; 0x02
     eda:	21 e0       	ldi	r18, 0x01	; 1
     edc:	30 e0       	ldi	r19, 0x00	; 0
     ede:	fc 01       	movw	r30, r24
     ee0:	37 87       	std	Z+15, r19	; 0x0f
     ee2:	26 87       	std	Z+14, r18	; 0x0e
     ee4:	89 81       	ldd	r24, Y+1	; 0x01
     ee6:	9a 81       	ldd	r25, Y+2	; 0x02
     ee8:	21 e0       	ldi	r18, 0x01	; 1
     eea:	30 e0       	ldi	r19, 0x00	; 0
     eec:	fc 01       	movw	r30, r24
     eee:	31 8b       	std	Z+17, r19	; 0x11
     ef0:	20 8b       	std	Z+16, r18	; 0x10
     ef2:	89 81       	ldd	r24, Y+1	; 0x01
     ef4:	9a 81       	ldd	r25, Y+2	; 0x02
     ef6:	21 e0       	ldi	r18, 0x01	; 1
     ef8:	30 e0       	ldi	r19, 0x00	; 0
     efa:	fc 01       	movw	r30, r24
     efc:	33 8b       	std	Z+19, r19	; 0x13
     efe:	22 8b       	std	Z+18, r18	; 0x12
     f00:	89 81       	ldd	r24, Y+1	; 0x01
     f02:	9a 81       	ldd	r25, Y+2	; 0x02
     f04:	26 96       	adiw	r28, 0x06	; 6
     f06:	0f b6       	in	r0, 0x3f	; 63
     f08:	f8 94       	cli
     f0a:	de bf       	out	0x3e, r29	; 62
     f0c:	0f be       	out	0x3f, r0	; 63
     f0e:	cd bf       	out	0x3d, r28	; 61
     f10:	df 91       	pop	r29
     f12:	cf 91       	pop	r28
     f14:	08 95       	ret

00000f16 <I>:
     f16:	cf 93       	push	r28
     f18:	df 93       	push	r29
     f1a:	00 d0       	rcall	.+0      	; 0xf1c <I+0x6>
     f1c:	00 d0       	rcall	.+0      	; 0xf1e <I+0x8>
     f1e:	00 d0       	rcall	.+0      	; 0xf20 <I+0xa>
     f20:	cd b7       	in	r28, 0x3d	; 61
     f22:	de b7       	in	r29, 0x3e	; 62
     f24:	9a 83       	std	Y+2, r25	; 0x02
     f26:	89 83       	std	Y+1, r24	; 0x01
     f28:	4b 83       	std	Y+3, r20	; 0x03
     f2a:	5c 83       	std	Y+4, r21	; 0x04
     f2c:	6d 83       	std	Y+5, r22	; 0x05
     f2e:	7e 83       	std	Y+6, r23	; 0x06
     f30:	29 81       	ldd	r18, Y+1	; 0x01
     f32:	3a 81       	ldd	r19, Y+2	; 0x02
     f34:	8b 81       	ldd	r24, Y+3	; 0x03
     f36:	9c 81       	ldd	r25, Y+4	; 0x04
     f38:	ad 81       	ldd	r26, Y+5	; 0x05
     f3a:	be 81       	ldd	r27, Y+6	; 0x06
     f3c:	f9 01       	movw	r30, r18
     f3e:	80 83       	st	Z, r24
     f40:	91 83       	std	Z+1, r25	; 0x01
     f42:	a2 83       	std	Z+2, r26	; 0x02
     f44:	b3 83       	std	Z+3, r27	; 0x03
     f46:	89 81       	ldd	r24, Y+1	; 0x01
     f48:	9a 81       	ldd	r25, Y+2	; 0x02
     f4a:	fc 01       	movw	r30, r24
     f4c:	15 82       	std	Z+5, r1	; 0x05
     f4e:	14 82       	std	Z+4, r1	; 0x04
     f50:	89 81       	ldd	r24, Y+1	; 0x01
     f52:	9a 81       	ldd	r25, Y+2	; 0x02
     f54:	2f ef       	ldi	r18, 0xFF	; 255
     f56:	3f ef       	ldi	r19, 0xFF	; 255
     f58:	fc 01       	movw	r30, r24
     f5a:	37 83       	std	Z+7, r19	; 0x07
     f5c:	26 83       	std	Z+6, r18	; 0x06
     f5e:	89 81       	ldd	r24, Y+1	; 0x01
     f60:	9a 81       	ldd	r25, Y+2	; 0x02
     f62:	fc 01       	movw	r30, r24
     f64:	11 86       	std	Z+9, r1	; 0x09
     f66:	10 86       	std	Z+8, r1	; 0x08
     f68:	89 81       	ldd	r24, Y+1	; 0x01
     f6a:	9a 81       	ldd	r25, Y+2	; 0x02
     f6c:	fc 01       	movw	r30, r24
     f6e:	13 86       	std	Z+11, r1	; 0x0b
     f70:	12 86       	std	Z+10, r1	; 0x0a
     f72:	89 81       	ldd	r24, Y+1	; 0x01
     f74:	9a 81       	ldd	r25, Y+2	; 0x02
     f76:	fc 01       	movw	r30, r24
     f78:	15 86       	std	Z+13, r1	; 0x0d
     f7a:	14 86       	std	Z+12, r1	; 0x0c
     f7c:	89 81       	ldd	r24, Y+1	; 0x01
     f7e:	9a 81       	ldd	r25, Y+2	; 0x02
     f80:	21 e0       	ldi	r18, 0x01	; 1
     f82:	30 e0       	ldi	r19, 0x00	; 0
     f84:	fc 01       	movw	r30, r24
     f86:	37 87       	std	Z+15, r19	; 0x0f
     f88:	26 87       	std	Z+14, r18	; 0x0e
     f8a:	89 81       	ldd	r24, Y+1	; 0x01
     f8c:	9a 81       	ldd	r25, Y+2	; 0x02
     f8e:	fc 01       	movw	r30, r24
     f90:	11 8a       	std	Z+17, r1	; 0x11
     f92:	10 8a       	std	Z+16, r1	; 0x10
     f94:	89 81       	ldd	r24, Y+1	; 0x01
     f96:	9a 81       	ldd	r25, Y+2	; 0x02
     f98:	22 e0       	ldi	r18, 0x02	; 2
     f9a:	30 e0       	ldi	r19, 0x00	; 0
     f9c:	fc 01       	movw	r30, r24
     f9e:	33 8b       	std	Z+19, r19	; 0x13
     fa0:	22 8b       	std	Z+18, r18	; 0x12
     fa2:	89 81       	ldd	r24, Y+1	; 0x01
     fa4:	9a 81       	ldd	r25, Y+2	; 0x02
     fa6:	26 96       	adiw	r28, 0x06	; 6
     fa8:	0f b6       	in	r0, 0x3f	; 63
     faa:	f8 94       	cli
     fac:	de bf       	out	0x3e, r29	; 62
     fae:	0f be       	out	0x3f, r0	; 63
     fb0:	cd bf       	out	0x3d, r28	; 61
     fb2:	df 91       	pop	r29
     fb4:	cf 91       	pop	r28
     fb6:	08 95       	ret

00000fb8 <O>:
     fb8:	cf 93       	push	r28
     fba:	df 93       	push	r29
     fbc:	00 d0       	rcall	.+0      	; 0xfbe <O+0x6>
     fbe:	00 d0       	rcall	.+0      	; 0xfc0 <O+0x8>
     fc0:	00 d0       	rcall	.+0      	; 0xfc2 <O+0xa>
     fc2:	cd b7       	in	r28, 0x3d	; 61
     fc4:	de b7       	in	r29, 0x3e	; 62
     fc6:	9a 83       	std	Y+2, r25	; 0x02
     fc8:	89 83       	std	Y+1, r24	; 0x01
     fca:	4b 83       	std	Y+3, r20	; 0x03
     fcc:	5c 83       	std	Y+4, r21	; 0x04
     fce:	6d 83       	std	Y+5, r22	; 0x05
     fd0:	7e 83       	std	Y+6, r23	; 0x06
     fd2:	29 81       	ldd	r18, Y+1	; 0x01
     fd4:	3a 81       	ldd	r19, Y+2	; 0x02
     fd6:	8b 81       	ldd	r24, Y+3	; 0x03
     fd8:	9c 81       	ldd	r25, Y+4	; 0x04
     fda:	ad 81       	ldd	r26, Y+5	; 0x05
     fdc:	be 81       	ldd	r27, Y+6	; 0x06
     fde:	f9 01       	movw	r30, r18
     fe0:	80 83       	st	Z, r24
     fe2:	91 83       	std	Z+1, r25	; 0x01
     fe4:	a2 83       	std	Z+2, r26	; 0x02
     fe6:	b3 83       	std	Z+3, r27	; 0x03
     fe8:	89 81       	ldd	r24, Y+1	; 0x01
     fea:	9a 81       	ldd	r25, Y+2	; 0x02
     fec:	fc 01       	movw	r30, r24
     fee:	15 82       	std	Z+5, r1	; 0x05
     ff0:	14 82       	std	Z+4, r1	; 0x04
     ff2:	89 81       	ldd	r24, Y+1	; 0x01
     ff4:	9a 81       	ldd	r25, Y+2	; 0x02
     ff6:	2f ef       	ldi	r18, 0xFF	; 255
     ff8:	3f ef       	ldi	r19, 0xFF	; 255
     ffa:	fc 01       	movw	r30, r24
     ffc:	37 83       	std	Z+7, r19	; 0x07
     ffe:	26 83       	std	Z+6, r18	; 0x06
    1000:	89 81       	ldd	r24, Y+1	; 0x01
    1002:	9a 81       	ldd	r25, Y+2	; 0x02
    1004:	fc 01       	movw	r30, r24
    1006:	11 86       	std	Z+9, r1	; 0x09
    1008:	10 86       	std	Z+8, r1	; 0x08
    100a:	89 81       	ldd	r24, Y+1	; 0x01
    100c:	9a 81       	ldd	r25, Y+2	; 0x02
    100e:	fc 01       	movw	r30, r24
    1010:	13 86       	std	Z+11, r1	; 0x0b
    1012:	12 86       	std	Z+10, r1	; 0x0a
    1014:	89 81       	ldd	r24, Y+1	; 0x01
    1016:	9a 81       	ldd	r25, Y+2	; 0x02
    1018:	21 e0       	ldi	r18, 0x01	; 1
    101a:	30 e0       	ldi	r19, 0x00	; 0
    101c:	fc 01       	movw	r30, r24
    101e:	35 87       	std	Z+13, r19	; 0x0d
    1020:	24 87       	std	Z+12, r18	; 0x0c
    1022:	89 81       	ldd	r24, Y+1	; 0x01
    1024:	9a 81       	ldd	r25, Y+2	; 0x02
    1026:	fc 01       	movw	r30, r24
    1028:	17 86       	std	Z+15, r1	; 0x0f
    102a:	16 86       	std	Z+14, r1	; 0x0e
    102c:	89 81       	ldd	r24, Y+1	; 0x01
    102e:	9a 81       	ldd	r25, Y+2	; 0x02
    1030:	21 e0       	ldi	r18, 0x01	; 1
    1032:	30 e0       	ldi	r19, 0x00	; 0
    1034:	fc 01       	movw	r30, r24
    1036:	31 8b       	std	Z+17, r19	; 0x11
    1038:	20 8b       	std	Z+16, r18	; 0x10
    103a:	89 81       	ldd	r24, Y+1	; 0x01
    103c:	9a 81       	ldd	r25, Y+2	; 0x02
    103e:	2f ef       	ldi	r18, 0xFF	; 255
    1040:	3f ef       	ldi	r19, 0xFF	; 255
    1042:	fc 01       	movw	r30, r24
    1044:	33 8b       	std	Z+19, r19	; 0x13
    1046:	22 8b       	std	Z+18, r18	; 0x12
    1048:	89 81       	ldd	r24, Y+1	; 0x01
    104a:	9a 81       	ldd	r25, Y+2	; 0x02
    104c:	26 96       	adiw	r28, 0x06	; 6
    104e:	0f b6       	in	r0, 0x3f	; 63
    1050:	f8 94       	cli
    1052:	de bf       	out	0x3e, r29	; 62
    1054:	0f be       	out	0x3f, r0	; 63
    1056:	cd bf       	out	0x3d, r28	; 61
    1058:	df 91       	pop	r29
    105a:	cf 91       	pop	r28
    105c:	08 95       	ret

0000105e <getTile>:
    105e:	cf 93       	push	r28
    1060:	df 93       	push	r29
    1062:	00 d0       	rcall	.+0      	; 0x1064 <getTile+0x6>
    1064:	00 d0       	rcall	.+0      	; 0x1066 <getTile+0x8>
    1066:	cd b7       	in	r28, 0x3d	; 61
    1068:	de b7       	in	r29, 0x3e	; 62
    106a:	9a 83       	std	Y+2, r25	; 0x02
    106c:	89 83       	std	Y+1, r24	; 0x01
    106e:	7c 83       	std	Y+4, r23	; 0x04
    1070:	6b 83       	std	Y+3, r22	; 0x03
    1072:	8b 81       	ldd	r24, Y+3	; 0x03
    1074:	9c 81       	ldd	r25, Y+4	; 0x04
    1076:	01 96       	adiw	r24, 0x01	; 1
    1078:	88 0f       	add	r24, r24
    107a:	99 1f       	adc	r25, r25
    107c:	88 0f       	add	r24, r24
    107e:	99 1f       	adc	r25, r25
    1080:	29 81       	ldd	r18, Y+1	; 0x01
    1082:	3a 81       	ldd	r19, Y+2	; 0x02
    1084:	28 0f       	add	r18, r24
    1086:	39 1f       	adc	r19, r25
    1088:	89 81       	ldd	r24, Y+1	; 0x01
    108a:	9a 81       	ldd	r25, Y+2	; 0x02
    108c:	b9 01       	movw	r22, r18
    108e:	0c de       	rcall	.-1000   	; 0xca8 <add>
    1090:	dc 01       	movw	r26, r24
    1092:	cb 01       	movw	r24, r22
    1094:	bc 01       	movw	r22, r24
    1096:	cd 01       	movw	r24, r26
    1098:	0f 90       	pop	r0
    109a:	0f 90       	pop	r0
    109c:	0f 90       	pop	r0
    109e:	0f 90       	pop	r0
    10a0:	df 91       	pop	r29
    10a2:	cf 91       	pop	r28
    10a4:	08 95       	ret

000010a6 <down>:
    10a6:	cf 93       	push	r28
    10a8:	df 93       	push	r29
    10aa:	00 d0       	rcall	.+0      	; 0x10ac <down+0x6>
    10ac:	cd b7       	in	r28, 0x3d	; 61
    10ae:	de b7       	in	r29, 0x3e	; 62
    10b0:	9a 83       	std	Y+2, r25	; 0x02
    10b2:	89 83       	std	Y+1, r24	; 0x01
    10b4:	89 81       	ldd	r24, Y+1	; 0x01
    10b6:	9a 81       	ldd	r25, Y+2	; 0x02
    10b8:	fc 01       	movw	r30, r24
    10ba:	82 81       	ldd	r24, Z+2	; 0x02
    10bc:	93 81       	ldd	r25, Z+3	; 0x03
    10be:	01 97       	sbiw	r24, 0x01	; 1
    10c0:	9c 01       	movw	r18, r24
    10c2:	89 81       	ldd	r24, Y+1	; 0x01
    10c4:	9a 81       	ldd	r25, Y+2	; 0x02
    10c6:	fc 01       	movw	r30, r24
    10c8:	33 83       	std	Z+3, r19	; 0x03
    10ca:	22 83       	std	Z+2, r18	; 0x02
    10cc:	00 00       	nop
    10ce:	0f 90       	pop	r0
    10d0:	0f 90       	pop	r0
    10d2:	df 91       	pop	r29
    10d4:	cf 91       	pop	r28
    10d6:	08 95       	ret

000010d8 <right>:
    10d8:	cf 93       	push	r28
    10da:	df 93       	push	r29
    10dc:	00 d0       	rcall	.+0      	; 0x10de <right+0x6>
    10de:	cd b7       	in	r28, 0x3d	; 61
    10e0:	de b7       	in	r29, 0x3e	; 62
    10e2:	9a 83       	std	Y+2, r25	; 0x02
    10e4:	89 83       	std	Y+1, r24	; 0x01
    10e6:	89 81       	ldd	r24, Y+1	; 0x01
    10e8:	9a 81       	ldd	r25, Y+2	; 0x02
    10ea:	fc 01       	movw	r30, r24
    10ec:	80 81       	ld	r24, Z
    10ee:	91 81       	ldd	r25, Z+1	; 0x01
    10f0:	01 96       	adiw	r24, 0x01	; 1
    10f2:	9c 01       	movw	r18, r24
    10f4:	89 81       	ldd	r24, Y+1	; 0x01
    10f6:	9a 81       	ldd	r25, Y+2	; 0x02
    10f8:	fc 01       	movw	r30, r24
    10fa:	31 83       	std	Z+1, r19	; 0x01
    10fc:	20 83       	st	Z, r18
    10fe:	00 00       	nop
    1100:	0f 90       	pop	r0
    1102:	0f 90       	pop	r0
    1104:	df 91       	pop	r29
    1106:	cf 91       	pop	r28
    1108:	08 95       	ret

0000110a <left>:
    110a:	cf 93       	push	r28
    110c:	df 93       	push	r29
    110e:	00 d0       	rcall	.+0      	; 0x1110 <left+0x6>
    1110:	cd b7       	in	r28, 0x3d	; 61
    1112:	de b7       	in	r29, 0x3e	; 62
    1114:	9a 83       	std	Y+2, r25	; 0x02
    1116:	89 83       	std	Y+1, r24	; 0x01
    1118:	89 81       	ldd	r24, Y+1	; 0x01
    111a:	9a 81       	ldd	r25, Y+2	; 0x02
    111c:	fc 01       	movw	r30, r24
    111e:	80 81       	ld	r24, Z
    1120:	91 81       	ldd	r25, Z+1	; 0x01
    1122:	01 97       	sbiw	r24, 0x01	; 1
    1124:	9c 01       	movw	r18, r24
    1126:	89 81       	ldd	r24, Y+1	; 0x01
    1128:	9a 81       	ldd	r25, Y+2	; 0x02
    112a:	fc 01       	movw	r30, r24
    112c:	31 83       	std	Z+1, r19	; 0x01
    112e:	20 83       	st	Z, r18
    1130:	00 00       	nop
    1132:	0f 90       	pop	r0
    1134:	0f 90       	pop	r0
    1136:	df 91       	pop	r29
    1138:	cf 91       	pop	r28
    113a:	08 95       	ret

0000113c <mirror>:
    113c:	cf 93       	push	r28
    113e:	df 93       	push	r29
    1140:	00 d0       	rcall	.+0      	; 0x1142 <mirror+0x6>
    1142:	00 d0       	rcall	.+0      	; 0x1144 <mirror+0x8>
    1144:	cd b7       	in	r28, 0x3d	; 61
    1146:	de b7       	in	r29, 0x3e	; 62
    1148:	9c 83       	std	Y+4, r25	; 0x04
    114a:	8b 83       	std	Y+3, r24	; 0x03
    114c:	1a 82       	std	Y+2, r1	; 0x02
    114e:	19 82       	std	Y+1, r1	; 0x01
    1150:	25 c0       	rjmp	.+74     	; 0x119c <mirror+0x60>
    1152:	2b 81       	ldd	r18, Y+3	; 0x03
    1154:	3c 81       	ldd	r19, Y+4	; 0x04
    1156:	89 81       	ldd	r24, Y+1	; 0x01
    1158:	9a 81       	ldd	r25, Y+2	; 0x02
    115a:	01 96       	adiw	r24, 0x01	; 1
    115c:	88 0f       	add	r24, r24
    115e:	99 1f       	adc	r25, r25
    1160:	88 0f       	add	r24, r24
    1162:	99 1f       	adc	r25, r25
    1164:	82 0f       	add	r24, r18
    1166:	93 1f       	adc	r25, r19
    1168:	fc 01       	movw	r30, r24
    116a:	80 81       	ld	r24, Z
    116c:	91 81       	ldd	r25, Z+1	; 0x01
    116e:	22 27       	eor	r18, r18
    1170:	33 27       	eor	r19, r19
    1172:	28 1b       	sub	r18, r24
    1174:	39 0b       	sbc	r19, r25
    1176:	4b 81       	ldd	r20, Y+3	; 0x03
    1178:	5c 81       	ldd	r21, Y+4	; 0x04
    117a:	89 81       	ldd	r24, Y+1	; 0x01
    117c:	9a 81       	ldd	r25, Y+2	; 0x02
    117e:	01 96       	adiw	r24, 0x01	; 1
    1180:	88 0f       	add	r24, r24
    1182:	99 1f       	adc	r25, r25
    1184:	88 0f       	add	r24, r24
    1186:	99 1f       	adc	r25, r25
    1188:	84 0f       	add	r24, r20
    118a:	95 1f       	adc	r25, r21
    118c:	fc 01       	movw	r30, r24
    118e:	31 83       	std	Z+1, r19	; 0x01
    1190:	20 83       	st	Z, r18
    1192:	89 81       	ldd	r24, Y+1	; 0x01
    1194:	9a 81       	ldd	r25, Y+2	; 0x02
    1196:	01 96       	adiw	r24, 0x01	; 1
    1198:	9a 83       	std	Y+2, r25	; 0x02
    119a:	89 83       	std	Y+1, r24	; 0x01
    119c:	89 81       	ldd	r24, Y+1	; 0x01
    119e:	9a 81       	ldd	r25, Y+2	; 0x02
    11a0:	04 97       	sbiw	r24, 0x04	; 4
    11a2:	b8 f2       	brcs	.-82     	; 0x1152 <mirror+0x16>
    11a4:	00 00       	nop
    11a6:	0f 90       	pop	r0
    11a8:	0f 90       	pop	r0
    11aa:	0f 90       	pop	r0
    11ac:	0f 90       	pop	r0
    11ae:	df 91       	pop	r29
    11b0:	cf 91       	pop	r28
    11b2:	08 95       	ret

000011b4 <turnCCW>:
    11b4:	cf 93       	push	r28
    11b6:	df 93       	push	r29
    11b8:	00 d0       	rcall	.+0      	; 0x11ba <turnCCW+0x6>
    11ba:	00 d0       	rcall	.+0      	; 0x11bc <turnCCW+0x8>
    11bc:	cd b7       	in	r28, 0x3d	; 61
    11be:	de b7       	in	r29, 0x3e	; 62
    11c0:	9c 83       	std	Y+4, r25	; 0x04
    11c2:	8b 83       	std	Y+3, r24	; 0x03
    11c4:	1a 82       	std	Y+2, r1	; 0x02
    11c6:	19 82       	std	Y+1, r1	; 0x01
    11c8:	11 c0       	rjmp	.+34     	; 0x11ec <turnCCW+0x38>
    11ca:	89 81       	ldd	r24, Y+1	; 0x01
    11cc:	9a 81       	ldd	r25, Y+2	; 0x02
    11ce:	01 96       	adiw	r24, 0x01	; 1
    11d0:	88 0f       	add	r24, r24
    11d2:	99 1f       	adc	r25, r25
    11d4:	88 0f       	add	r24, r24
    11d6:	99 1f       	adc	r25, r25
    11d8:	2b 81       	ldd	r18, Y+3	; 0x03
    11da:	3c 81       	ldd	r19, Y+4	; 0x04
    11dc:	82 0f       	add	r24, r18
    11de:	93 1f       	adc	r25, r19
    11e0:	9c dd       	rcall	.-1224   	; 0xd1a <pivotCCW>
    11e2:	89 81       	ldd	r24, Y+1	; 0x01
    11e4:	9a 81       	ldd	r25, Y+2	; 0x02
    11e6:	01 96       	adiw	r24, 0x01	; 1
    11e8:	9a 83       	std	Y+2, r25	; 0x02
    11ea:	89 83       	std	Y+1, r24	; 0x01
    11ec:	89 81       	ldd	r24, Y+1	; 0x01
    11ee:	9a 81       	ldd	r25, Y+2	; 0x02
    11f0:	04 97       	sbiw	r24, 0x04	; 4
    11f2:	58 f3       	brcs	.-42     	; 0x11ca <turnCCW+0x16>
    11f4:	00 00       	nop
    11f6:	0f 90       	pop	r0
    11f8:	0f 90       	pop	r0
    11fa:	0f 90       	pop	r0
    11fc:	0f 90       	pop	r0
    11fe:	df 91       	pop	r29
    1200:	cf 91       	pop	r28
    1202:	08 95       	ret

00001204 <turnCW>:
    1204:	cf 93       	push	r28
    1206:	df 93       	push	r29
    1208:	00 d0       	rcall	.+0      	; 0x120a <turnCW+0x6>
    120a:	00 d0       	rcall	.+0      	; 0x120c <turnCW+0x8>
    120c:	cd b7       	in	r28, 0x3d	; 61
    120e:	de b7       	in	r29, 0x3e	; 62
    1210:	9c 83       	std	Y+4, r25	; 0x04
    1212:	8b 83       	std	Y+3, r24	; 0x03
    1214:	1a 82       	std	Y+2, r1	; 0x02
    1216:	19 82       	std	Y+1, r1	; 0x01
    1218:	11 c0       	rjmp	.+34     	; 0x123c <turnCW+0x38>
    121a:	89 81       	ldd	r24, Y+1	; 0x01
    121c:	9a 81       	ldd	r25, Y+2	; 0x02
    121e:	01 96       	adiw	r24, 0x01	; 1
    1220:	88 0f       	add	r24, r24
    1222:	99 1f       	adc	r25, r25
    1224:	88 0f       	add	r24, r24
    1226:	99 1f       	adc	r25, r25
    1228:	2b 81       	ldd	r18, Y+3	; 0x03
    122a:	3c 81       	ldd	r19, Y+4	; 0x04
    122c:	82 0f       	add	r24, r18
    122e:	93 1f       	adc	r25, r19
    1230:	a0 dd       	rcall	.-1216   	; 0xd72 <pivotCW>
    1232:	89 81       	ldd	r24, Y+1	; 0x01
    1234:	9a 81       	ldd	r25, Y+2	; 0x02
    1236:	01 96       	adiw	r24, 0x01	; 1
    1238:	9a 83       	std	Y+2, r25	; 0x02
    123a:	89 83       	std	Y+1, r24	; 0x01
    123c:	89 81       	ldd	r24, Y+1	; 0x01
    123e:	9a 81       	ldd	r25, Y+2	; 0x02
    1240:	04 97       	sbiw	r24, 0x04	; 4
    1242:	58 f3       	brcs	.-42     	; 0x121a <turnCW+0x16>
    1244:	00 00       	nop
    1246:	0f 90       	pop	r0
    1248:	0f 90       	pop	r0
    124a:	0f 90       	pop	r0
    124c:	0f 90       	pop	r0
    124e:	df 91       	pop	r29
    1250:	cf 91       	pop	r28
    1252:	08 95       	ret

00001254 <CreateTetra>:
    1254:	cf 93       	push	r28
    1256:	df 93       	push	r29
    1258:	cd b7       	in	r28, 0x3d	; 61
    125a:	de b7       	in	r29, 0x3e	; 62
    125c:	af 97       	sbiw	r28, 0x2f	; 47
    125e:	0f b6       	in	r0, 0x3f	; 63
    1260:	f8 94       	cli
    1262:	de bf       	out	0x3e, r29	; 62
    1264:	0f be       	out	0x3f, r0	; 63
    1266:	cd bf       	out	0x3d, r28	; 61
    1268:	9b 8f       	std	Y+27, r25	; 0x1b
    126a:	8a 8f       	std	Y+26, r24	; 0x1a
    126c:	0e 94 06 15 	call	0x2a0c	; 0x2a0c <rand>
    1270:	87 70       	andi	r24, 0x07	; 7
    1272:	90 78       	andi	r25, 0x80	; 128
    1274:	99 23       	and	r25, r25
    1276:	24 f4       	brge	.+8      	; 0x1280 <CreateTetra+0x2c>
    1278:	01 97       	sbiw	r24, 0x01	; 1
    127a:	88 6f       	ori	r24, 0xF8	; 248
    127c:	9f 6f       	ori	r25, 0xFF	; 255
    127e:	01 96       	adiw	r24, 0x01	; 1
    1280:	8e 5f       	subi	r24, 0xFE	; 254
    1282:	89 83       	std	Y+1, r24	; 0x01
    1284:	89 81       	ldd	r24, Y+1	; 0x01
    1286:	88 2f       	mov	r24, r24
    1288:	90 e0       	ldi	r25, 0x00	; 0
    128a:	9b 83       	std	Y+3, r25	; 0x03
    128c:	8a 83       	std	Y+2, r24	; 0x02
    128e:	87 e1       	ldi	r24, 0x17	; 23
    1290:	90 e0       	ldi	r25, 0x00	; 0
    1292:	9d 83       	std	Y+5, r25	; 0x05
    1294:	8c 83       	std	Y+4, r24	; 0x04
    1296:	0e 94 06 15 	call	0x2a0c	; 0x2a0c <rand>
    129a:	83 70       	andi	r24, 0x03	; 3
    129c:	90 78       	andi	r25, 0x80	; 128
    129e:	99 23       	and	r25, r25
    12a0:	24 f4       	brge	.+8      	; 0x12aa <CreateTetra+0x56>
    12a2:	01 97       	sbiw	r24, 0x01	; 1
    12a4:	8c 6f       	ori	r24, 0xFC	; 252
    12a6:	9f 6f       	ori	r25, 0xFF	; 255
    12a8:	01 96       	adiw	r24, 0x01	; 1
    12aa:	81 30       	cpi	r24, 0x01	; 1
    12ac:	91 05       	cpc	r25, r1
    12ae:	d9 f0       	breq	.+54     	; 0x12e6 <CreateTetra+0x92>
    12b0:	82 30       	cpi	r24, 0x02	; 2
    12b2:	91 05       	cpc	r25, r1
    12b4:	69 f1       	breq	.+90     	; 0x1310 <CreateTetra+0xbc>
    12b6:	89 2b       	or	r24, r25
    12b8:	09 f0       	breq	.+2      	; 0x12bc <CreateTetra+0x68>
    12ba:	3f c0       	rjmp	.+126    	; 0x133a <CreateTetra+0xe6>
    12bc:	9e 01       	movw	r18, r28
    12be:	24 5e       	subi	r18, 0xE4	; 228
    12c0:	3f 4f       	sbci	r19, 0xFF	; 255
    12c2:	8a 81       	ldd	r24, Y+2	; 0x02
    12c4:	9b 81       	ldd	r25, Y+3	; 0x03
    12c6:	ac 81       	ldd	r26, Y+4	; 0x04
    12c8:	bd 81       	ldd	r27, Y+5	; 0x05
    12ca:	ac 01       	movw	r20, r24
    12cc:	bd 01       	movw	r22, r26
    12ce:	c9 01       	movw	r24, r18
    12d0:	7c dd       	rcall	.-1288   	; 0xdca <L>
    12d2:	84 e1       	ldi	r24, 0x14	; 20
    12d4:	fe 01       	movw	r30, r28
    12d6:	7c 96       	adiw	r30, 0x1c	; 28
    12d8:	de 01       	movw	r26, r28
    12da:	16 96       	adiw	r26, 0x06	; 6
    12dc:	01 90       	ld	r0, Z+
    12de:	0d 92       	st	X+, r0
    12e0:	8a 95       	dec	r24
    12e2:	e1 f7       	brne	.-8      	; 0x12dc <CreateTetra+0x88>
    12e4:	3f c0       	rjmp	.+126    	; 0x1364 <CreateTetra+0x110>
    12e6:	9e 01       	movw	r18, r28
    12e8:	24 5e       	subi	r18, 0xE4	; 228
    12ea:	3f 4f       	sbci	r19, 0xFF	; 255
    12ec:	8a 81       	ldd	r24, Y+2	; 0x02
    12ee:	9b 81       	ldd	r25, Y+3	; 0x03
    12f0:	ac 81       	ldd	r26, Y+4	; 0x04
    12f2:	bd 81       	ldd	r27, Y+5	; 0x05
    12f4:	ac 01       	movw	r20, r24
    12f6:	bd 01       	movw	r22, r26
    12f8:	c9 01       	movw	r24, r18
    12fa:	ba dd       	rcall	.-1164   	; 0xe70 <Z>
    12fc:	84 e1       	ldi	r24, 0x14	; 20
    12fe:	fe 01       	movw	r30, r28
    1300:	7c 96       	adiw	r30, 0x1c	; 28
    1302:	de 01       	movw	r26, r28
    1304:	16 96       	adiw	r26, 0x06	; 6
    1306:	01 90       	ld	r0, Z+
    1308:	0d 92       	st	X+, r0
    130a:	8a 95       	dec	r24
    130c:	e1 f7       	brne	.-8      	; 0x1306 <CreateTetra+0xb2>
    130e:	2a c0       	rjmp	.+84     	; 0x1364 <CreateTetra+0x110>
    1310:	9e 01       	movw	r18, r28
    1312:	24 5e       	subi	r18, 0xE4	; 228
    1314:	3f 4f       	sbci	r19, 0xFF	; 255
    1316:	8a 81       	ldd	r24, Y+2	; 0x02
    1318:	9b 81       	ldd	r25, Y+3	; 0x03
    131a:	ac 81       	ldd	r26, Y+4	; 0x04
    131c:	bd 81       	ldd	r27, Y+5	; 0x05
    131e:	ac 01       	movw	r20, r24
    1320:	bd 01       	movw	r22, r26
    1322:	c9 01       	movw	r24, r18
    1324:	f8 dd       	rcall	.-1040   	; 0xf16 <I>
    1326:	84 e1       	ldi	r24, 0x14	; 20
    1328:	fe 01       	movw	r30, r28
    132a:	7c 96       	adiw	r30, 0x1c	; 28
    132c:	de 01       	movw	r26, r28
    132e:	16 96       	adiw	r26, 0x06	; 6
    1330:	01 90       	ld	r0, Z+
    1332:	0d 92       	st	X+, r0
    1334:	8a 95       	dec	r24
    1336:	e1 f7       	brne	.-8      	; 0x1330 <CreateTetra+0xdc>
    1338:	15 c0       	rjmp	.+42     	; 0x1364 <CreateTetra+0x110>
    133a:	9e 01       	movw	r18, r28
    133c:	24 5e       	subi	r18, 0xE4	; 228
    133e:	3f 4f       	sbci	r19, 0xFF	; 255
    1340:	8a 81       	ldd	r24, Y+2	; 0x02
    1342:	9b 81       	ldd	r25, Y+3	; 0x03
    1344:	ac 81       	ldd	r26, Y+4	; 0x04
    1346:	bd 81       	ldd	r27, Y+5	; 0x05
    1348:	ac 01       	movw	r20, r24
    134a:	bd 01       	movw	r22, r26
    134c:	c9 01       	movw	r24, r18
    134e:	34 de       	rcall	.-920    	; 0xfb8 <O>
    1350:	84 e1       	ldi	r24, 0x14	; 20
    1352:	fe 01       	movw	r30, r28
    1354:	7c 96       	adiw	r30, 0x1c	; 28
    1356:	de 01       	movw	r26, r28
    1358:	16 96       	adiw	r26, 0x06	; 6
    135a:	01 90       	ld	r0, Z+
    135c:	0d 92       	st	X+, r0
    135e:	8a 95       	dec	r24
    1360:	e1 f7       	brne	.-8      	; 0x135a <CreateTetra+0x106>
    1362:	00 00       	nop
    1364:	0e 94 06 15 	call	0x2a0c	; 0x2a0c <rand>
    1368:	23 e0       	ldi	r18, 0x03	; 3
    136a:	30 e0       	ldi	r19, 0x00	; 0
    136c:	b9 01       	movw	r22, r18
    136e:	0e 94 8f 14 	call	0x291e	; 0x291e <__divmodhi4>
    1372:	00 97       	sbiw	r24, 0x00	; 0
    1374:	19 f0       	breq	.+6      	; 0x137c <CreateTetra+0x128>
    1376:	01 97       	sbiw	r24, 0x01	; 1
    1378:	29 f0       	breq	.+10     	; 0x1384 <CreateTetra+0x130>
    137a:	08 c0       	rjmp	.+16     	; 0x138c <CreateTetra+0x138>
    137c:	ce 01       	movw	r24, r28
    137e:	06 96       	adiw	r24, 0x06	; 6
    1380:	19 df       	rcall	.-462    	; 0x11b4 <turnCCW>
    1382:	04 c0       	rjmp	.+8      	; 0x138c <CreateTetra+0x138>
    1384:	ce 01       	movw	r24, r28
    1386:	06 96       	adiw	r24, 0x06	; 6
    1388:	3d df       	rcall	.-390    	; 0x1204 <turnCW>
    138a:	00 00       	nop
    138c:	0e 94 06 15 	call	0x2a0c	; 0x2a0c <rand>
    1390:	81 70       	andi	r24, 0x01	; 1
    1392:	99 27       	eor	r25, r25
    1394:	89 2b       	or	r24, r25
    1396:	19 f0       	breq	.+6      	; 0x139e <CreateTetra+0x14a>
    1398:	ce 01       	movw	r24, r28
    139a:	06 96       	adiw	r24, 0x06	; 6
    139c:	cf de       	rcall	.-610    	; 0x113c <mirror>
    139e:	8a 8d       	ldd	r24, Y+26	; 0x1a
    13a0:	9b 8d       	ldd	r25, Y+27	; 0x1b
    13a2:	24 e1       	ldi	r18, 0x14	; 20
    13a4:	fe 01       	movw	r30, r28
    13a6:	36 96       	adiw	r30, 0x06	; 6
    13a8:	dc 01       	movw	r26, r24
    13aa:	01 90       	ld	r0, Z+
    13ac:	0d 92       	st	X+, r0
    13ae:	2a 95       	dec	r18
    13b0:	e1 f7       	brne	.-8      	; 0x13aa <CreateTetra+0x156>
    13b2:	8a 8d       	ldd	r24, Y+26	; 0x1a
    13b4:	9b 8d       	ldd	r25, Y+27	; 0x1b
    13b6:	af 96       	adiw	r28, 0x2f	; 47
    13b8:	0f b6       	in	r0, 0x3f	; 63
    13ba:	f8 94       	cli
    13bc:	de bf       	out	0x3e, r29	; 62
    13be:	0f be       	out	0x3f, r0	; 63
    13c0:	cd bf       	out	0x3d, r28	; 61
    13c2:	df 91       	pop	r29
    13c4:	cf 91       	pop	r28
    13c6:	08 95       	ret

000013c8 <getPoint>:
    13c8:	cf 93       	push	r28
    13ca:	df 93       	push	r29
    13cc:	00 d0       	rcall	.+0      	; 0x13ce <getPoint+0x6>
    13ce:	00 d0       	rcall	.+0      	; 0x13d0 <getPoint+0x8>
    13d0:	cd b7       	in	r28, 0x3d	; 61
    13d2:	de b7       	in	r29, 0x3e	; 62
    13d4:	9a 83       	std	Y+2, r25	; 0x02
    13d6:	89 83       	std	Y+1, r24	; 0x01
    13d8:	7c 83       	std	Y+4, r23	; 0x04
    13da:	6b 83       	std	Y+3, r22	; 0x03
    13dc:	8b 81       	ldd	r24, Y+3	; 0x03
    13de:	9c 81       	ldd	r25, Y+4	; 0x04
    13e0:	fc 01       	movw	r30, r24
    13e2:	60 81       	ld	r22, Z
    13e4:	71 81       	ldd	r23, Z+1	; 0x01
    13e6:	8b 81       	ldd	r24, Y+3	; 0x03
    13e8:	9c 81       	ldd	r25, Y+4	; 0x04
    13ea:	fc 01       	movw	r30, r24
    13ec:	82 81       	ldd	r24, Z+2	; 0x02
    13ee:	93 81       	ldd	r25, Z+3	; 0x03
    13f0:	49 81       	ldd	r20, Y+1	; 0x01
    13f2:	5a 81       	ldd	r21, Y+2	; 0x02
    13f4:	e5 e1       	ldi	r30, 0x15	; 21
    13f6:	e6 9f       	mul	r30, r22
    13f8:	90 01       	movw	r18, r0
    13fa:	e7 9f       	mul	r30, r23
    13fc:	30 0d       	add	r19, r0
    13fe:	11 24       	eor	r1, r1
    1400:	24 0f       	add	r18, r20
    1402:	35 1f       	adc	r19, r21
    1404:	82 0f       	add	r24, r18
    1406:	93 1f       	adc	r25, r19
    1408:	fc 01       	movw	r30, r24
    140a:	80 81       	ld	r24, Z
    140c:	0f 90       	pop	r0
    140e:	0f 90       	pop	r0
    1410:	0f 90       	pop	r0
    1412:	0f 90       	pop	r0
    1414:	df 91       	pop	r29
    1416:	cf 91       	pop	r28
    1418:	08 95       	ret

0000141a <clearRow>:
    141a:	cf 93       	push	r28
    141c:	df 93       	push	r29
    141e:	00 d0       	rcall	.+0      	; 0x1420 <clearRow+0x6>
    1420:	00 d0       	rcall	.+0      	; 0x1422 <clearRow+0x8>
    1422:	00 d0       	rcall	.+0      	; 0x1424 <clearRow+0xa>
    1424:	cd b7       	in	r28, 0x3d	; 61
    1426:	de b7       	in	r29, 0x3e	; 62
    1428:	9c 83       	std	Y+4, r25	; 0x04
    142a:	8b 83       	std	Y+3, r24	; 0x03
    142c:	7e 83       	std	Y+6, r23	; 0x06
    142e:	6d 83       	std	Y+5, r22	; 0x05
    1430:	1a 82       	std	Y+2, r1	; 0x02
    1432:	19 82       	std	Y+1, r1	; 0x01
    1434:	17 c0       	rjmp	.+46     	; 0x1464 <clearRow+0x4a>
    1436:	2b 81       	ldd	r18, Y+3	; 0x03
    1438:	3c 81       	ldd	r19, Y+4	; 0x04
    143a:	49 81       	ldd	r20, Y+1	; 0x01
    143c:	5a 81       	ldd	r21, Y+2	; 0x02
    143e:	65 e1       	ldi	r22, 0x15	; 21
    1440:	64 9f       	mul	r22, r20
    1442:	c0 01       	movw	r24, r0
    1444:	65 9f       	mul	r22, r21
    1446:	90 0d       	add	r25, r0
    1448:	11 24       	eor	r1, r1
    144a:	28 0f       	add	r18, r24
    144c:	39 1f       	adc	r19, r25
    144e:	8d 81       	ldd	r24, Y+5	; 0x05
    1450:	9e 81       	ldd	r25, Y+6	; 0x06
    1452:	82 0f       	add	r24, r18
    1454:	93 1f       	adc	r25, r19
    1456:	fc 01       	movw	r30, r24
    1458:	10 82       	st	Z, r1
    145a:	89 81       	ldd	r24, Y+1	; 0x01
    145c:	9a 81       	ldd	r25, Y+2	; 0x02
    145e:	01 96       	adiw	r24, 0x01	; 1
    1460:	9a 83       	std	Y+2, r25	; 0x02
    1462:	89 83       	std	Y+1, r24	; 0x01
    1464:	89 81       	ldd	r24, Y+1	; 0x01
    1466:	9a 81       	ldd	r25, Y+2	; 0x02
    1468:	0c 97       	sbiw	r24, 0x0c	; 12
    146a:	2c f3       	brlt	.-54     	; 0x1436 <clearRow+0x1c>
    146c:	00 00       	nop
    146e:	26 96       	adiw	r28, 0x06	; 6
    1470:	0f b6       	in	r0, 0x3f	; 63
    1472:	f8 94       	cli
    1474:	de bf       	out	0x3e, r29	; 62
    1476:	0f be       	out	0x3f, r0	; 63
    1478:	cd bf       	out	0x3d, r28	; 61
    147a:	df 91       	pop	r29
    147c:	cf 91       	pop	r28
    147e:	08 95       	ret

00001480 <clear>:
    1480:	cf 93       	push	r28
    1482:	df 93       	push	r29
    1484:	00 d0       	rcall	.+0      	; 0x1486 <clear+0x6>
    1486:	00 d0       	rcall	.+0      	; 0x1488 <clear+0x8>
    1488:	00 d0       	rcall	.+0      	; 0x148a <clear+0xa>
    148a:	cd b7       	in	r28, 0x3d	; 61
    148c:	de b7       	in	r29, 0x3e	; 62
    148e:	9e 83       	std	Y+6, r25	; 0x06
    1490:	8d 83       	std	Y+5, r24	; 0x05
    1492:	1a 82       	std	Y+2, r1	; 0x02
    1494:	19 82       	std	Y+1, r1	; 0x01
    1496:	23 c0       	rjmp	.+70     	; 0x14de <clear+0x5e>
    1498:	1c 82       	std	Y+4, r1	; 0x04
    149a:	1b 82       	std	Y+3, r1	; 0x03
    149c:	17 c0       	rjmp	.+46     	; 0x14cc <clear+0x4c>
    149e:	2d 81       	ldd	r18, Y+5	; 0x05
    14a0:	3e 81       	ldd	r19, Y+6	; 0x06
    14a2:	49 81       	ldd	r20, Y+1	; 0x01
    14a4:	5a 81       	ldd	r21, Y+2	; 0x02
    14a6:	65 e1       	ldi	r22, 0x15	; 21
    14a8:	64 9f       	mul	r22, r20
    14aa:	c0 01       	movw	r24, r0
    14ac:	65 9f       	mul	r22, r21
    14ae:	90 0d       	add	r25, r0
    14b0:	11 24       	eor	r1, r1
    14b2:	28 0f       	add	r18, r24
    14b4:	39 1f       	adc	r19, r25
    14b6:	8b 81       	ldd	r24, Y+3	; 0x03
    14b8:	9c 81       	ldd	r25, Y+4	; 0x04
    14ba:	82 0f       	add	r24, r18
    14bc:	93 1f       	adc	r25, r19
    14be:	fc 01       	movw	r30, r24
    14c0:	10 82       	st	Z, r1
    14c2:	8b 81       	ldd	r24, Y+3	; 0x03
    14c4:	9c 81       	ldd	r25, Y+4	; 0x04
    14c6:	01 96       	adiw	r24, 0x01	; 1
    14c8:	9c 83       	std	Y+4, r25	; 0x04
    14ca:	8b 83       	std	Y+3, r24	; 0x03
    14cc:	8b 81       	ldd	r24, Y+3	; 0x03
    14ce:	9c 81       	ldd	r25, Y+4	; 0x04
    14d0:	45 97       	sbiw	r24, 0x15	; 21
    14d2:	2c f3       	brlt	.-54     	; 0x149e <clear+0x1e>
    14d4:	89 81       	ldd	r24, Y+1	; 0x01
    14d6:	9a 81       	ldd	r25, Y+2	; 0x02
    14d8:	01 96       	adiw	r24, 0x01	; 1
    14da:	9a 83       	std	Y+2, r25	; 0x02
    14dc:	89 83       	std	Y+1, r24	; 0x01
    14de:	89 81       	ldd	r24, Y+1	; 0x01
    14e0:	9a 81       	ldd	r25, Y+2	; 0x02
    14e2:	0c 97       	sbiw	r24, 0x0c	; 12
    14e4:	cc f2       	brlt	.-78     	; 0x1498 <clear+0x18>
    14e6:	00 00       	nop
    14e8:	26 96       	adiw	r28, 0x06	; 6
    14ea:	0f b6       	in	r0, 0x3f	; 63
    14ec:	f8 94       	cli
    14ee:	de bf       	out	0x3e, r29	; 62
    14f0:	0f be       	out	0x3f, r0	; 63
    14f2:	cd bf       	out	0x3d, r28	; 61
    14f4:	df 91       	pop	r29
    14f6:	cf 91       	pop	r28
    14f8:	08 95       	ret

000014fa <fillRow>:
    14fa:	cf 93       	push	r28
    14fc:	df 93       	push	r29
    14fe:	00 d0       	rcall	.+0      	; 0x1500 <fillRow+0x6>
    1500:	00 d0       	rcall	.+0      	; 0x1502 <fillRow+0x8>
    1502:	00 d0       	rcall	.+0      	; 0x1504 <fillRow+0xa>
    1504:	cd b7       	in	r28, 0x3d	; 61
    1506:	de b7       	in	r29, 0x3e	; 62
    1508:	9c 83       	std	Y+4, r25	; 0x04
    150a:	8b 83       	std	Y+3, r24	; 0x03
    150c:	7e 83       	std	Y+6, r23	; 0x06
    150e:	6d 83       	std	Y+5, r22	; 0x05
    1510:	1a 82       	std	Y+2, r1	; 0x02
    1512:	19 82       	std	Y+1, r1	; 0x01
    1514:	18 c0       	rjmp	.+48     	; 0x1546 <fillRow+0x4c>
    1516:	2b 81       	ldd	r18, Y+3	; 0x03
    1518:	3c 81       	ldd	r19, Y+4	; 0x04
    151a:	49 81       	ldd	r20, Y+1	; 0x01
    151c:	5a 81       	ldd	r21, Y+2	; 0x02
    151e:	65 e1       	ldi	r22, 0x15	; 21
    1520:	64 9f       	mul	r22, r20
    1522:	c0 01       	movw	r24, r0
    1524:	65 9f       	mul	r22, r21
    1526:	90 0d       	add	r25, r0
    1528:	11 24       	eor	r1, r1
    152a:	28 0f       	add	r18, r24
    152c:	39 1f       	adc	r19, r25
    152e:	8d 81       	ldd	r24, Y+5	; 0x05
    1530:	9e 81       	ldd	r25, Y+6	; 0x06
    1532:	82 0f       	add	r24, r18
    1534:	93 1f       	adc	r25, r19
    1536:	21 e0       	ldi	r18, 0x01	; 1
    1538:	fc 01       	movw	r30, r24
    153a:	20 83       	st	Z, r18
    153c:	89 81       	ldd	r24, Y+1	; 0x01
    153e:	9a 81       	ldd	r25, Y+2	; 0x02
    1540:	01 96       	adiw	r24, 0x01	; 1
    1542:	9a 83       	std	Y+2, r25	; 0x02
    1544:	89 83       	std	Y+1, r24	; 0x01
    1546:	89 81       	ldd	r24, Y+1	; 0x01
    1548:	9a 81       	ldd	r25, Y+2	; 0x02
    154a:	0c 97       	sbiw	r24, 0x0c	; 12
    154c:	24 f3       	brlt	.-56     	; 0x1516 <fillRow+0x1c>
    154e:	00 00       	nop
    1550:	26 96       	adiw	r28, 0x06	; 6
    1552:	0f b6       	in	r0, 0x3f	; 63
    1554:	f8 94       	cli
    1556:	de bf       	out	0x3e, r29	; 62
    1558:	0f be       	out	0x3f, r0	; 63
    155a:	cd bf       	out	0x3d, r28	; 61
    155c:	df 91       	pop	r29
    155e:	cf 91       	pop	r28
    1560:	08 95       	ret

00001562 <descendRow>:
    1562:	cf 93       	push	r28
    1564:	df 93       	push	r29
    1566:	cd b7       	in	r28, 0x3d	; 61
    1568:	de b7       	in	r29, 0x3e	; 62
    156a:	28 97       	sbiw	r28, 0x08	; 8
    156c:	0f b6       	in	r0, 0x3f	; 63
    156e:	f8 94       	cli
    1570:	de bf       	out	0x3e, r29	; 62
    1572:	0f be       	out	0x3f, r0	; 63
    1574:	cd bf       	out	0x3d, r28	; 61
    1576:	9e 83       	std	Y+6, r25	; 0x06
    1578:	8d 83       	std	Y+5, r24	; 0x05
    157a:	78 87       	std	Y+8, r23	; 0x08
    157c:	6f 83       	std	Y+7, r22	; 0x07
    157e:	8f 81       	ldd	r24, Y+7	; 0x07
    1580:	98 85       	ldd	r25, Y+8	; 0x08
    1582:	9a 83       	std	Y+2, r25	; 0x02
    1584:	89 83       	std	Y+1, r24	; 0x01
    1586:	36 c0       	rjmp	.+108    	; 0x15f4 <descendRow+0x92>
    1588:	1c 82       	std	Y+4, r1	; 0x04
    158a:	1b 82       	std	Y+3, r1	; 0x03
    158c:	2a c0       	rjmp	.+84     	; 0x15e2 <descendRow+0x80>
    158e:	89 81       	ldd	r24, Y+1	; 0x01
    1590:	9a 81       	ldd	r25, Y+2	; 0x02
    1592:	01 96       	adiw	r24, 0x01	; 1
    1594:	4d 81       	ldd	r20, Y+5	; 0x05
    1596:	5e 81       	ldd	r21, Y+6	; 0x06
    1598:	6b 81       	ldd	r22, Y+3	; 0x03
    159a:	7c 81       	ldd	r23, Y+4	; 0x04
    159c:	e5 e1       	ldi	r30, 0x15	; 21
    159e:	e6 9f       	mul	r30, r22
    15a0:	90 01       	movw	r18, r0
    15a2:	e7 9f       	mul	r30, r23
    15a4:	30 0d       	add	r19, r0
    15a6:	11 24       	eor	r1, r1
    15a8:	24 0f       	add	r18, r20
    15aa:	35 1f       	adc	r19, r21
    15ac:	82 0f       	add	r24, r18
    15ae:	93 1f       	adc	r25, r19
    15b0:	fc 01       	movw	r30, r24
    15b2:	60 81       	ld	r22, Z
    15b4:	2d 81       	ldd	r18, Y+5	; 0x05
    15b6:	3e 81       	ldd	r19, Y+6	; 0x06
    15b8:	4b 81       	ldd	r20, Y+3	; 0x03
    15ba:	5c 81       	ldd	r21, Y+4	; 0x04
    15bc:	75 e1       	ldi	r23, 0x15	; 21
    15be:	74 9f       	mul	r23, r20
    15c0:	c0 01       	movw	r24, r0
    15c2:	75 9f       	mul	r23, r21
    15c4:	90 0d       	add	r25, r0
    15c6:	11 24       	eor	r1, r1
    15c8:	28 0f       	add	r18, r24
    15ca:	39 1f       	adc	r19, r25
    15cc:	89 81       	ldd	r24, Y+1	; 0x01
    15ce:	9a 81       	ldd	r25, Y+2	; 0x02
    15d0:	82 0f       	add	r24, r18
    15d2:	93 1f       	adc	r25, r19
    15d4:	fc 01       	movw	r30, r24
    15d6:	60 83       	st	Z, r22
    15d8:	8b 81       	ldd	r24, Y+3	; 0x03
    15da:	9c 81       	ldd	r25, Y+4	; 0x04
    15dc:	01 96       	adiw	r24, 0x01	; 1
    15de:	9c 83       	std	Y+4, r25	; 0x04
    15e0:	8b 83       	std	Y+3, r24	; 0x03
    15e2:	8b 81       	ldd	r24, Y+3	; 0x03
    15e4:	9c 81       	ldd	r25, Y+4	; 0x04
    15e6:	0c 97       	sbiw	r24, 0x0c	; 12
    15e8:	94 f2       	brlt	.-92     	; 0x158e <descendRow+0x2c>
    15ea:	89 81       	ldd	r24, Y+1	; 0x01
    15ec:	9a 81       	ldd	r25, Y+2	; 0x02
    15ee:	01 96       	adiw	r24, 0x01	; 1
    15f0:	9a 83       	std	Y+2, r25	; 0x02
    15f2:	89 83       	std	Y+1, r24	; 0x01
    15f4:	89 81       	ldd	r24, Y+1	; 0x01
    15f6:	9a 81       	ldd	r25, Y+2	; 0x02
    15f8:	01 96       	adiw	r24, 0x01	; 1
    15fa:	45 97       	sbiw	r24, 0x15	; 21
    15fc:	2c f2       	brlt	.-118    	; 0x1588 <descendRow+0x26>
    15fe:	8d 81       	ldd	r24, Y+5	; 0x05
    1600:	9e 81       	ldd	r25, Y+6	; 0x06
    1602:	64 e1       	ldi	r22, 0x14	; 20
    1604:	70 e0       	ldi	r23, 0x00	; 0
    1606:	09 df       	rcall	.-494    	; 0x141a <clearRow>
    1608:	00 00       	nop
    160a:	28 96       	adiw	r28, 0x08	; 8
    160c:	0f b6       	in	r0, 0x3f	; 63
    160e:	f8 94       	cli
    1610:	de bf       	out	0x3e, r29	; 62
    1612:	0f be       	out	0x3f, r0	; 63
    1614:	cd bf       	out	0x3d, r28	; 61
    1616:	df 91       	pop	r29
    1618:	cf 91       	pop	r28
    161a:	08 95       	ret

0000161c <rowFull>:
    161c:	cf 93       	push	r28
    161e:	df 93       	push	r29
    1620:	00 d0       	rcall	.+0      	; 0x1622 <rowFull+0x6>
    1622:	00 d0       	rcall	.+0      	; 0x1624 <rowFull+0x8>
    1624:	00 d0       	rcall	.+0      	; 0x1626 <rowFull+0xa>
    1626:	cd b7       	in	r28, 0x3d	; 61
    1628:	de b7       	in	r29, 0x3e	; 62
    162a:	9c 83       	std	Y+4, r25	; 0x04
    162c:	8b 83       	std	Y+3, r24	; 0x03
    162e:	7e 83       	std	Y+6, r23	; 0x06
    1630:	6d 83       	std	Y+5, r22	; 0x05
    1632:	1a 82       	std	Y+2, r1	; 0x02
    1634:	19 82       	std	Y+1, r1	; 0x01
    1636:	1b c0       	rjmp	.+54     	; 0x166e <rowFull+0x52>
    1638:	2b 81       	ldd	r18, Y+3	; 0x03
    163a:	3c 81       	ldd	r19, Y+4	; 0x04
    163c:	49 81       	ldd	r20, Y+1	; 0x01
    163e:	5a 81       	ldd	r21, Y+2	; 0x02
    1640:	65 e1       	ldi	r22, 0x15	; 21
    1642:	64 9f       	mul	r22, r20
    1644:	c0 01       	movw	r24, r0
    1646:	65 9f       	mul	r22, r21
    1648:	90 0d       	add	r25, r0
    164a:	11 24       	eor	r1, r1
    164c:	28 0f       	add	r18, r24
    164e:	39 1f       	adc	r19, r25
    1650:	8d 81       	ldd	r24, Y+5	; 0x05
    1652:	9e 81       	ldd	r25, Y+6	; 0x06
    1654:	82 0f       	add	r24, r18
    1656:	93 1f       	adc	r25, r19
    1658:	fc 01       	movw	r30, r24
    165a:	80 81       	ld	r24, Z
    165c:	88 23       	and	r24, r24
    165e:	11 f4       	brne	.+4      	; 0x1664 <rowFull+0x48>
    1660:	80 e0       	ldi	r24, 0x00	; 0
    1662:	0a c0       	rjmp	.+20     	; 0x1678 <rowFull+0x5c>
    1664:	89 81       	ldd	r24, Y+1	; 0x01
    1666:	9a 81       	ldd	r25, Y+2	; 0x02
    1668:	01 96       	adiw	r24, 0x01	; 1
    166a:	9a 83       	std	Y+2, r25	; 0x02
    166c:	89 83       	std	Y+1, r24	; 0x01
    166e:	89 81       	ldd	r24, Y+1	; 0x01
    1670:	9a 81       	ldd	r25, Y+2	; 0x02
    1672:	0c 97       	sbiw	r24, 0x0c	; 12
    1674:	0c f3       	brlt	.-62     	; 0x1638 <rowFull+0x1c>
    1676:	81 e0       	ldi	r24, 0x01	; 1
    1678:	26 96       	adiw	r28, 0x06	; 6
    167a:	0f b6       	in	r0, 0x3f	; 63
    167c:	f8 94       	cli
    167e:	de bf       	out	0x3e, r29	; 62
    1680:	0f be       	out	0x3f, r0	; 63
    1682:	cd bf       	out	0x3d, r28	; 61
    1684:	df 91       	pop	r29
    1686:	cf 91       	pop	r28
    1688:	08 95       	ret

0000168a <rowEmpty>:
    168a:	cf 93       	push	r28
    168c:	df 93       	push	r29
    168e:	00 d0       	rcall	.+0      	; 0x1690 <rowEmpty+0x6>
    1690:	00 d0       	rcall	.+0      	; 0x1692 <rowEmpty+0x8>
    1692:	00 d0       	rcall	.+0      	; 0x1694 <rowEmpty+0xa>
    1694:	cd b7       	in	r28, 0x3d	; 61
    1696:	de b7       	in	r29, 0x3e	; 62
    1698:	9c 83       	std	Y+4, r25	; 0x04
    169a:	8b 83       	std	Y+3, r24	; 0x03
    169c:	7e 83       	std	Y+6, r23	; 0x06
    169e:	6d 83       	std	Y+5, r22	; 0x05
    16a0:	1a 82       	std	Y+2, r1	; 0x02
    16a2:	19 82       	std	Y+1, r1	; 0x01
    16a4:	1b c0       	rjmp	.+54     	; 0x16dc <rowEmpty+0x52>
    16a6:	2b 81       	ldd	r18, Y+3	; 0x03
    16a8:	3c 81       	ldd	r19, Y+4	; 0x04
    16aa:	49 81       	ldd	r20, Y+1	; 0x01
    16ac:	5a 81       	ldd	r21, Y+2	; 0x02
    16ae:	65 e1       	ldi	r22, 0x15	; 21
    16b0:	64 9f       	mul	r22, r20
    16b2:	c0 01       	movw	r24, r0
    16b4:	65 9f       	mul	r22, r21
    16b6:	90 0d       	add	r25, r0
    16b8:	11 24       	eor	r1, r1
    16ba:	28 0f       	add	r18, r24
    16bc:	39 1f       	adc	r19, r25
    16be:	8d 81       	ldd	r24, Y+5	; 0x05
    16c0:	9e 81       	ldd	r25, Y+6	; 0x06
    16c2:	82 0f       	add	r24, r18
    16c4:	93 1f       	adc	r25, r19
    16c6:	fc 01       	movw	r30, r24
    16c8:	80 81       	ld	r24, Z
    16ca:	88 23       	and	r24, r24
    16cc:	11 f4       	brne	.+4      	; 0x16d2 <rowEmpty+0x48>
    16ce:	80 e0       	ldi	r24, 0x00	; 0
    16d0:	0a c0       	rjmp	.+20     	; 0x16e6 <rowEmpty+0x5c>
    16d2:	89 81       	ldd	r24, Y+1	; 0x01
    16d4:	9a 81       	ldd	r25, Y+2	; 0x02
    16d6:	01 96       	adiw	r24, 0x01	; 1
    16d8:	9a 83       	std	Y+2, r25	; 0x02
    16da:	89 83       	std	Y+1, r24	; 0x01
    16dc:	89 81       	ldd	r24, Y+1	; 0x01
    16de:	9a 81       	ldd	r25, Y+2	; 0x02
    16e0:	0c 97       	sbiw	r24, 0x0c	; 12
    16e2:	0c f3       	brlt	.-62     	; 0x16a6 <rowEmpty+0x1c>
    16e4:	81 e0       	ldi	r24, 0x01	; 1
    16e6:	26 96       	adiw	r28, 0x06	; 6
    16e8:	0f b6       	in	r0, 0x3f	; 63
    16ea:	f8 94       	cli
    16ec:	de bf       	out	0x3e, r29	; 62
    16ee:	0f be       	out	0x3f, r0	; 63
    16f0:	cd bf       	out	0x3d, r28	; 61
    16f2:	df 91       	pop	r29
    16f4:	cf 91       	pop	r28
    16f6:	08 95       	ret

000016f8 <inBoundsPoint>:
    16f8:	cf 93       	push	r28
    16fa:	df 93       	push	r29
    16fc:	00 d0       	rcall	.+0      	; 0x16fe <inBoundsPoint+0x6>
    16fe:	00 d0       	rcall	.+0      	; 0x1700 <inBoundsPoint+0x8>
    1700:	cd b7       	in	r28, 0x3d	; 61
    1702:	de b7       	in	r29, 0x3e	; 62
    1704:	9a 83       	std	Y+2, r25	; 0x02
    1706:	89 83       	std	Y+1, r24	; 0x01
    1708:	7c 83       	std	Y+4, r23	; 0x04
    170a:	6b 83       	std	Y+3, r22	; 0x03
    170c:	8b 81       	ldd	r24, Y+3	; 0x03
    170e:	9c 81       	ldd	r25, Y+4	; 0x04
    1710:	fc 01       	movw	r30, r24
    1712:	80 81       	ld	r24, Z
    1714:	91 81       	ldd	r25, Z+1	; 0x01
    1716:	99 23       	and	r25, r25
    1718:	c4 f0       	brlt	.+48     	; 0x174a <inBoundsPoint+0x52>
    171a:	8b 81       	ldd	r24, Y+3	; 0x03
    171c:	9c 81       	ldd	r25, Y+4	; 0x04
    171e:	fc 01       	movw	r30, r24
    1720:	80 81       	ld	r24, Z
    1722:	91 81       	ldd	r25, Z+1	; 0x01
    1724:	0c 97       	sbiw	r24, 0x0c	; 12
    1726:	8c f4       	brge	.+34     	; 0x174a <inBoundsPoint+0x52>
    1728:	8b 81       	ldd	r24, Y+3	; 0x03
    172a:	9c 81       	ldd	r25, Y+4	; 0x04
    172c:	fc 01       	movw	r30, r24
    172e:	82 81       	ldd	r24, Z+2	; 0x02
    1730:	93 81       	ldd	r25, Z+3	; 0x03
    1732:	99 23       	and	r25, r25
    1734:	54 f0       	brlt	.+20     	; 0x174a <inBoundsPoint+0x52>
    1736:	8b 81       	ldd	r24, Y+3	; 0x03
    1738:	9c 81       	ldd	r25, Y+4	; 0x04
    173a:	fc 01       	movw	r30, r24
    173c:	82 81       	ldd	r24, Z+2	; 0x02
    173e:	93 81       	ldd	r25, Z+3	; 0x03
    1740:	45 97       	sbiw	r24, 0x15	; 21
    1742:	1c f4       	brge	.+6      	; 0x174a <inBoundsPoint+0x52>
    1744:	81 e0       	ldi	r24, 0x01	; 1
    1746:	90 e0       	ldi	r25, 0x00	; 0
    1748:	02 c0       	rjmp	.+4      	; 0x174e <inBoundsPoint+0x56>
    174a:	80 e0       	ldi	r24, 0x00	; 0
    174c:	90 e0       	ldi	r25, 0x00	; 0
    174e:	0f 90       	pop	r0
    1750:	0f 90       	pop	r0
    1752:	0f 90       	pop	r0
    1754:	0f 90       	pop	r0
    1756:	df 91       	pop	r29
    1758:	cf 91       	pop	r28
    175a:	08 95       	ret

0000175c <inBoundsOpen>:
    175c:	cf 93       	push	r28
    175e:	df 93       	push	r29
    1760:	cd b7       	in	r28, 0x3d	; 61
    1762:	de b7       	in	r29, 0x3e	; 62
    1764:	2a 97       	sbiw	r28, 0x0a	; 10
    1766:	0f b6       	in	r0, 0x3f	; 63
    1768:	f8 94       	cli
    176a:	de bf       	out	0x3e, r29	; 62
    176c:	0f be       	out	0x3f, r0	; 63
    176e:	cd bf       	out	0x3d, r28	; 61
    1770:	98 87       	std	Y+8, r25	; 0x08
    1772:	8f 83       	std	Y+7, r24	; 0x07
    1774:	7a 87       	std	Y+10, r23	; 0x0a
    1776:	69 87       	std	Y+9, r22	; 0x09
    1778:	1a 82       	std	Y+2, r1	; 0x02
    177a:	19 82       	std	Y+1, r1	; 0x01
    177c:	25 c0       	rjmp	.+74     	; 0x17c8 <inBoundsOpen+0x6c>
    177e:	29 81       	ldd	r18, Y+1	; 0x01
    1780:	3a 81       	ldd	r19, Y+2	; 0x02
    1782:	89 85       	ldd	r24, Y+9	; 0x09
    1784:	9a 85       	ldd	r25, Y+10	; 0x0a
    1786:	b9 01       	movw	r22, r18
    1788:	6a dc       	rcall	.-1836   	; 0x105e <getTile>
    178a:	dc 01       	movw	r26, r24
    178c:	cb 01       	movw	r24, r22
    178e:	8b 83       	std	Y+3, r24	; 0x03
    1790:	9c 83       	std	Y+4, r25	; 0x04
    1792:	ad 83       	std	Y+5, r26	; 0x05
    1794:	be 83       	std	Y+6, r27	; 0x06
    1796:	9e 01       	movw	r18, r28
    1798:	2d 5f       	subi	r18, 0xFD	; 253
    179a:	3f 4f       	sbci	r19, 0xFF	; 255
    179c:	8f 81       	ldd	r24, Y+7	; 0x07
    179e:	98 85       	ldd	r25, Y+8	; 0x08
    17a0:	b9 01       	movw	r22, r18
    17a2:	aa df       	rcall	.-172    	; 0x16f8 <inBoundsPoint>
    17a4:	88 23       	and	r24, r24
    17a6:	49 f0       	breq	.+18     	; 0x17ba <inBoundsOpen+0x5e>
    17a8:	9e 01       	movw	r18, r28
    17aa:	2d 5f       	subi	r18, 0xFD	; 253
    17ac:	3f 4f       	sbci	r19, 0xFF	; 255
    17ae:	8f 81       	ldd	r24, Y+7	; 0x07
    17b0:	98 85       	ldd	r25, Y+8	; 0x08
    17b2:	b9 01       	movw	r22, r18
    17b4:	09 de       	rcall	.-1006   	; 0x13c8 <getPoint>
    17b6:	88 23       	and	r24, r24
    17b8:	11 f0       	breq	.+4      	; 0x17be <inBoundsOpen+0x62>
    17ba:	80 e0       	ldi	r24, 0x00	; 0
    17bc:	0a c0       	rjmp	.+20     	; 0x17d2 <inBoundsOpen+0x76>
    17be:	89 81       	ldd	r24, Y+1	; 0x01
    17c0:	9a 81       	ldd	r25, Y+2	; 0x02
    17c2:	01 96       	adiw	r24, 0x01	; 1
    17c4:	9a 83       	std	Y+2, r25	; 0x02
    17c6:	89 83       	std	Y+1, r24	; 0x01
    17c8:	89 81       	ldd	r24, Y+1	; 0x01
    17ca:	9a 81       	ldd	r25, Y+2	; 0x02
    17cc:	04 97       	sbiw	r24, 0x04	; 4
    17ce:	b8 f2       	brcs	.-82     	; 0x177e <inBoundsOpen+0x22>
    17d0:	81 e0       	ldi	r24, 0x01	; 1
    17d2:	2a 96       	adiw	r28, 0x0a	; 10
    17d4:	0f b6       	in	r0, 0x3f	; 63
    17d6:	f8 94       	cli
    17d8:	de bf       	out	0x3e, r29	; 62
    17da:	0f be       	out	0x3f, r0	; 63
    17dc:	cd bf       	out	0x3d, r28	; 61
    17de:	df 91       	pop	r29
    17e0:	cf 91       	pop	r28
    17e2:	08 95       	ret

000017e4 <land>:
    17e4:	cf 93       	push	r28
    17e6:	df 93       	push	r29
    17e8:	cd b7       	in	r28, 0x3d	; 61
    17ea:	de b7       	in	r29, 0x3e	; 62
    17ec:	2a 97       	sbiw	r28, 0x0a	; 10
    17ee:	0f b6       	in	r0, 0x3f	; 63
    17f0:	f8 94       	cli
    17f2:	de bf       	out	0x3e, r29	; 62
    17f4:	0f be       	out	0x3f, r0	; 63
    17f6:	cd bf       	out	0x3d, r28	; 61
    17f8:	98 87       	std	Y+8, r25	; 0x08
    17fa:	8f 83       	std	Y+7, r24	; 0x07
    17fc:	7a 87       	std	Y+10, r23	; 0x0a
    17fe:	69 87       	std	Y+9, r22	; 0x09
    1800:	1a 82       	std	Y+2, r1	; 0x02
    1802:	19 82       	std	Y+1, r1	; 0x01
    1804:	31 c0       	rjmp	.+98     	; 0x1868 <land+0x84>
    1806:	29 81       	ldd	r18, Y+1	; 0x01
    1808:	3a 81       	ldd	r19, Y+2	; 0x02
    180a:	89 85       	ldd	r24, Y+9	; 0x09
    180c:	9a 85       	ldd	r25, Y+10	; 0x0a
    180e:	b9 01       	movw	r22, r18
    1810:	26 dc       	rcall	.-1972   	; 0x105e <getTile>
    1812:	dc 01       	movw	r26, r24
    1814:	cb 01       	movw	r24, r22
    1816:	8b 83       	std	Y+3, r24	; 0x03
    1818:	9c 83       	std	Y+4, r25	; 0x04
    181a:	ad 83       	std	Y+5, r26	; 0x05
    181c:	be 83       	std	Y+6, r27	; 0x06
    181e:	8d 81       	ldd	r24, Y+5	; 0x05
    1820:	9e 81       	ldd	r25, Y+6	; 0x06
    1822:	18 16       	cp	r1, r24
    1824:	19 06       	cpc	r1, r25
    1826:	14 f0       	brlt	.+4      	; 0x182c <land+0x48>
    1828:	81 e0       	ldi	r24, 0x01	; 1
    182a:	23 c0       	rjmp	.+70     	; 0x1872 <land+0x8e>
    182c:	8d 81       	ldd	r24, Y+5	; 0x05
    182e:	9e 81       	ldd	r25, Y+6	; 0x06
    1830:	01 97       	sbiw	r24, 0x01	; 1
    1832:	9e 83       	std	Y+6, r25	; 0x06
    1834:	8d 83       	std	Y+5, r24	; 0x05
    1836:	9e 01       	movw	r18, r28
    1838:	2d 5f       	subi	r18, 0xFD	; 253
    183a:	3f 4f       	sbci	r19, 0xFF	; 255
    183c:	8f 81       	ldd	r24, Y+7	; 0x07
    183e:	98 85       	ldd	r25, Y+8	; 0x08
    1840:	b9 01       	movw	r22, r18
    1842:	5a df       	rcall	.-332    	; 0x16f8 <inBoundsPoint>
    1844:	88 23       	and	r24, r24
    1846:	59 f0       	breq	.+22     	; 0x185e <land+0x7a>
    1848:	9e 01       	movw	r18, r28
    184a:	2d 5f       	subi	r18, 0xFD	; 253
    184c:	3f 4f       	sbci	r19, 0xFF	; 255
    184e:	8f 81       	ldd	r24, Y+7	; 0x07
    1850:	98 85       	ldd	r25, Y+8	; 0x08
    1852:	b9 01       	movw	r22, r18
    1854:	b9 dd       	rcall	.-1166   	; 0x13c8 <getPoint>
    1856:	88 23       	and	r24, r24
    1858:	11 f0       	breq	.+4      	; 0x185e <land+0x7a>
    185a:	81 e0       	ldi	r24, 0x01	; 1
    185c:	0a c0       	rjmp	.+20     	; 0x1872 <land+0x8e>
    185e:	89 81       	ldd	r24, Y+1	; 0x01
    1860:	9a 81       	ldd	r25, Y+2	; 0x02
    1862:	01 96       	adiw	r24, 0x01	; 1
    1864:	9a 83       	std	Y+2, r25	; 0x02
    1866:	89 83       	std	Y+1, r24	; 0x01
    1868:	89 81       	ldd	r24, Y+1	; 0x01
    186a:	9a 81       	ldd	r25, Y+2	; 0x02
    186c:	04 97       	sbiw	r24, 0x04	; 4
    186e:	58 f2       	brcs	.-106    	; 0x1806 <land+0x22>
    1870:	80 e0       	ldi	r24, 0x00	; 0
    1872:	2a 96       	adiw	r28, 0x0a	; 10
    1874:	0f b6       	in	r0, 0x3f	; 63
    1876:	f8 94       	cli
    1878:	de bf       	out	0x3e, r29	; 62
    187a:	0f be       	out	0x3f, r0	; 63
    187c:	cd bf       	out	0x3d, r28	; 61
    187e:	df 91       	pop	r29
    1880:	cf 91       	pop	r28
    1882:	08 95       	ret

00001884 <tryMirror>:
    1884:	cf 93       	push	r28
    1886:	df 93       	push	r29
    1888:	00 d0       	rcall	.+0      	; 0x188a <tryMirror+0x6>
    188a:	00 d0       	rcall	.+0      	; 0x188c <tryMirror+0x8>
    188c:	cd b7       	in	r28, 0x3d	; 61
    188e:	de b7       	in	r29, 0x3e	; 62
    1890:	9a 83       	std	Y+2, r25	; 0x02
    1892:	89 83       	std	Y+1, r24	; 0x01
    1894:	7c 83       	std	Y+4, r23	; 0x04
    1896:	6b 83       	std	Y+3, r22	; 0x03
    1898:	8b 81       	ldd	r24, Y+3	; 0x03
    189a:	9c 81       	ldd	r25, Y+4	; 0x04
    189c:	4f dc       	rcall	.-1890   	; 0x113c <mirror>
    189e:	2b 81       	ldd	r18, Y+3	; 0x03
    18a0:	3c 81       	ldd	r19, Y+4	; 0x04
    18a2:	89 81       	ldd	r24, Y+1	; 0x01
    18a4:	9a 81       	ldd	r25, Y+2	; 0x02
    18a6:	b9 01       	movw	r22, r18
    18a8:	59 df       	rcall	.-334    	; 0x175c <inBoundsOpen>
    18aa:	88 23       	and	r24, r24
    18ac:	21 f4       	brne	.+8      	; 0x18b6 <tryMirror+0x32>
    18ae:	8b 81       	ldd	r24, Y+3	; 0x03
    18b0:	9c 81       	ldd	r25, Y+4	; 0x04
    18b2:	44 dc       	rcall	.-1912   	; 0x113c <mirror>
    18b4:	01 c0       	rjmp	.+2      	; 0x18b8 <tryMirror+0x34>
    18b6:	00 00       	nop
    18b8:	0f 90       	pop	r0
    18ba:	0f 90       	pop	r0
    18bc:	0f 90       	pop	r0
    18be:	0f 90       	pop	r0
    18c0:	df 91       	pop	r29
    18c2:	cf 91       	pop	r28
    18c4:	08 95       	ret

000018c6 <tryTurnCCW>:
    18c6:	cf 93       	push	r28
    18c8:	df 93       	push	r29
    18ca:	00 d0       	rcall	.+0      	; 0x18cc <tryTurnCCW+0x6>
    18cc:	00 d0       	rcall	.+0      	; 0x18ce <tryTurnCCW+0x8>
    18ce:	cd b7       	in	r28, 0x3d	; 61
    18d0:	de b7       	in	r29, 0x3e	; 62
    18d2:	9a 83       	std	Y+2, r25	; 0x02
    18d4:	89 83       	std	Y+1, r24	; 0x01
    18d6:	7c 83       	std	Y+4, r23	; 0x04
    18d8:	6b 83       	std	Y+3, r22	; 0x03
    18da:	8b 81       	ldd	r24, Y+3	; 0x03
    18dc:	9c 81       	ldd	r25, Y+4	; 0x04
    18de:	6a dc       	rcall	.-1836   	; 0x11b4 <turnCCW>
    18e0:	2b 81       	ldd	r18, Y+3	; 0x03
    18e2:	3c 81       	ldd	r19, Y+4	; 0x04
    18e4:	89 81       	ldd	r24, Y+1	; 0x01
    18e6:	9a 81       	ldd	r25, Y+2	; 0x02
    18e8:	b9 01       	movw	r22, r18
    18ea:	38 df       	rcall	.-400    	; 0x175c <inBoundsOpen>
    18ec:	88 23       	and	r24, r24
    18ee:	21 f4       	brne	.+8      	; 0x18f8 <tryTurnCCW+0x32>
    18f0:	8b 81       	ldd	r24, Y+3	; 0x03
    18f2:	9c 81       	ldd	r25, Y+4	; 0x04
    18f4:	87 dc       	rcall	.-1778   	; 0x1204 <turnCW>
    18f6:	01 c0       	rjmp	.+2      	; 0x18fa <tryTurnCCW+0x34>
    18f8:	00 00       	nop
    18fa:	0f 90       	pop	r0
    18fc:	0f 90       	pop	r0
    18fe:	0f 90       	pop	r0
    1900:	0f 90       	pop	r0
    1902:	df 91       	pop	r29
    1904:	cf 91       	pop	r28
    1906:	08 95       	ret

00001908 <tryTurnCW>:
    1908:	cf 93       	push	r28
    190a:	df 93       	push	r29
    190c:	00 d0       	rcall	.+0      	; 0x190e <tryTurnCW+0x6>
    190e:	00 d0       	rcall	.+0      	; 0x1910 <tryTurnCW+0x8>
    1910:	cd b7       	in	r28, 0x3d	; 61
    1912:	de b7       	in	r29, 0x3e	; 62
    1914:	9a 83       	std	Y+2, r25	; 0x02
    1916:	89 83       	std	Y+1, r24	; 0x01
    1918:	7c 83       	std	Y+4, r23	; 0x04
    191a:	6b 83       	std	Y+3, r22	; 0x03
    191c:	8b 81       	ldd	r24, Y+3	; 0x03
    191e:	9c 81       	ldd	r25, Y+4	; 0x04
    1920:	71 dc       	rcall	.-1822   	; 0x1204 <turnCW>
    1922:	2b 81       	ldd	r18, Y+3	; 0x03
    1924:	3c 81       	ldd	r19, Y+4	; 0x04
    1926:	89 81       	ldd	r24, Y+1	; 0x01
    1928:	9a 81       	ldd	r25, Y+2	; 0x02
    192a:	b9 01       	movw	r22, r18
    192c:	17 df       	rcall	.-466    	; 0x175c <inBoundsOpen>
    192e:	88 23       	and	r24, r24
    1930:	21 f4       	brne	.+8      	; 0x193a <tryTurnCW+0x32>
    1932:	8b 81       	ldd	r24, Y+3	; 0x03
    1934:	9c 81       	ldd	r25, Y+4	; 0x04
    1936:	3e dc       	rcall	.-1924   	; 0x11b4 <turnCCW>
    1938:	01 c0       	rjmp	.+2      	; 0x193c <tryTurnCW+0x34>
    193a:	00 00       	nop
    193c:	0f 90       	pop	r0
    193e:	0f 90       	pop	r0
    1940:	0f 90       	pop	r0
    1942:	0f 90       	pop	r0
    1944:	df 91       	pop	r29
    1946:	cf 91       	pop	r28
    1948:	08 95       	ret

0000194a <tryShiftRight>:
    194a:	cf 93       	push	r28
    194c:	df 93       	push	r29
    194e:	00 d0       	rcall	.+0      	; 0x1950 <tryShiftRight+0x6>
    1950:	00 d0       	rcall	.+0      	; 0x1952 <tryShiftRight+0x8>
    1952:	cd b7       	in	r28, 0x3d	; 61
    1954:	de b7       	in	r29, 0x3e	; 62
    1956:	9a 83       	std	Y+2, r25	; 0x02
    1958:	89 83       	std	Y+1, r24	; 0x01
    195a:	7c 83       	std	Y+4, r23	; 0x04
    195c:	6b 83       	std	Y+3, r22	; 0x03
    195e:	8b 81       	ldd	r24, Y+3	; 0x03
    1960:	9c 81       	ldd	r25, Y+4	; 0x04
    1962:	ba db       	rcall	.-2188   	; 0x10d8 <right>
    1964:	2b 81       	ldd	r18, Y+3	; 0x03
    1966:	3c 81       	ldd	r19, Y+4	; 0x04
    1968:	89 81       	ldd	r24, Y+1	; 0x01
    196a:	9a 81       	ldd	r25, Y+2	; 0x02
    196c:	b9 01       	movw	r22, r18
    196e:	f6 de       	rcall	.-532    	; 0x175c <inBoundsOpen>
    1970:	88 23       	and	r24, r24
    1972:	21 f4       	brne	.+8      	; 0x197c <tryShiftRight+0x32>
    1974:	8b 81       	ldd	r24, Y+3	; 0x03
    1976:	9c 81       	ldd	r25, Y+4	; 0x04
    1978:	c8 db       	rcall	.-2160   	; 0x110a <left>
    197a:	01 c0       	rjmp	.+2      	; 0x197e <tryShiftRight+0x34>
    197c:	00 00       	nop
    197e:	0f 90       	pop	r0
    1980:	0f 90       	pop	r0
    1982:	0f 90       	pop	r0
    1984:	0f 90       	pop	r0
    1986:	df 91       	pop	r29
    1988:	cf 91       	pop	r28
    198a:	08 95       	ret

0000198c <tryShiftLeft>:
    198c:	cf 93       	push	r28
    198e:	df 93       	push	r29
    1990:	00 d0       	rcall	.+0      	; 0x1992 <tryShiftLeft+0x6>
    1992:	00 d0       	rcall	.+0      	; 0x1994 <tryShiftLeft+0x8>
    1994:	cd b7       	in	r28, 0x3d	; 61
    1996:	de b7       	in	r29, 0x3e	; 62
    1998:	9a 83       	std	Y+2, r25	; 0x02
    199a:	89 83       	std	Y+1, r24	; 0x01
    199c:	7c 83       	std	Y+4, r23	; 0x04
    199e:	6b 83       	std	Y+3, r22	; 0x03
    19a0:	8b 81       	ldd	r24, Y+3	; 0x03
    19a2:	9c 81       	ldd	r25, Y+4	; 0x04
    19a4:	b2 db       	rcall	.-2204   	; 0x110a <left>
    19a6:	2b 81       	ldd	r18, Y+3	; 0x03
    19a8:	3c 81       	ldd	r19, Y+4	; 0x04
    19aa:	89 81       	ldd	r24, Y+1	; 0x01
    19ac:	9a 81       	ldd	r25, Y+2	; 0x02
    19ae:	b9 01       	movw	r22, r18
    19b0:	d5 de       	rcall	.-598    	; 0x175c <inBoundsOpen>
    19b2:	88 23       	and	r24, r24
    19b4:	21 f4       	brne	.+8      	; 0x19be <tryShiftLeft+0x32>
    19b6:	8b 81       	ldd	r24, Y+3	; 0x03
    19b8:	9c 81       	ldd	r25, Y+4	; 0x04
    19ba:	8e db       	rcall	.-2276   	; 0x10d8 <right>
    19bc:	01 c0       	rjmp	.+2      	; 0x19c0 <tryShiftLeft+0x34>
    19be:	00 00       	nop
    19c0:	0f 90       	pop	r0
    19c2:	0f 90       	pop	r0
    19c4:	0f 90       	pop	r0
    19c6:	0f 90       	pop	r0
    19c8:	df 91       	pop	r29
    19ca:	cf 91       	pop	r28
    19cc:	08 95       	ret

000019ce <place>:
    19ce:	cf 93       	push	r28
    19d0:	df 93       	push	r29
    19d2:	cd b7       	in	r28, 0x3d	; 61
    19d4:	de b7       	in	r29, 0x3e	; 62
    19d6:	2a 97       	sbiw	r28, 0x0a	; 10
    19d8:	0f b6       	in	r0, 0x3f	; 63
    19da:	f8 94       	cli
    19dc:	de bf       	out	0x3e, r29	; 62
    19de:	0f be       	out	0x3f, r0	; 63
    19e0:	cd bf       	out	0x3d, r28	; 61
    19e2:	98 87       	std	Y+8, r25	; 0x08
    19e4:	8f 83       	std	Y+7, r24	; 0x07
    19e6:	7a 87       	std	Y+10, r23	; 0x0a
    19e8:	69 87       	std	Y+9, r22	; 0x09
    19ea:	1a 82       	std	Y+2, r1	; 0x02
    19ec:	19 82       	std	Y+1, r1	; 0x01
    19ee:	2d c0       	rjmp	.+90     	; 0x1a4a <place+0x7c>
    19f0:	29 81       	ldd	r18, Y+1	; 0x01
    19f2:	3a 81       	ldd	r19, Y+2	; 0x02
    19f4:	89 85       	ldd	r24, Y+9	; 0x09
    19f6:	9a 85       	ldd	r25, Y+10	; 0x0a
    19f8:	b9 01       	movw	r22, r18
    19fa:	31 db       	rcall	.-2462   	; 0x105e <getTile>
    19fc:	dc 01       	movw	r26, r24
    19fe:	cb 01       	movw	r24, r22
    1a00:	8b 83       	std	Y+3, r24	; 0x03
    1a02:	9c 83       	std	Y+4, r25	; 0x04
    1a04:	ad 83       	std	Y+5, r26	; 0x05
    1a06:	be 83       	std	Y+6, r27	; 0x06
    1a08:	9e 01       	movw	r18, r28
    1a0a:	2d 5f       	subi	r18, 0xFD	; 253
    1a0c:	3f 4f       	sbci	r19, 0xFF	; 255
    1a0e:	8f 81       	ldd	r24, Y+7	; 0x07
    1a10:	98 85       	ldd	r25, Y+8	; 0x08
    1a12:	b9 01       	movw	r22, r18
    1a14:	71 de       	rcall	.-798    	; 0x16f8 <inBoundsPoint>
    1a16:	88 23       	and	r24, r24
    1a18:	99 f0       	breq	.+38     	; 0x1a40 <place+0x72>
    1a1a:	6b 81       	ldd	r22, Y+3	; 0x03
    1a1c:	7c 81       	ldd	r23, Y+4	; 0x04
    1a1e:	8d 81       	ldd	r24, Y+5	; 0x05
    1a20:	9e 81       	ldd	r25, Y+6	; 0x06
    1a22:	4f 81       	ldd	r20, Y+7	; 0x07
    1a24:	58 85       	ldd	r21, Y+8	; 0x08
    1a26:	e5 e1       	ldi	r30, 0x15	; 21
    1a28:	e6 9f       	mul	r30, r22
    1a2a:	90 01       	movw	r18, r0
    1a2c:	e7 9f       	mul	r30, r23
    1a2e:	30 0d       	add	r19, r0
    1a30:	11 24       	eor	r1, r1
    1a32:	24 0f       	add	r18, r20
    1a34:	35 1f       	adc	r19, r21
    1a36:	82 0f       	add	r24, r18
    1a38:	93 1f       	adc	r25, r19
    1a3a:	21 e0       	ldi	r18, 0x01	; 1
    1a3c:	fc 01       	movw	r30, r24
    1a3e:	20 83       	st	Z, r18
    1a40:	89 81       	ldd	r24, Y+1	; 0x01
    1a42:	9a 81       	ldd	r25, Y+2	; 0x02
    1a44:	01 96       	adiw	r24, 0x01	; 1
    1a46:	9a 83       	std	Y+2, r25	; 0x02
    1a48:	89 83       	std	Y+1, r24	; 0x01
    1a4a:	89 81       	ldd	r24, Y+1	; 0x01
    1a4c:	9a 81       	ldd	r25, Y+2	; 0x02
    1a4e:	04 97       	sbiw	r24, 0x04	; 4
    1a50:	78 f2       	brcs	.-98     	; 0x19f0 <place+0x22>
    1a52:	00 00       	nop
    1a54:	2a 96       	adiw	r28, 0x0a	; 10
    1a56:	0f b6       	in	r0, 0x3f	; 63
    1a58:	f8 94       	cli
    1a5a:	de bf       	out	0x3e, r29	; 62
    1a5c:	0f be       	out	0x3f, r0	; 63
    1a5e:	cd bf       	out	0x3d, r28	; 61
    1a60:	df 91       	pop	r29
    1a62:	cf 91       	pop	r28
    1a64:	08 95       	ret

00001a66 <getLength>:
typedef enum GameState { Init, Play, PlayInterval, RowClear, GameOver, GameOverFlash } GameState;
GameState gameState;
unsigned char score = 0;
unsigned char highScore = 0;
unsigned char rnd = 0;
short getLength(short sh) {
    1a66:	cf 93       	push	r28
    1a68:	df 93       	push	r29
    1a6a:	00 d0       	rcall	.+0      	; 0x1a6c <getLength+0x6>
    1a6c:	1f 92       	push	r1
    1a6e:	cd b7       	in	r28, 0x3d	; 61
    1a70:	de b7       	in	r29, 0x3e	; 62
    1a72:	9b 83       	std	Y+3, r25	; 0x03
    1a74:	8a 83       	std	Y+2, r24	; 0x02
	unsigned char length = 1;
    1a76:	81 e0       	ldi	r24, 0x01	; 1
    1a78:	89 83       	std	Y+1, r24	; 0x01
	//Count the number in case it is 0
	if(sh == 0) {
    1a7a:	8a 81       	ldd	r24, Y+2	; 0x02
    1a7c:	9b 81       	ldd	r25, Y+3	; 0x03
    1a7e:	89 2b       	or	r24, r25
    1a80:	81 f4       	brne	.+32     	; 0x1aa2 <getLength+0x3c>
		length++;
    1a82:	89 81       	ldd	r24, Y+1	; 0x01
    1a84:	8f 5f       	subi	r24, 0xFF	; 255
    1a86:	89 83       	std	Y+1, r24	; 0x01
    1a88:	11 c0       	rjmp	.+34     	; 0x1aac <getLength+0x46>
	} else {
		while(sh > 0) {
			length++;
    1a8a:	89 81       	ldd	r24, Y+1	; 0x01
    1a8c:	8f 5f       	subi	r24, 0xFF	; 255
    1a8e:	89 83       	std	Y+1, r24	; 0x01
			sh /= 10;
    1a90:	8a 81       	ldd	r24, Y+2	; 0x02
    1a92:	9b 81       	ldd	r25, Y+3	; 0x03
    1a94:	2a e0       	ldi	r18, 0x0A	; 10
    1a96:	30 e0       	ldi	r19, 0x00	; 0
    1a98:	b9 01       	movw	r22, r18
    1a9a:	41 d7       	rcall	.+3714   	; 0x291e <__divmodhi4>
    1a9c:	cb 01       	movw	r24, r22
    1a9e:	9b 83       	std	Y+3, r25	; 0x03
    1aa0:	8a 83       	std	Y+2, r24	; 0x02
	unsigned char length = 1;
	//Count the number in case it is 0
	if(sh == 0) {
		length++;
	} else {
		while(sh > 0) {
    1aa2:	8a 81       	ldd	r24, Y+2	; 0x02
    1aa4:	9b 81       	ldd	r25, Y+3	; 0x03
    1aa6:	18 16       	cp	r1, r24
    1aa8:	19 06       	cpc	r1, r25
    1aaa:	7c f3       	brlt	.-34     	; 0x1a8a <getLength+0x24>
			length++;
			sh /= 10;
		}
	}
	return length;
    1aac:	89 81       	ldd	r24, Y+1	; 0x01
    1aae:	88 2f       	mov	r24, r24
    1ab0:	90 e0       	ldi	r25, 0x00	; 0
}
    1ab2:	0f 90       	pop	r0
    1ab4:	0f 90       	pop	r0
    1ab6:	0f 90       	pop	r0
    1ab8:	df 91       	pop	r29
    1aba:	cf 91       	pop	r28
    1abc:	08 95       	ret

00001abe <getString>:
void getString(short sh, char* str, short length) {
    1abe:	cf 93       	push	r28
    1ac0:	df 93       	push	r29
    1ac2:	00 d0       	rcall	.+0      	; 0x1ac4 <getString+0x6>
    1ac4:	00 d0       	rcall	.+0      	; 0x1ac6 <getString+0x8>
    1ac6:	00 d0       	rcall	.+0      	; 0x1ac8 <getString+0xa>
    1ac8:	cd b7       	in	r28, 0x3d	; 61
    1aca:	de b7       	in	r29, 0x3e	; 62
    1acc:	9a 83       	std	Y+2, r25	; 0x02
    1ace:	89 83       	std	Y+1, r24	; 0x01
    1ad0:	7c 83       	std	Y+4, r23	; 0x04
    1ad2:	6b 83       	std	Y+3, r22	; 0x03
    1ad4:	5e 83       	std	Y+6, r21	; 0x06
    1ad6:	4d 83       	std	Y+5, r20	; 0x05
	length--;
    1ad8:	8d 81       	ldd	r24, Y+5	; 0x05
    1ada:	9e 81       	ldd	r25, Y+6	; 0x06
    1adc:	01 97       	sbiw	r24, 0x01	; 1
    1ade:	9e 83       	std	Y+6, r25	; 0x06
    1ae0:	8d 83       	std	Y+5, r24	; 0x05
	str[length] = 0;
    1ae2:	8d 81       	ldd	r24, Y+5	; 0x05
    1ae4:	9e 81       	ldd	r25, Y+6	; 0x06
    1ae6:	2b 81       	ldd	r18, Y+3	; 0x03
    1ae8:	3c 81       	ldd	r19, Y+4	; 0x04
    1aea:	82 0f       	add	r24, r18
    1aec:	93 1f       	adc	r25, r19
    1aee:	fc 01       	movw	r30, r24
    1af0:	10 82       	st	Z, r1
	//Print the number in case it is 0
	if(sh == 0) {
    1af2:	89 81       	ldd	r24, Y+1	; 0x01
    1af4:	9a 81       	ldd	r25, Y+2	; 0x02
    1af6:	89 2b       	or	r24, r25
    1af8:	61 f5       	brne	.+88     	; 0x1b52 <getString+0x94>
		length--;
    1afa:	8d 81       	ldd	r24, Y+5	; 0x05
    1afc:	9e 81       	ldd	r25, Y+6	; 0x06
    1afe:	01 97       	sbiw	r24, 0x01	; 1
    1b00:	9e 83       	std	Y+6, r25	; 0x06
    1b02:	8d 83       	std	Y+5, r24	; 0x05
		str[length] = '0';
    1b04:	8d 81       	ldd	r24, Y+5	; 0x05
    1b06:	9e 81       	ldd	r25, Y+6	; 0x06
    1b08:	2b 81       	ldd	r18, Y+3	; 0x03
    1b0a:	3c 81       	ldd	r19, Y+4	; 0x04
    1b0c:	82 0f       	add	r24, r18
    1b0e:	93 1f       	adc	r25, r19
    1b10:	20 e3       	ldi	r18, 0x30	; 48
    1b12:	fc 01       	movw	r30, r24
    1b14:	20 83       	st	Z, r18
			length--;
			str[length] = '0' + (sh%10);
			sh /= 10;
		}
	}
	return;
    1b16:	23 c0       	rjmp	.+70     	; 0x1b5e <getString+0xa0>
	if(sh == 0) {
		length--;
		str[length] = '0';
	} else {
		while(sh > 0) {
			length--;
    1b18:	8d 81       	ldd	r24, Y+5	; 0x05
    1b1a:	9e 81       	ldd	r25, Y+6	; 0x06
    1b1c:	01 97       	sbiw	r24, 0x01	; 1
    1b1e:	9e 83       	std	Y+6, r25	; 0x06
    1b20:	8d 83       	std	Y+5, r24	; 0x05
			str[length] = '0' + (sh%10);
    1b22:	8d 81       	ldd	r24, Y+5	; 0x05
    1b24:	9e 81       	ldd	r25, Y+6	; 0x06
    1b26:	2b 81       	ldd	r18, Y+3	; 0x03
    1b28:	3c 81       	ldd	r19, Y+4	; 0x04
    1b2a:	28 0f       	add	r18, r24
    1b2c:	39 1f       	adc	r19, r25
    1b2e:	89 81       	ldd	r24, Y+1	; 0x01
    1b30:	9a 81       	ldd	r25, Y+2	; 0x02
    1b32:	4a e0       	ldi	r20, 0x0A	; 10
    1b34:	50 e0       	ldi	r21, 0x00	; 0
    1b36:	ba 01       	movw	r22, r20
    1b38:	f2 d6       	rcall	.+3556   	; 0x291e <__divmodhi4>
    1b3a:	80 5d       	subi	r24, 0xD0	; 208
    1b3c:	f9 01       	movw	r30, r18
    1b3e:	80 83       	st	Z, r24
			sh /= 10;
    1b40:	89 81       	ldd	r24, Y+1	; 0x01
    1b42:	9a 81       	ldd	r25, Y+2	; 0x02
    1b44:	2a e0       	ldi	r18, 0x0A	; 10
    1b46:	30 e0       	ldi	r19, 0x00	; 0
    1b48:	b9 01       	movw	r22, r18
    1b4a:	e9 d6       	rcall	.+3538   	; 0x291e <__divmodhi4>
    1b4c:	cb 01       	movw	r24, r22
    1b4e:	9a 83       	std	Y+2, r25	; 0x02
    1b50:	89 83       	std	Y+1, r24	; 0x01
	//Print the number in case it is 0
	if(sh == 0) {
		length--;
		str[length] = '0';
	} else {
		while(sh > 0) {
    1b52:	89 81       	ldd	r24, Y+1	; 0x01
    1b54:	9a 81       	ldd	r25, Y+2	; 0x02
    1b56:	18 16       	cp	r1, r24
    1b58:	19 06       	cpc	r1, r25
    1b5a:	f4 f2       	brlt	.-68     	; 0x1b18 <getString+0x5a>
			length--;
			str[length] = '0' + (sh%10);
			sh /= 10;
		}
	}
	return;
    1b5c:	00 00       	nop
}
    1b5e:	26 96       	adiw	r28, 0x06	; 6
    1b60:	0f b6       	in	r0, 0x3f	; 63
    1b62:	f8 94       	cli
    1b64:	de bf       	out	0x3e, r29	; 62
    1b66:	0f be       	out	0x3f, r0	; 63
    1b68:	cd bf       	out	0x3d, r28	; 61
    1b6a:	df 91       	pop	r29
    1b6c:	cf 91       	pop	r28
    1b6e:	08 95       	ret

00001b70 <UpdateTitle>:
void UpdateTitle() {
    1b70:	ef 92       	push	r14
    1b72:	ff 92       	push	r15
    1b74:	0f 93       	push	r16
    1b76:	1f 93       	push	r17
    1b78:	cf 93       	push	r28
    1b7a:	df 93       	push	r29
    1b7c:	cd b7       	in	r28, 0x3d	; 61
    1b7e:	de b7       	in	r29, 0x3e	; 62
    1b80:	2d 97       	sbiw	r28, 0x0d	; 13
    1b82:	0f b6       	in	r0, 0x3f	; 63
    1b84:	f8 94       	cli
    1b86:	de bf       	out	0x3e, r29	; 62
    1b88:	0f be       	out	0x3f, r0	; 63
    1b8a:	cd bf       	out	0x3d, r28	; 61
			highScore = 0;
			store(0xFF, highScore);
			break;
	}
	//pressed_prev = pressed;
}
    1b8c:	0d b7       	in	r16, 0x3d	; 61
    1b8e:	1e b7       	in	r17, 0x3e	; 62
			sh /= 10;
		}
	}
	return;
}
void UpdateTitle() {
    1b90:	8d b7       	in	r24, 0x3d	; 61
    1b92:	9e b7       	in	r25, 0x3e	; 62
    1b94:	7c 01       	movw	r14, r24
	
	nokia_lcd_clear();
    1b96:	0e 94 6c 03 	call	0x6d8	; 0x6d8 <nokia_lcd_clear>
	nokia_lcd_write_string("Tetris!", 1);
    1b9a:	61 e0       	ldi	r22, 0x01	; 1
    1b9c:	88 e0       	ldi	r24, 0x08	; 8
    1b9e:	91 e0       	ldi	r25, 0x01	; 1
    1ba0:	0e 94 9b 04 	call	0x936	; 0x936 <nokia_lcd_write_string>
	nokia_lcd_set_cursor(0, 10);
    1ba4:	6a e0       	ldi	r22, 0x0A	; 10
    1ba6:	80 e0       	ldi	r24, 0x00	; 0
    1ba8:	0e 94 bd 04 	call	0x97a	; 0x97a <nokia_lcd_set_cursor>
	nokia_lcd_write_string("High score: ", 1);
    1bac:	61 e0       	ldi	r22, 0x01	; 1
    1bae:	80 e1       	ldi	r24, 0x10	; 16
    1bb0:	91 e0       	ldi	r25, 0x01	; 1
    1bb2:	0e 94 9b 04 	call	0x936	; 0x936 <nokia_lcd_write_string>
	nokia_lcd_set_cursor(0, 20);
    1bb6:	64 e1       	ldi	r22, 0x14	; 20
    1bb8:	80 e0       	ldi	r24, 0x00	; 0
    1bba:	0e 94 bd 04 	call	0x97a	; 0x97a <nokia_lcd_set_cursor>
	
	unsigned short highScoreLength = getLength(highScore);
    1bbe:	80 91 48 03 	lds	r24, 0x0348	; 0x800348 <highScore>
    1bc2:	88 2f       	mov	r24, r24
    1bc4:	90 e0       	ldi	r25, 0x00	; 0
    1bc6:	4f df       	rcall	.-354    	; 0x1a66 <getLength>
    1bc8:	9a 83       	std	Y+2, r25	; 0x02
    1bca:	89 83       	std	Y+1, r24	; 0x01
	char highScoreString[highScoreLength];
    1bcc:	89 81       	ldd	r24, Y+1	; 0x01
    1bce:	9a 81       	ldd	r25, Y+2	; 0x02
    1bd0:	9c 01       	movw	r18, r24
    1bd2:	21 50       	subi	r18, 0x01	; 1
    1bd4:	31 09       	sbc	r19, r1
    1bd6:	3c 83       	std	Y+4, r19	; 0x04
    1bd8:	2b 83       	std	Y+3, r18	; 0x03
    1bda:	2d b7       	in	r18, 0x3d	; 61
    1bdc:	3e b7       	in	r19, 0x3e	; 62
    1bde:	28 1b       	sub	r18, r24
    1be0:	39 0b       	sbc	r19, r25
    1be2:	0f b6       	in	r0, 0x3f	; 63
    1be4:	f8 94       	cli
    1be6:	3e bf       	out	0x3e, r19	; 62
    1be8:	0f be       	out	0x3f, r0	; 63
    1bea:	2d bf       	out	0x3d, r18	; 61
    1bec:	8d b7       	in	r24, 0x3d	; 61
    1bee:	9e b7       	in	r25, 0x3e	; 62
    1bf0:	01 96       	adiw	r24, 0x01	; 1
    1bf2:	9e 83       	std	Y+6, r25	; 0x06
    1bf4:	8d 83       	std	Y+5, r24	; 0x05
	getString(highScore, highScoreString, highScoreLength);
    1bf6:	49 81       	ldd	r20, Y+1	; 0x01
    1bf8:	5a 81       	ldd	r21, Y+2	; 0x02
    1bfa:	2d 81       	ldd	r18, Y+5	; 0x05
    1bfc:	3e 81       	ldd	r19, Y+6	; 0x06
    1bfe:	80 91 48 03 	lds	r24, 0x0348	; 0x800348 <highScore>
    1c02:	88 2f       	mov	r24, r24
    1c04:	90 e0       	ldi	r25, 0x00	; 0
    1c06:	b9 01       	movw	r22, r18
    1c08:	5a df       	rcall	.-332    	; 0x1abe <getString>
	nokia_lcd_write_string(highScoreString, 1);
    1c0a:	8d 81       	ldd	r24, Y+5	; 0x05
    1c0c:	9e 81       	ldd	r25, Y+6	; 0x06
    1c0e:	61 e0       	ldi	r22, 0x01	; 1
    1c10:	0e 94 9b 04 	call	0x936	; 0x936 <nokia_lcd_write_string>

	nokia_lcd_set_cursor(0, 30);
    1c14:	6e e1       	ldi	r22, 0x1E	; 30
    1c16:	80 e0       	ldi	r24, 0x00	; 0
    1c18:	0e 94 bd 04 	call	0x97a	; 0x97a <nokia_lcd_set_cursor>
	nokia_lcd_write_string("Random seed:", 1);
    1c1c:	61 e0       	ldi	r22, 0x01	; 1
    1c1e:	8d e1       	ldi	r24, 0x1D	; 29
    1c20:	91 e0       	ldi	r25, 0x01	; 1
    1c22:	0e 94 9b 04 	call	0x936	; 0x936 <nokia_lcd_write_string>

	unsigned short rndLength = getLength(rnd);
    1c26:	80 91 49 03 	lds	r24, 0x0349	; 0x800349 <rnd>
    1c2a:	88 2f       	mov	r24, r24
    1c2c:	90 e0       	ldi	r25, 0x00	; 0
    1c2e:	1b df       	rcall	.-458    	; 0x1a66 <getLength>
    1c30:	98 87       	std	Y+8, r25	; 0x08
    1c32:	8f 83       	std	Y+7, r24	; 0x07
	char rndString[rndLength];
    1c34:	8f 81       	ldd	r24, Y+7	; 0x07
    1c36:	98 85       	ldd	r25, Y+8	; 0x08
    1c38:	9c 01       	movw	r18, r24
    1c3a:	21 50       	subi	r18, 0x01	; 1
    1c3c:	31 09       	sbc	r19, r1
    1c3e:	3a 87       	std	Y+10, r19	; 0x0a
    1c40:	29 87       	std	Y+9, r18	; 0x09
    1c42:	ed b7       	in	r30, 0x3d	; 61
    1c44:	fe b7       	in	r31, 0x3e	; 62
    1c46:	e8 1b       	sub	r30, r24
    1c48:	f9 0b       	sbc	r31, r25
    1c4a:	0f b6       	in	r0, 0x3f	; 63
    1c4c:	f8 94       	cli
    1c4e:	fe bf       	out	0x3e, r31	; 62
    1c50:	0f be       	out	0x3f, r0	; 63
    1c52:	ed bf       	out	0x3d, r30	; 61
    1c54:	8d b7       	in	r24, 0x3d	; 61
    1c56:	9e b7       	in	r25, 0x3e	; 62
    1c58:	01 96       	adiw	r24, 0x01	; 1
    1c5a:	9c 87       	std	Y+12, r25	; 0x0c
    1c5c:	8b 87       	std	Y+11, r24	; 0x0b
	getString(rnd, rndString, rndLength);
    1c5e:	4f 81       	ldd	r20, Y+7	; 0x07
    1c60:	58 85       	ldd	r21, Y+8	; 0x08
    1c62:	2b 85       	ldd	r18, Y+11	; 0x0b
    1c64:	3c 85       	ldd	r19, Y+12	; 0x0c
    1c66:	80 91 49 03 	lds	r24, 0x0349	; 0x800349 <rnd>
    1c6a:	88 2f       	mov	r24, r24
    1c6c:	90 e0       	ldi	r25, 0x00	; 0
    1c6e:	b9 01       	movw	r22, r18
    1c70:	26 df       	rcall	.-436    	; 0x1abe <getString>

	nokia_lcd_set_cursor(0, 40);
    1c72:	68 e2       	ldi	r22, 0x28	; 40
    1c74:	80 e0       	ldi	r24, 0x00	; 0
    1c76:	0e 94 bd 04 	call	0x97a	; 0x97a <nokia_lcd_set_cursor>
	nokia_lcd_write_string(rndString, 1);
    1c7a:	8b 85       	ldd	r24, Y+11	; 0x0b
    1c7c:	9c 85       	ldd	r25, Y+12	; 0x0c
    1c7e:	61 e0       	ldi	r22, 0x01	; 1
    1c80:	0e 94 9b 04 	call	0x936	; 0x936 <nokia_lcd_write_string>

	nokia_lcd_render();
    1c84:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <nokia_lcd_render>


	char pressed = ~PIN_BUTTONS;
    1c88:	89 e2       	ldi	r24, 0x29	; 41
    1c8a:	90 e0       	ldi	r25, 0x00	; 0
    1c8c:	fc 01       	movw	r30, r24
    1c8e:	80 81       	ld	r24, Z
    1c90:	80 95       	com	r24
    1c92:	8d 87       	std	Y+13, r24	; 0x0d
	//static char pressed_prev = 0;
	//char justPressed = pressed & ~pressed_prev;
	switch(pressed) {
    1c94:	8d 85       	ldd	r24, Y+13	; 0x0d
    1c96:	88 2f       	mov	r24, r24
    1c98:	90 e0       	ldi	r25, 0x00	; 0
    1c9a:	09 2e       	mov	r0, r25
    1c9c:	00 0c       	add	r0, r0
    1c9e:	aa 0b       	sbc	r26, r26
    1ca0:	bb 0b       	sbc	r27, r27
    1ca2:	41 e0       	ldi	r20, 0x01	; 1
    1ca4:	50 e0       	ldi	r21, 0x00	; 0
    1ca6:	26 e0       	ldi	r18, 0x06	; 6
    1ca8:	30 e0       	ldi	r19, 0x00	; 0
    1caa:	84 1b       	sub	r24, r20
    1cac:	95 0b       	sbc	r25, r21
    1cae:	28 17       	cp	r18, r24
    1cb0:	39 07       	cpc	r19, r25
    1cb2:	38 f1       	brcs	.+78     	; 0x1d02 <UpdateTitle+0x192>
    1cb4:	8a 5b       	subi	r24, 0xBA	; 186
    1cb6:	9f 4f       	sbci	r25, 0xFF	; 255
    1cb8:	fc 01       	movw	r30, r24
    1cba:	44 c6       	rjmp	.+3208   	; 0x2944 <__tablejump2__>
		case 1:	//Right
			rnd++;
    1cbc:	80 91 49 03 	lds	r24, 0x0349	; 0x800349 <rnd>
    1cc0:	8f 5f       	subi	r24, 0xFF	; 255
    1cc2:	80 93 49 03 	sts	0x0349, r24	; 0x800349 <rnd>
			break;
    1cc6:	1d c0       	rjmp	.+58     	; 0x1d02 <UpdateTitle+0x192>
		case 2:	//Middle
			screenState = Game;
    1cc8:	81 e0       	ldi	r24, 0x01	; 1
    1cca:	80 93 67 04 	sts	0x0467, r24	; 0x800467 <screenState>
			break;
    1cce:	19 c0       	rjmp	.+50     	; 0x1d02 <UpdateTitle+0x192>
		case 3:	//Middle + Right
			break;
		case 4:	//Left
			rnd--;
    1cd0:	80 91 49 03 	lds	r24, 0x0349	; 0x800349 <rnd>
    1cd4:	81 50       	subi	r24, 0x01	; 1
    1cd6:	80 93 49 03 	sts	0x0349, r24	; 0x800349 <rnd>
			break;
		case 5:	//Left + Right
			srand(rnd);
    1cda:	13 c0       	rjmp	.+38     	; 0x1d02 <UpdateTitle+0x192>
    1cdc:	80 91 49 03 	lds	r24, 0x0349	; 0x800349 <rnd>
    1ce0:	88 2f       	mov	r24, r24
    1ce2:	90 e0       	ldi	r25, 0x00	; 0
			rnd = rand();
    1ce4:	96 d6       	rcall	.+3372   	; 0x2a12 <srand>
    1ce6:	92 d6       	rcall	.+3364   	; 0x2a0c <rand>
    1ce8:	80 93 49 03 	sts	0x0349, r24	; 0x800349 <rnd>
			break;
    1cec:	0a c0       	rjmp	.+20     	; 0x1d02 <UpdateTitle+0x192>
		case 6:	//Left + Middle
			
			break;
		case 7:	//Left + Middle + Right
			highScore = 0;
    1cee:	10 92 48 03 	sts	0x0348, r1	; 0x800348 <highScore>
			store(0xFF, highScore);
    1cf2:	80 91 48 03 	lds	r24, 0x0348	; 0x800348 <highScore>
    1cf6:	68 2f       	mov	r22, r24
    1cf8:	8f ef       	ldi	r24, 0xFF	; 255
    1cfa:	0e 94 c0 05 	call	0xb80	; 0xb80 <store>
			break;
    1cfe:	01 c0       	rjmp	.+2      	; 0x1d02 <UpdateTitle+0x192>
			break;
		case 2:	//Middle
			screenState = Game;
			break;
		case 3:	//Middle + Right
			break;
    1d00:	00 00       	nop
    1d02:	0f b6       	in	r0, 0x3f	; 63
    1d04:	f8 94       	cli
    1d06:	fe be       	out	0x3e, r15	; 62
    1d08:	0f be       	out	0x3f, r0	; 63
    1d0a:	ed be       	out	0x3d, r14	; 61
			highScore = 0;
			store(0xFF, highScore);
			break;
	}
	//pressed_prev = pressed;
}
    1d0c:	00 00       	nop
    1d0e:	0f b6       	in	r0, 0x3f	; 63
    1d10:	f8 94       	cli
    1d12:	1e bf       	out	0x3e, r17	; 62
    1d14:	0f be       	out	0x3f, r0	; 63
    1d16:	0d bf       	out	0x3d, r16	; 61
    1d18:	2d 96       	adiw	r28, 0x0d	; 13
    1d1a:	0f b6       	in	r0, 0x3f	; 63
    1d1c:	f8 94       	cli
    1d1e:	de bf       	out	0x3e, r29	; 62
    1d20:	0f be       	out	0x3f, r0	; 63
    1d22:	cd bf       	out	0x3d, r28	; 61
    1d24:	df 91       	pop	r29
    1d26:	cf 91       	pop	r28
    1d28:	1f 91       	pop	r17
    1d2a:	0f 91       	pop	r16
    1d2c:	ff 90       	pop	r15
    1d2e:	ef 90       	pop	r14
    1d30:	08 95       	ret

00001d32 <UpdateFinalScore>:
void UpdateFinalScore() {
    1d32:	ef 92       	push	r14
    1d34:	ff 92       	push	r15
    1d36:	0f 93       	push	r16
    1d38:	1f 93       	push	r17
    1d3a:	cf 93       	push	r28
    1d3c:	df 93       	push	r29
    1d3e:	cd b7       	in	r28, 0x3d	; 61
    1d40:	de b7       	in	r29, 0x3e	; 62
    1d42:	2e 97       	sbiw	r28, 0x0e	; 14
    1d44:	0f b6       	in	r0, 0x3f	; 63
    1d46:	f8 94       	cli
    1d48:	de bf       	out	0x3e, r29	; 62
    1d4a:	0f be       	out	0x3f, r0	; 63
    1d4c:	cd bf       	out	0x3d, r28	; 61
			store(0xFF, highScore);
			screenState = Title;
			break;
	}
	pressed_prev = pressed;
}
    1d4e:	0d b7       	in	r16, 0x3d	; 61
    1d50:	1e b7       	in	r17, 0x3e	; 62
			store(0xFF, highScore);
			break;
	}
	//pressed_prev = pressed;
}
void UpdateFinalScore() {
    1d52:	8d b7       	in	r24, 0x3d	; 61
    1d54:	9e b7       	in	r25, 0x3e	; 62
    1d56:	7c 01       	movw	r14, r24
	
	nokia_lcd_clear();
    1d58:	0e 94 6c 03 	call	0x6d8	; 0x6d8 <nokia_lcd_clear>
	nokia_lcd_write_string("Your score: ", 1);
    1d5c:	61 e0       	ldi	r22, 0x01	; 1
    1d5e:	8a e2       	ldi	r24, 0x2A	; 42
    1d60:	91 e0       	ldi	r25, 0x01	; 1
    1d62:	0e 94 9b 04 	call	0x936	; 0x936 <nokia_lcd_write_string>
	nokia_lcd_set_cursor(0, 10);
    1d66:	6a e0       	ldi	r22, 0x0A	; 10
    1d68:	80 e0       	ldi	r24, 0x00	; 0
    1d6a:	0e 94 bd 04 	call	0x97a	; 0x97a <nokia_lcd_set_cursor>

	unsigned short scoreLength = getLength(score);
    1d6e:	80 91 47 03 	lds	r24, 0x0347	; 0x800347 <score>
    1d72:	88 2f       	mov	r24, r24
    1d74:	90 e0       	ldi	r25, 0x00	; 0
    1d76:	77 de       	rcall	.-786    	; 0x1a66 <getLength>
    1d78:	9a 83       	std	Y+2, r25	; 0x02
    1d7a:	89 83       	std	Y+1, r24	; 0x01
	char scoreString[scoreLength];
    1d7c:	89 81       	ldd	r24, Y+1	; 0x01
    1d7e:	9a 81       	ldd	r25, Y+2	; 0x02
    1d80:	9c 01       	movw	r18, r24
    1d82:	21 50       	subi	r18, 0x01	; 1
    1d84:	31 09       	sbc	r19, r1
    1d86:	3c 83       	std	Y+4, r19	; 0x04
    1d88:	2b 83       	std	Y+3, r18	; 0x03
    1d8a:	2d b7       	in	r18, 0x3d	; 61
    1d8c:	3e b7       	in	r19, 0x3e	; 62
    1d8e:	28 1b       	sub	r18, r24
    1d90:	39 0b       	sbc	r19, r25
    1d92:	0f b6       	in	r0, 0x3f	; 63
    1d94:	f8 94       	cli
    1d96:	3e bf       	out	0x3e, r19	; 62
    1d98:	0f be       	out	0x3f, r0	; 63
    1d9a:	2d bf       	out	0x3d, r18	; 61
    1d9c:	8d b7       	in	r24, 0x3d	; 61
    1d9e:	9e b7       	in	r25, 0x3e	; 62
    1da0:	01 96       	adiw	r24, 0x01	; 1
    1da2:	9e 83       	std	Y+6, r25	; 0x06
    1da4:	8d 83       	std	Y+5, r24	; 0x05
	getString(score, scoreString, scoreLength);
    1da6:	49 81       	ldd	r20, Y+1	; 0x01
    1da8:	5a 81       	ldd	r21, Y+2	; 0x02
    1daa:	2d 81       	ldd	r18, Y+5	; 0x05
    1dac:	3e 81       	ldd	r19, Y+6	; 0x06
    1dae:	80 91 47 03 	lds	r24, 0x0347	; 0x800347 <score>
    1db2:	88 2f       	mov	r24, r24
    1db4:	90 e0       	ldi	r25, 0x00	; 0
    1db6:	b9 01       	movw	r22, r18
    1db8:	82 de       	rcall	.-764    	; 0x1abe <getString>
	nokia_lcd_write_string(scoreString, 1);
    1dba:	8d 81       	ldd	r24, Y+5	; 0x05
    1dbc:	9e 81       	ldd	r25, Y+6	; 0x06
    1dbe:	61 e0       	ldi	r22, 0x01	; 1
    1dc0:	0e 94 9b 04 	call	0x936	; 0x936 <nokia_lcd_write_string>

	nokia_lcd_set_cursor(0, 20);
    1dc4:	64 e1       	ldi	r22, 0x14	; 20
    1dc6:	80 e0       	ldi	r24, 0x00	; 0
    1dc8:	0e 94 bd 04 	call	0x97a	; 0x97a <nokia_lcd_set_cursor>
	nokia_lcd_write_string("High score: ", 1);
    1dcc:	61 e0       	ldi	r22, 0x01	; 1
    1dce:	80 e1       	ldi	r24, 0x10	; 16
    1dd0:	91 e0       	ldi	r25, 0x01	; 1
    1dd2:	0e 94 9b 04 	call	0x936	; 0x936 <nokia_lcd_write_string>
	nokia_lcd_set_cursor(0, 30);
    1dd6:	6e e1       	ldi	r22, 0x1E	; 30
    1dd8:	80 e0       	ldi	r24, 0x00	; 0
    1dda:	0e 94 bd 04 	call	0x97a	; 0x97a <nokia_lcd_set_cursor>
	
	unsigned short highScoreLength = getLength(highScore);
    1dde:	80 91 48 03 	lds	r24, 0x0348	; 0x800348 <highScore>
    1de2:	88 2f       	mov	r24, r24
    1de4:	90 e0       	ldi	r25, 0x00	; 0
    1de6:	3f de       	rcall	.-898    	; 0x1a66 <getLength>
    1de8:	98 87       	std	Y+8, r25	; 0x08
    1dea:	8f 83       	std	Y+7, r24	; 0x07
	char highScoreString[highScoreLength];
    1dec:	8f 81       	ldd	r24, Y+7	; 0x07
    1dee:	98 85       	ldd	r25, Y+8	; 0x08
    1df0:	9c 01       	movw	r18, r24
    1df2:	21 50       	subi	r18, 0x01	; 1
    1df4:	31 09       	sbc	r19, r1
    1df6:	3a 87       	std	Y+10, r19	; 0x0a
    1df8:	29 87       	std	Y+9, r18	; 0x09
    1dfa:	ed b7       	in	r30, 0x3d	; 61
    1dfc:	fe b7       	in	r31, 0x3e	; 62
    1dfe:	e8 1b       	sub	r30, r24
    1e00:	f9 0b       	sbc	r31, r25
    1e02:	0f b6       	in	r0, 0x3f	; 63
    1e04:	f8 94       	cli
    1e06:	fe bf       	out	0x3e, r31	; 62
    1e08:	0f be       	out	0x3f, r0	; 63
    1e0a:	ed bf       	out	0x3d, r30	; 61
    1e0c:	8d b7       	in	r24, 0x3d	; 61
    1e0e:	9e b7       	in	r25, 0x3e	; 62
    1e10:	01 96       	adiw	r24, 0x01	; 1
    1e12:	9c 87       	std	Y+12, r25	; 0x0c
    1e14:	8b 87       	std	Y+11, r24	; 0x0b
	getString(highScore, highScoreString, highScoreLength);
    1e16:	4f 81       	ldd	r20, Y+7	; 0x07
    1e18:	58 85       	ldd	r21, Y+8	; 0x08
    1e1a:	2b 85       	ldd	r18, Y+11	; 0x0b
    1e1c:	3c 85       	ldd	r19, Y+12	; 0x0c
    1e1e:	80 91 48 03 	lds	r24, 0x0348	; 0x800348 <highScore>
    1e22:	88 2f       	mov	r24, r24
    1e24:	90 e0       	ldi	r25, 0x00	; 0
    1e26:	b9 01       	movw	r22, r18
    1e28:	4a de       	rcall	.-876    	; 0x1abe <getString>
	nokia_lcd_write_string(highScoreString, 1);
    1e2a:	8b 85       	ldd	r24, Y+11	; 0x0b
    1e2c:	9c 85       	ldd	r25, Y+12	; 0x0c
    1e2e:	61 e0       	ldi	r22, 0x01	; 1
    1e30:	0e 94 9b 04 	call	0x936	; 0x936 <nokia_lcd_write_string>

	nokia_lcd_set_cursor(0, 40);
    1e34:	68 e2       	ldi	r22, 0x28	; 40
    1e36:	80 e0       	ldi	r24, 0x00	; 0
    1e38:	0e 94 bd 04 	call	0x97a	; 0x97a <nokia_lcd_set_cursor>
	if(score > highScore) {
    1e3c:	90 91 47 03 	lds	r25, 0x0347	; 0x800347 <score>
    1e40:	80 91 48 03 	lds	r24, 0x0348	; 0x800348 <highScore>
    1e44:	89 17       	cp	r24, r25
    1e46:	28 f4       	brcc	.+10     	; 0x1e52 <UpdateFinalScore+0x120>
		nokia_lcd_write_string("New high score!", 1);	
    1e48:	61 e0       	ldi	r22, 0x01	; 1
    1e4a:	87 e3       	ldi	r24, 0x37	; 55
    1e4c:	91 e0       	ldi	r25, 0x01	; 1
    1e4e:	0e 94 9b 04 	call	0x936	; 0x936 <nokia_lcd_write_string>
	}

	nokia_lcd_render();
    1e52:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <nokia_lcd_render>


	char pressed = ~PIN_BUTTONS;
    1e56:	89 e2       	ldi	r24, 0x29	; 41
    1e58:	90 e0       	ldi	r25, 0x00	; 0
    1e5a:	fc 01       	movw	r30, r24
    1e5c:	80 81       	ld	r24, Z
    1e5e:	80 95       	com	r24
    1e60:	8d 87       	std	Y+13, r24	; 0x0d
	static char pressed_prev = 0;
	char justPressed = pressed & ~pressed_prev;
    1e62:	80 91 4a 03 	lds	r24, 0x034A	; 0x80034a <pressed_prev.2307>
    1e66:	98 2f       	mov	r25, r24
    1e68:	90 95       	com	r25
    1e6a:	8d 85       	ldd	r24, Y+13	; 0x0d
    1e6c:	89 23       	and	r24, r25
    1e6e:	8e 87       	std	Y+14, r24	; 0x0e
	switch(justPressed) {
    1e70:	8e 85       	ldd	r24, Y+14	; 0x0e
    1e72:	88 2f       	mov	r24, r24
    1e74:	90 e0       	ldi	r25, 0x00	; 0
    1e76:	89 2b       	or	r24, r25
    1e78:	91 f0       	breq	.+36     	; 0x1e9e <UpdateFinalScore+0x16c>
		case 0: break;
		default:
			highScore = highScore > score ? highScore : score;
    1e7a:	80 91 47 03 	lds	r24, 0x0347	; 0x800347 <score>
    1e7e:	90 91 48 03 	lds	r25, 0x0348	; 0x800348 <highScore>
    1e82:	89 17       	cp	r24, r25
    1e84:	08 f4       	brcc	.+2      	; 0x1e88 <UpdateFinalScore+0x156>
    1e86:	89 2f       	mov	r24, r25
    1e88:	80 93 48 03 	sts	0x0348, r24	; 0x800348 <highScore>
			store(0xFF, highScore);
    1e8c:	80 91 48 03 	lds	r24, 0x0348	; 0x800348 <highScore>
    1e90:	68 2f       	mov	r22, r24
    1e92:	8f ef       	ldi	r24, 0xFF	; 255
    1e94:	0e 94 c0 05 	call	0xb80	; 0xb80 <store>
			screenState = Title;
    1e98:	10 92 67 04 	sts	0x0467, r1	; 0x800467 <screenState>
			break;
    1e9c:	01 c0       	rjmp	.+2      	; 0x1ea0 <UpdateFinalScore+0x16e>

	char pressed = ~PIN_BUTTONS;
	static char pressed_prev = 0;
	char justPressed = pressed & ~pressed_prev;
	switch(justPressed) {
		case 0: break;
    1e9e:	00 00       	nop
			highScore = highScore > score ? highScore : score;
			store(0xFF, highScore);
			screenState = Title;
			break;
	}
	pressed_prev = pressed;
    1ea0:	8d 85       	ldd	r24, Y+13	; 0x0d
    1ea2:	80 93 4a 03 	sts	0x034A, r24	; 0x80034a <pressed_prev.2307>
    1ea6:	0f b6       	in	r0, 0x3f	; 63
    1ea8:	f8 94       	cli
    1eaa:	fe be       	out	0x3e, r15	; 62
    1eac:	0f be       	out	0x3f, r0	; 63
    1eae:	ed be       	out	0x3d, r14	; 61
}
    1eb0:	00 00       	nop
    1eb2:	0f b6       	in	r0, 0x3f	; 63
    1eb4:	f8 94       	cli
    1eb6:	1e bf       	out	0x3e, r17	; 62
    1eb8:	0f be       	out	0x3f, r0	; 63
    1eba:	0d bf       	out	0x3d, r16	; 61
    1ebc:	2e 96       	adiw	r28, 0x0e	; 14
    1ebe:	0f b6       	in	r0, 0x3f	; 63
    1ec0:	f8 94       	cli
    1ec2:	de bf       	out	0x3e, r29	; 62
    1ec4:	0f be       	out	0x3f, r0	; 63
    1ec6:	cd bf       	out	0x3d, r28	; 61
    1ec8:	df 91       	pop	r29
    1eca:	cf 91       	pop	r28
    1ecc:	1f 91       	pop	r17
    1ece:	0f 91       	pop	r16
    1ed0:	ff 90       	pop	r15
    1ed2:	ef 90       	pop	r14
    1ed4:	08 95       	ret

00001ed6 <drawTile>:
//Draws a world tile as a 4x4 block on a vertical screen
void drawTile(short x, short y, short fill) {
    1ed6:	cf 93       	push	r28
    1ed8:	df 93       	push	r29
    1eda:	cd b7       	in	r28, 0x3d	; 61
    1edc:	de b7       	in	r29, 0x3e	; 62
    1ede:	2a 97       	sbiw	r28, 0x0a	; 10
    1ee0:	0f b6       	in	r0, 0x3f	; 63
    1ee2:	f8 94       	cli
    1ee4:	de bf       	out	0x3e, r29	; 62
    1ee6:	0f be       	out	0x3f, r0	; 63
    1ee8:	cd bf       	out	0x3d, r28	; 61
    1eea:	9e 83       	std	Y+6, r25	; 0x06
    1eec:	8d 83       	std	Y+5, r24	; 0x05
    1eee:	78 87       	std	Y+8, r23	; 0x08
    1ef0:	6f 83       	std	Y+7, r22	; 0x07
    1ef2:	5a 87       	std	Y+10, r21	; 0x0a
    1ef4:	49 87       	std	Y+9, r20	; 0x09
	for(short xi = 0; xi < 4; xi++) {
    1ef6:	1a 82       	std	Y+2, r1	; 0x02
    1ef8:	19 82       	std	Y+1, r1	; 0x01
    1efa:	23 c0       	rjmp	.+70     	; 0x1f42 <drawTile+0x6c>
		for(short yi = 0; yi < 4; yi++) {
    1efc:	1c 82       	std	Y+4, r1	; 0x04
    1efe:	1b 82       	std	Y+3, r1	; 0x03
    1f00:	17 c0       	rjmp	.+46     	; 0x1f30 <drawTile+0x5a>
			nokia_lcd_set_pixel(y*4 + yi, x*4 + xi, fill);
    1f02:	39 85       	ldd	r19, Y+9	; 0x09
    1f04:	8d 81       	ldd	r24, Y+5	; 0x05
    1f06:	98 2f       	mov	r25, r24
    1f08:	99 0f       	add	r25, r25
    1f0a:	99 0f       	add	r25, r25
    1f0c:	89 81       	ldd	r24, Y+1	; 0x01
    1f0e:	29 2f       	mov	r18, r25
    1f10:	28 0f       	add	r18, r24
    1f12:	8f 81       	ldd	r24, Y+7	; 0x07
    1f14:	98 2f       	mov	r25, r24
    1f16:	99 0f       	add	r25, r25
    1f18:	99 0f       	add	r25, r25
    1f1a:	8b 81       	ldd	r24, Y+3	; 0x03
    1f1c:	89 0f       	add	r24, r25
    1f1e:	43 2f       	mov	r20, r19
    1f20:	62 2f       	mov	r22, r18
    1f22:	0e 94 8e 03 	call	0x71c	; 0x71c <nokia_lcd_set_pixel>
	pressed_prev = pressed;
}
//Draws a world tile as a 4x4 block on a vertical screen
void drawTile(short x, short y, short fill) {
	for(short xi = 0; xi < 4; xi++) {
		for(short yi = 0; yi < 4; yi++) {
    1f26:	8b 81       	ldd	r24, Y+3	; 0x03
    1f28:	9c 81       	ldd	r25, Y+4	; 0x04
    1f2a:	01 96       	adiw	r24, 0x01	; 1
    1f2c:	9c 83       	std	Y+4, r25	; 0x04
    1f2e:	8b 83       	std	Y+3, r24	; 0x03
    1f30:	8b 81       	ldd	r24, Y+3	; 0x03
    1f32:	9c 81       	ldd	r25, Y+4	; 0x04
    1f34:	04 97       	sbiw	r24, 0x04	; 4
    1f36:	2c f3       	brlt	.-54     	; 0x1f02 <drawTile+0x2c>
	}
	pressed_prev = pressed;
}
//Draws a world tile as a 4x4 block on a vertical screen
void drawTile(short x, short y, short fill) {
	for(short xi = 0; xi < 4; xi++) {
    1f38:	89 81       	ldd	r24, Y+1	; 0x01
    1f3a:	9a 81       	ldd	r25, Y+2	; 0x02
    1f3c:	01 96       	adiw	r24, 0x01	; 1
    1f3e:	9a 83       	std	Y+2, r25	; 0x02
    1f40:	89 83       	std	Y+1, r24	; 0x01
    1f42:	89 81       	ldd	r24, Y+1	; 0x01
    1f44:	9a 81       	ldd	r25, Y+2	; 0x02
    1f46:	04 97       	sbiw	r24, 0x04	; 4
    1f48:	cc f2       	brlt	.-78     	; 0x1efc <drawTile+0x26>
		for(short yi = 0; yi < 4; yi++) {
			nokia_lcd_set_pixel(y*4 + yi, x*4 + xi, fill);
		}
	}
}
    1f4a:	00 00       	nop
    1f4c:	2a 96       	adiw	r28, 0x0a	; 10
    1f4e:	0f b6       	in	r0, 0x3f	; 63
    1f50:	f8 94       	cli
    1f52:	de bf       	out	0x3e, r29	; 62
    1f54:	0f be       	out	0x3f, r0	; 63
    1f56:	cd bf       	out	0x3d, r28	; 61
    1f58:	df 91       	pop	r29
    1f5a:	cf 91       	pop	r28
    1f5c:	08 95       	ret

00001f5e <UpdateGame>:
void UpdateGame() {
    1f5e:	cf 93       	push	r28
    1f60:	df 93       	push	r29
    1f62:	cd b7       	in	r28, 0x3d	; 61
    1f64:	de b7       	in	r29, 0x3e	; 62
    1f66:	c1 55       	subi	r28, 0x51	; 81
    1f68:	d1 09       	sbc	r29, r1
    1f6a:	0f b6       	in	r0, 0x3f	; 63
    1f6c:	f8 94       	cli
    1f6e:	de bf       	out	0x3e, r29	; 62
    1f70:	0f be       	out	0x3f, r0	; 63
    1f72:	cd bf       	out	0x3d, r28	; 61
	const short standardInterval = 10;
    1f74:	8a e0       	ldi	r24, 0x0A	; 10
    1f76:	90 e0       	ldi	r25, 0x00	; 0
    1f78:	9c 8f       	std	Y+28, r25	; 0x1c
    1f7a:	8b 8f       	std	Y+27, r24	; 0x1b
	static short placed = 0;
	static short fall = 0;

	static short time = 0;

	if(--time > 0) {
    1f7c:	80 91 4b 03 	lds	r24, 0x034B	; 0x80034b <time.2337>
    1f80:	90 91 4c 03 	lds	r25, 0x034C	; 0x80034c <time.2337+0x1>
    1f84:	01 97       	sbiw	r24, 0x01	; 1
    1f86:	90 93 4c 03 	sts	0x034C, r25	; 0x80034c <time.2337+0x1>
    1f8a:	80 93 4b 03 	sts	0x034B, r24	; 0x80034b <time.2337>
    1f8e:	80 91 4b 03 	lds	r24, 0x034B	; 0x80034b <time.2337>
    1f92:	90 91 4c 03 	lds	r25, 0x034C	; 0x80034c <time.2337+0x1>
    1f96:	18 16       	cp	r1, r24
    1f98:	19 06       	cpc	r1, r25
    1f9a:	0c f4       	brge	.+2      	; 0x1f9e <UpdateGame+0x40>
    1f9c:	57 c3       	rjmp	.+1710   	; 0x264c <UpdateGame+0x6ee>
		return;
	}
	switch(gameState) {
    1f9e:	80 91 4d 03 	lds	r24, 0x034D	; 0x80034d <gameState.2330>
    1fa2:	88 2f       	mov	r24, r24
    1fa4:	90 e0       	ldi	r25, 0x00	; 0
    1fa6:	82 30       	cpi	r24, 0x02	; 2
    1fa8:	91 05       	cpc	r25, r1
    1faa:	09 f4       	brne	.+2      	; 0x1fae <UpdateGame+0x50>
    1fac:	4e c1       	rjmp	.+668    	; 0x224a <UpdateGame+0x2ec>
    1fae:	83 30       	cpi	r24, 0x03	; 3
    1fb0:	91 05       	cpc	r25, r1
    1fb2:	34 f4       	brge	.+12     	; 0x1fc0 <UpdateGame+0x62>
    1fb4:	00 97       	sbiw	r24, 0x00	; 0
    1fb6:	81 f0       	breq	.+32     	; 0x1fd8 <UpdateGame+0x7a>
    1fb8:	01 97       	sbiw	r24, 0x01	; 1
    1fba:	09 f4       	brne	.+2      	; 0x1fbe <UpdateGame+0x60>
    1fbc:	3f c0       	rjmp	.+126    	; 0x203c <UpdateGame+0xde>
    1fbe:	fb c1       	rjmp	.+1014   	; 0x23b6 <UpdateGame+0x458>
    1fc0:	84 30       	cpi	r24, 0x04	; 4
    1fc2:	91 05       	cpc	r25, r1
    1fc4:	09 f4       	brne	.+2      	; 0x1fc8 <UpdateGame+0x6a>
    1fc6:	b4 c1       	rjmp	.+872    	; 0x2330 <UpdateGame+0x3d2>
    1fc8:	84 30       	cpi	r24, 0x04	; 4
    1fca:	91 05       	cpc	r25, r1
    1fcc:	0c f4       	brge	.+2      	; 0x1fd0 <UpdateGame+0x72>
    1fce:	47 c1       	rjmp	.+654    	; 0x225e <UpdateGame+0x300>
    1fd0:	05 97       	sbiw	r24, 0x05	; 5
    1fd2:	09 f4       	brne	.+2      	; 0x1fd6 <UpdateGame+0x78>
    1fd4:	e6 c1       	rjmp	.+972    	; 0x23a2 <UpdateGame+0x444>
    1fd6:	ef c1       	rjmp	.+990    	; 0x23b6 <UpdateGame+0x458>
	case Init: {
		clear(&g);
    1fd8:	8e e4       	ldi	r24, 0x4E	; 78
    1fda:	93 e0       	ldi	r25, 0x03	; 3
    1fdc:	51 da       	rcall	.-2910   	; 0x1480 <clear>
		t = CreateTetra();
    1fde:	ce 01       	movw	r24, r28
    1fe0:	ce 96       	adiw	r24, 0x3e	; 62
    1fe2:	38 d9       	rcall	.-3472   	; 0x1254 <CreateTetra>
    1fe4:	84 e1       	ldi	r24, 0x14	; 20
    1fe6:	fe 01       	movw	r30, r28
    1fe8:	fe 96       	adiw	r30, 0x3e	; 62
    1fea:	aa e4       	ldi	r26, 0x4A	; 74
    1fec:	b4 e0       	ldi	r27, 0x04	; 4
    1fee:	01 90       	ld	r0, Z+
    1ff0:	0d 92       	st	X+, r0
    1ff2:	8a 95       	dec	r24
    1ff4:	e1 f7       	brne	.-8      	; 0x1fee <UpdateGame+0x90>
		pressed_prev = 0;
    1ff6:	10 92 5e 04 	sts	0x045E, r1	; 0x80045e <pressed_prev.2331>
		hard_drop = 0;
    1ffa:	10 92 5f 04 	sts	0x045F, r1	; 0x80045f <hard_drop.2332>
		rowCleared = 0;
    1ffe:	10 92 61 04 	sts	0x0461, r1	; 0x800461 <rowCleared.2333+0x1>
    2002:	10 92 60 04 	sts	0x0460, r1	; 0x800460 <rowCleared.2333>
		rowState = 0;
    2006:	10 92 62 04 	sts	0x0462, r1	; 0x800462 <rowState.2334>
		placed = 0;
    200a:	10 92 64 04 	sts	0x0464, r1	; 0x800464 <placed.2335+0x1>
    200e:	10 92 63 04 	sts	0x0463, r1	; 0x800463 <placed.2335>
		fall = 0;
    2012:	10 92 66 04 	sts	0x0466, r1	; 0x800466 <fall.2336+0x1>
    2016:	10 92 65 04 	sts	0x0465, r1	; 0x800465 <fall.2336>
		time = standardInterval;
    201a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    201c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    201e:	90 93 4c 03 	sts	0x034C, r25	; 0x80034c <time.2337+0x1>
    2022:	80 93 4b 03 	sts	0x034B, r24	; 0x80034b <time.2337>
		//Reset the RNG
		srand(rnd);
    2026:	80 91 49 03 	lds	r24, 0x0349	; 0x800349 <rnd>
    202a:	88 2f       	mov	r24, r24
    202c:	90 e0       	ldi	r25, 0x00	; 0
    202e:	f1 d4       	rcall	.+2530   	; 0x2a12 <srand>
		//Reset the score
		score = 0;
    2030:	10 92 47 03 	sts	0x0347, r1	; 0x800347 <score>
		gameState = Play;
    2034:	81 e0       	ldi	r24, 0x01	; 1
    2036:	80 93 4d 03 	sts	0x034D, r24	; 0x80034d <gameState.2330>
		//To do: Reset all static variables so that they don't carry over from previous games
		break;
    203a:	bd c1       	rjmp	.+890    	; 0x23b6 <UpdateGame+0x458>
	} case Play: {
		//remove(&g, &t);			//Remove so that we can move

		char pressed = ~PIN_BUTTONS;
    203c:	89 e2       	ldi	r24, 0x29	; 41
    203e:	90 e0       	ldi	r25, 0x00	; 0
    2040:	fc 01       	movw	r30, r24
    2042:	80 81       	ld	r24, Z
    2044:	80 95       	com	r24
    2046:	8d 8f       	std	Y+29, r24	; 0x1d
		//char justPressed = pressed & ~pressed_prev;
		switch(pressed) {
    2048:	8d 8d       	ldd	r24, Y+29	; 0x1d
    204a:	88 2f       	mov	r24, r24
    204c:	90 e0       	ldi	r25, 0x00	; 0
    204e:	09 2e       	mov	r0, r25
    2050:	00 0c       	add	r0, r0
    2052:	aa 0b       	sbc	r26, r26
    2054:	bb 0b       	sbc	r27, r27
    2056:	41 e0       	ldi	r20, 0x01	; 1
    2058:	50 e0       	ldi	r21, 0x00	; 0
    205a:	26 e0       	ldi	r18, 0x06	; 6
    205c:	30 e0       	ldi	r19, 0x00	; 0
    205e:	84 1b       	sub	r24, r20
    2060:	95 0b       	sbc	r25, r21
    2062:	28 17       	cp	r18, r24
    2064:	39 07       	cpc	r19, r25
    2066:	70 f1       	brcs	.+92     	; 0x20c4 <UpdateGame+0x166>
    2068:	83 5b       	subi	r24, 0xB3	; 179
    206a:	9f 4f       	sbci	r25, 0xFF	; 255
    206c:	fc 01       	movw	r30, r24
    206e:	6a c4       	rjmp	.+2260   	; 0x2944 <__tablejump2__>
		case 1:	//Right
			tryShiftRight(&g, &t);
    2070:	6a e4       	ldi	r22, 0x4A	; 74
    2072:	74 e0       	ldi	r23, 0x04	; 4
    2074:	8e e4       	ldi	r24, 0x4E	; 78
    2076:	93 e0       	ldi	r25, 0x03	; 3
    2078:	68 dc       	rcall	.-1840   	; 0x194a <tryShiftRight>
			break;
		case 2:	//Middle
			tryMirror(&g, &t);
    207a:	24 c0       	rjmp	.+72     	; 0x20c4 <UpdateGame+0x166>
    207c:	6a e4       	ldi	r22, 0x4A	; 74
    207e:	74 e0       	ldi	r23, 0x04	; 4
    2080:	8e e4       	ldi	r24, 0x4E	; 78
    2082:	93 e0       	ldi	r25, 0x03	; 3
			break;
    2084:	ff db       	rcall	.-2050   	; 0x1884 <tryMirror>
		case 3:	//Middle + Right
			tryTurnCW(&g, &t);
    2086:	1e c0       	rjmp	.+60     	; 0x20c4 <UpdateGame+0x166>
    2088:	6a e4       	ldi	r22, 0x4A	; 74
    208a:	74 e0       	ldi	r23, 0x04	; 4
    208c:	8e e4       	ldi	r24, 0x4E	; 78
    208e:	93 e0       	ldi	r25, 0x03	; 3
			break;
    2090:	3b dc       	rcall	.-1930   	; 0x1908 <tryTurnCW>
		case 4:	//Left
			tryShiftLeft(&g, &t);
    2092:	18 c0       	rjmp	.+48     	; 0x20c4 <UpdateGame+0x166>
    2094:	6a e4       	ldi	r22, 0x4A	; 74
    2096:	74 e0       	ldi	r23, 0x04	; 4
    2098:	8e e4       	ldi	r24, 0x4E	; 78
    209a:	93 e0       	ldi	r25, 0x03	; 3
			break;
    209c:	77 dc       	rcall	.-1810   	; 0x198c <tryShiftLeft>
		case 5:	//Left + Right
			while(!land(&g, &t)) {
				down(&t);
    209e:	12 c0       	rjmp	.+36     	; 0x20c4 <UpdateGame+0x166>
    20a0:	8a e4       	ldi	r24, 0x4A	; 74
    20a2:	94 e0       	ldi	r25, 0x04	; 4
			break;
		case 4:	//Left
			tryShiftLeft(&g, &t);
			break;
		case 5:	//Left + Right
			while(!land(&g, &t)) {
    20a4:	00 d8       	rcall	.-4096   	; 0x10a6 <down>
    20a6:	6a e4       	ldi	r22, 0x4A	; 74
    20a8:	74 e0       	ldi	r23, 0x04	; 4
    20aa:	8e e4       	ldi	r24, 0x4E	; 78
    20ac:	93 e0       	ldi	r25, 0x03	; 3
    20ae:	9a db       	rcall	.-2252   	; 0x17e4 <land>
    20b0:	88 23       	and	r24, r24
				down(&t);
			}
			break;
    20b2:	b1 f3       	breq	.-20     	; 0x20a0 <UpdateGame+0x142>
		case 6:	//Left + Middle
			tryTurnCCW(&g, &t);
    20b4:	07 c0       	rjmp	.+14     	; 0x20c4 <UpdateGame+0x166>
    20b6:	6a e4       	ldi	r22, 0x4A	; 74
    20b8:	74 e0       	ldi	r23, 0x04	; 4
    20ba:	8e e4       	ldi	r24, 0x4E	; 78
    20bc:	93 e0       	ldi	r25, 0x03	; 3
    20be:	03 dc       	rcall	.-2042   	; 0x18c6 <tryTurnCCW>
			break;
    20c0:	01 c0       	rjmp	.+2      	; 0x20c4 <UpdateGame+0x166>
		case 7:	//Left + Middle + Right
			break;
    20c2:	00 00       	nop
		}
		pressed_prev = pressed;
    20c4:	8d 8d       	ldd	r24, Y+29	; 0x1d
    20c6:	80 93 5e 04 	sts	0x045E, r24	; 0x80045e <pressed_prev.2331>
		if(pressed_prev == pressed && pressed == 5) {
    20ca:	90 91 5e 04 	lds	r25, 0x045E	; 0x80045e <pressed_prev.2331>
    20ce:	8d 8d       	ldd	r24, Y+29	; 0x1d
    20d0:	98 17       	cp	r25, r24
    20d2:	49 f4       	brne	.+18     	; 0x20e6 <UpdateGame+0x188>
    20d4:	8d 8d       	ldd	r24, Y+29	; 0x1d
    20d6:	85 30       	cpi	r24, 0x05	; 5
    20d8:	31 f4       	brne	.+12     	; 0x20e6 <UpdateGame+0x188>
			hard_drop++;
    20da:	80 91 5f 04 	lds	r24, 0x045F	; 0x80045f <hard_drop.2332>
    20de:	8f 5f       	subi	r24, 0xFF	; 255
    20e0:	80 93 5f 04 	sts	0x045F, r24	; 0x80045f <hard_drop.2332>
		} else {
			hard_drop = 0;
    20e4:	02 c0       	rjmp	.+4      	; 0x20ea <UpdateGame+0x18c>
    20e6:	10 92 5f 04 	sts	0x045F, r1	; 0x80045f <hard_drop.2332>
		}


		if(land(&g, &t)) {		//See if we stop falling here
    20ea:	6a e4       	ldi	r22, 0x4A	; 74
    20ec:	74 e0       	ldi	r23, 0x04	; 4
    20ee:	8e e4       	ldi	r24, 0x4E	; 78
    20f0:	93 e0       	ldi	r25, 0x03	; 3
    20f2:	78 db       	rcall	.-2320   	; 0x17e4 <land>
    20f4:	88 23       	and	r24, r24
    20f6:	09 f4       	brne	.+2      	; 0x20fa <UpdateGame+0x19c>
			if(inBoundsOpen(&g, &t)) {	//We landed in the screen
    20f8:	91 c0       	rjmp	.+290    	; 0x221c <UpdateGame+0x2be>
    20fa:	6a e4       	ldi	r22, 0x4A	; 74
    20fc:	74 e0       	ldi	r23, 0x04	; 4
    20fe:	8e e4       	ldi	r24, 0x4E	; 78
    2100:	93 e0       	ldi	r25, 0x03	; 3
    2102:	2c db       	rcall	.-2472   	; 0x175c <inBoundsOpen>
    2104:	88 23       	and	r24, r24
    2106:	09 f4       	brne	.+2      	; 0x210a <UpdateGame+0x1ac>
				place(&g, &t);	//Place in grid
    2108:	7b c0       	rjmp	.+246    	; 0x2200 <UpdateGame+0x2a2>
    210a:	6a e4       	ldi	r22, 0x4A	; 74
    210c:	74 e0       	ldi	r23, 0x04	; 4
    210e:	8e e4       	ldi	r24, 0x4E	; 78
    2110:	93 e0       	ldi	r25, 0x03	; 3
				gameState = PlayInterval;
    2112:	5d dc       	rcall	.-1862   	; 0x19ce <place>
    2114:	82 e0       	ldi	r24, 0x02	; 2
    2116:	80 93 4d 03 	sts	0x034D, r24	; 0x80034d <gameState.2330>
				//Check for rows to clear
				for(unsigned short y = 0; y < HEIGHT; y++) {
    211a:	1a 82       	std	Y+2, r1	; 0x02
    211c:	19 82       	std	Y+1, r1	; 0x01
					if(rowFull(&g, y)) {
    211e:	21 c0       	rjmp	.+66     	; 0x2162 <UpdateGame+0x204>
    2120:	89 81       	ldd	r24, Y+1	; 0x01
    2122:	9a 81       	ldd	r25, Y+2	; 0x02
    2124:	bc 01       	movw	r22, r24
    2126:	8e e4       	ldi	r24, 0x4E	; 78
    2128:	93 e0       	ldi	r25, 0x03	; 3
    212a:	78 da       	rcall	.-2832   	; 0x161c <rowFull>
    212c:	88 23       	and	r24, r24
    212e:	a1 f0       	breq	.+40     	; 0x2158 <UpdateGame+0x1fa>
						rowCleared = y;
    2130:	89 81       	ldd	r24, Y+1	; 0x01
    2132:	9a 81       	ldd	r25, Y+2	; 0x02
    2134:	90 93 61 04 	sts	0x0461, r25	; 0x800461 <rowCleared.2333+0x1>
    2138:	80 93 60 04 	sts	0x0460, r24	; 0x800460 <rowCleared.2333>
						rowState = 6;
    213c:	86 e0       	ldi	r24, 0x06	; 6
    213e:	80 93 62 04 	sts	0x0462, r24	; 0x800462 <rowState.2334>
						gameState = RowClear;
    2142:	83 e0       	ldi	r24, 0x03	; 3
    2144:	80 93 4d 03 	sts	0x034D, r24	; 0x80034d <gameState.2330>
						score += 1 + y;
    2148:	99 81       	ldd	r25, Y+1	; 0x01
    214a:	80 91 47 03 	lds	r24, 0x0347	; 0x800347 <score>
    214e:	89 0f       	add	r24, r25
    2150:	8f 5f       	subi	r24, 0xFF	; 255
    2152:	80 93 47 03 	sts	0x0347, r24	; 0x800347 <score>
						break;
    2156:	09 c0       	rjmp	.+18     	; 0x216a <UpdateGame+0x20c>
		if(land(&g, &t)) {		//See if we stop falling here
			if(inBoundsOpen(&g, &t)) {	//We landed in the screen
				place(&g, &t);	//Place in grid
				gameState = PlayInterval;
				//Check for rows to clear
				for(unsigned short y = 0; y < HEIGHT; y++) {
    2158:	89 81       	ldd	r24, Y+1	; 0x01
    215a:	9a 81       	ldd	r25, Y+2	; 0x02
    215c:	01 96       	adiw	r24, 0x01	; 1
    215e:	9a 83       	std	Y+2, r25	; 0x02
    2160:	89 83       	std	Y+1, r24	; 0x01
    2162:	89 81       	ldd	r24, Y+1	; 0x01
    2164:	9a 81       	ldd	r25, Y+2	; 0x02
    2166:	45 97       	sbiw	r24, 0x15	; 21
    2168:	d8 f2       	brcs	.-74     	; 0x2120 <UpdateGame+0x1c2>
						gameState = RowClear;
						score += 1 + y;
						break;
					}
				}
				placed++;
    216a:	80 91 63 04 	lds	r24, 0x0463	; 0x800463 <placed.2335>
    216e:	90 91 64 04 	lds	r25, 0x0464	; 0x800464 <placed.2335+0x1>
    2172:	01 96       	adiw	r24, 0x01	; 1
    2174:	90 93 64 04 	sts	0x0464, r25	; 0x800464 <placed.2335+0x1>
    2178:	80 93 63 04 	sts	0x0463, r24	; 0x800463 <placed.2335>
				fall = 0;
    217c:	10 92 66 04 	sts	0x0466, r1	; 0x800466 <fall.2336+0x1>
    2180:	10 92 65 04 	sts	0x0465, r1	; 0x800465 <fall.2336>
				t = CreateTetra();
    2184:	ce 01       	movw	r24, r28
    2186:	ce 96       	adiw	r24, 0x3e	; 62
    2188:	65 d8       	rcall	.-3894   	; 0x1254 <CreateTetra>
    218a:	84 e1       	ldi	r24, 0x14	; 20
    218c:	fe 01       	movw	r30, r28
    218e:	fe 96       	adiw	r30, 0x3e	; 62
    2190:	aa e4       	ldi	r26, 0x4A	; 74
    2192:	b4 e0       	ldi	r27, 0x04	; 4
    2194:	01 90       	ld	r0, Z+
    2196:	0d 92       	st	X+, r0
    2198:	8a 95       	dec	r24
    219a:	e1 f7       	brne	.-8      	; 0x2194 <UpdateGame+0x236>
				if(gameState != RowClear) {
    219c:	80 91 4d 03 	lds	r24, 0x034D	; 0x80034d <gameState.2330>
    21a0:	83 30       	cpi	r24, 0x03	; 3
    21a2:	39 f1       	breq	.+78     	; 0x21f2 <UpdateGame+0x294>
					if(hard_drop > 12) {
    21a4:	80 91 5f 04 	lds	r24, 0x045F	; 0x80045f <hard_drop.2332>
    21a8:	8d 30       	cpi	r24, 0x0D	; 13
    21aa:	28 f0       	brcs	.+10     	; 0x21b6 <UpdateGame+0x258>
						time = 0;
    21ac:	10 92 4c 03 	sts	0x034C, r1	; 0x80034c <time.2337+0x1>
    21b0:	10 92 4b 03 	sts	0x034B, r1	; 0x80034b <time.2337>
			//place(&g, &t);
			fall++;
			time = standardInterval;
			gameState = PlayInterval;
		}
		break;
    21b4:	00 c1       	rjmp	.+512    	; 0x23b6 <UpdateGame+0x458>
				t = CreateTetra();
				if(gameState != RowClear) {
					if(hard_drop > 12) {
						time = 0;
					}
					else if(hard_drop > 4) {
    21b6:	80 91 5f 04 	lds	r24, 0x045F	; 0x80045f <hard_drop.2332>
    21ba:	85 30       	cpi	r24, 0x05	; 5
    21bc:	60 f0       	brcs	.+24     	; 0x21d6 <UpdateGame+0x278>
						time = standardInterval / 2;
    21be:	8b 8d       	ldd	r24, Y+27	; 0x1b
    21c0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    21c2:	99 23       	and	r25, r25
    21c4:	0c f4       	brge	.+2      	; 0x21c8 <UpdateGame+0x26a>
    21c6:	01 96       	adiw	r24, 0x01	; 1
    21c8:	95 95       	asr	r25
    21ca:	87 95       	ror	r24
    21cc:	90 93 4c 03 	sts	0x034C, r25	; 0x80034c <time.2337+0x1>
    21d0:	80 93 4b 03 	sts	0x034B, r24	; 0x80034b <time.2337>
			//place(&g, &t);
			fall++;
			time = standardInterval;
			gameState = PlayInterval;
		}
		break;
    21d4:	f0 c0       	rjmp	.+480    	; 0x23b6 <UpdateGame+0x458>
						time = 0;
					}
					else if(hard_drop > 4) {
						time = standardInterval / 2;
					} else {
						time = standardInterval * 5;
    21d6:	2b 8d       	ldd	r18, Y+27	; 0x1b
    21d8:	3c 8d       	ldd	r19, Y+28	; 0x1c
    21da:	c9 01       	movw	r24, r18
    21dc:	88 0f       	add	r24, r24
    21de:	99 1f       	adc	r25, r25
    21e0:	88 0f       	add	r24, r24
    21e2:	99 1f       	adc	r25, r25
    21e4:	82 0f       	add	r24, r18
    21e6:	93 1f       	adc	r25, r19
    21e8:	90 93 4c 03 	sts	0x034C, r25	; 0x80034c <time.2337+0x1>
    21ec:	80 93 4b 03 	sts	0x034B, r24	; 0x80034b <time.2337>
			//place(&g, &t);
			fall++;
			time = standardInterval;
			gameState = PlayInterval;
		}
		break;
    21f0:	e2 c0       	rjmp	.+452    	; 0x23b6 <UpdateGame+0x458>
					} else {
						time = standardInterval * 5;
					}
					
				} else {
					time = standardInterval;
    21f2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    21f4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    21f6:	90 93 4c 03 	sts	0x034C, r25	; 0x80034c <time.2337+0x1>
    21fa:	80 93 4b 03 	sts	0x034B, r24	; 0x80034b <time.2337>
			//place(&g, &t);
			fall++;
			time = standardInterval;
			gameState = PlayInterval;
		}
		break;
    21fe:	db c0       	rjmp	.+438    	; 0x23b6 <UpdateGame+0x458>
					time = standardInterval;
				}
			} else {
				//We landed above the top of the screen
				//Game over
				gameState = GameOver;
    2200:	84 e0       	ldi	r24, 0x04	; 4
    2202:	80 93 4d 03 	sts	0x034D, r24	; 0x80034d <gameState.2330>
				rowCleared = 0;
    2206:	10 92 61 04 	sts	0x0461, r1	; 0x800461 <rowCleared.2333+0x1>
    220a:	10 92 60 04 	sts	0x0460, r1	; 0x800460 <rowCleared.2333>
				time = standardInterval;
    220e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2210:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2212:	90 93 4c 03 	sts	0x034C, r25	; 0x80034c <time.2337+0x1>
    2216:	80 93 4b 03 	sts	0x034B, r24	; 0x80034b <time.2337>
			//place(&g, &t);
			fall++;
			time = standardInterval;
			gameState = PlayInterval;
		}
		break;
    221a:	cd c0       	rjmp	.+410    	; 0x23b6 <UpdateGame+0x458>
				gameState = GameOver;
				rowCleared = 0;
				time = standardInterval;
			}
		} else {
			down(&t);
    221c:	8a e4       	ldi	r24, 0x4A	; 74
    221e:	94 e0       	ldi	r25, 0x04	; 4
    2220:	0e 94 53 08 	call	0x10a6	; 0x10a6 <down>
			//place(&g, &t);
			fall++;
    2224:	80 91 65 04 	lds	r24, 0x0465	; 0x800465 <fall.2336>
    2228:	90 91 66 04 	lds	r25, 0x0466	; 0x800466 <fall.2336+0x1>
    222c:	01 96       	adiw	r24, 0x01	; 1
    222e:	90 93 66 04 	sts	0x0466, r25	; 0x800466 <fall.2336+0x1>
    2232:	80 93 65 04 	sts	0x0465, r24	; 0x800465 <fall.2336>
			time = standardInterval;
    2236:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2238:	9c 8d       	ldd	r25, Y+28	; 0x1c
    223a:	90 93 4c 03 	sts	0x034C, r25	; 0x80034c <time.2337+0x1>
    223e:	80 93 4b 03 	sts	0x034B, r24	; 0x80034b <time.2337>
			gameState = PlayInterval;
    2242:	82 e0       	ldi	r24, 0x02	; 2
    2244:	80 93 4d 03 	sts	0x034D, r24	; 0x80034d <gameState.2330>
		}
		break;
    2248:	b6 c0       	rjmp	.+364    	; 0x23b6 <UpdateGame+0x458>
	} case PlayInterval:
		time = standardInterval;
    224a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    224c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    224e:	90 93 4c 03 	sts	0x034C, r25	; 0x80034c <time.2337+0x1>
    2252:	80 93 4b 03 	sts	0x034B, r24	; 0x80034b <time.2337>
		gameState = Play;
    2256:	81 e0       	ldi	r24, 0x01	; 1
    2258:	80 93 4d 03 	sts	0x034D, r24	; 0x80034d <gameState.2330>
		break;
    225c:	ac c0       	rjmp	.+344    	; 0x23b6 <UpdateGame+0x458>
	case RowClear:
		if(--rowState%2 == 1) {
    225e:	80 91 62 04 	lds	r24, 0x0462	; 0x800462 <rowState.2334>
    2262:	81 50       	subi	r24, 0x01	; 1
    2264:	80 93 62 04 	sts	0x0462, r24	; 0x800462 <rowState.2334>
    2268:	80 91 62 04 	lds	r24, 0x0462	; 0x800462 <rowState.2334>
    226c:	81 70       	andi	r24, 0x01	; 1
    226e:	88 23       	and	r24, r24
			clearRow(&g, rowCleared);
    2270:	49 f0       	breq	.+18     	; 0x2284 <UpdateGame+0x326>
    2272:	80 91 60 04 	lds	r24, 0x0460	; 0x800460 <rowCleared.2333>
    2276:	90 91 61 04 	lds	r25, 0x0461	; 0x800461 <rowCleared.2333+0x1>
    227a:	bc 01       	movw	r22, r24
    227c:	8e e4       	ldi	r24, 0x4E	; 78
    227e:	93 e0       	ldi	r25, 0x03	; 3
    2280:	cc d8       	rcall	.-3688   	; 0x141a <clearRow>
		} else {
			fillRow(&g, rowCleared);
    2282:	08 c0       	rjmp	.+16     	; 0x2294 <UpdateGame+0x336>
    2284:	80 91 60 04 	lds	r24, 0x0460	; 0x800460 <rowCleared.2333>
    2288:	90 91 61 04 	lds	r25, 0x0461	; 0x800461 <rowCleared.2333+0x1>
    228c:	bc 01       	movw	r22, r24
    228e:	8e e4       	ldi	r24, 0x4E	; 78
    2290:	93 e0       	ldi	r25, 0x03	; 3
    2292:	33 d9       	rcall	.-3482   	; 0x14fa <fillRow>
		}
		if(rowState > 0) {
    2294:	80 91 62 04 	lds	r24, 0x0462	; 0x800462 <rowState.2334>
    2298:	88 23       	and	r24, r24
			time = standardInterval;
    229a:	39 f0       	breq	.+14     	; 0x22aa <UpdateGame+0x34c>
    229c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    229e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    22a0:	90 93 4c 03 	sts	0x034C, r25	; 0x80034c <time.2337+0x1>
    22a4:	80 93 4b 03 	sts	0x034B, r24	; 0x80034b <time.2337>
		} else {
			descendRow(&g, rowCleared);
    22a8:	86 c0       	rjmp	.+268    	; 0x23b6 <UpdateGame+0x458>
    22aa:	80 91 60 04 	lds	r24, 0x0460	; 0x800460 <rowCleared.2333>
    22ae:	90 91 61 04 	lds	r25, 0x0461	; 0x800461 <rowCleared.2333+0x1>
    22b2:	bc 01       	movw	r22, r24
    22b4:	8e e4       	ldi	r24, 0x4E	; 78
    22b6:	93 e0       	ldi	r25, 0x03	; 3

			gameState = Play;
    22b8:	54 d9       	rcall	.-3416   	; 0x1562 <descendRow>
    22ba:	81 e0       	ldi	r24, 0x01	; 1
    22bc:	80 93 4d 03 	sts	0x034D, r24	; 0x80034d <gameState.2330>
			for(unsigned short y = 0; y < HEIGHT; y++) {
    22c0:	1c 82       	std	Y+4, r1	; 0x04
    22c2:	1b 82       	std	Y+3, r1	; 0x03
				if(rowFull(&g, y)) {
    22c4:	1a c0       	rjmp	.+52     	; 0x22fa <UpdateGame+0x39c>
    22c6:	8b 81       	ldd	r24, Y+3	; 0x03
    22c8:	9c 81       	ldd	r25, Y+4	; 0x04
    22ca:	bc 01       	movw	r22, r24
    22cc:	8e e4       	ldi	r24, 0x4E	; 78
    22ce:	93 e0       	ldi	r25, 0x03	; 3
    22d0:	a5 d9       	rcall	.-3254   	; 0x161c <rowFull>
    22d2:	88 23       	and	r24, r24
    22d4:	69 f0       	breq	.+26     	; 0x22f0 <UpdateGame+0x392>
					rowCleared = y;
    22d6:	8b 81       	ldd	r24, Y+3	; 0x03
    22d8:	9c 81       	ldd	r25, Y+4	; 0x04
    22da:	90 93 61 04 	sts	0x0461, r25	; 0x800461 <rowCleared.2333+0x1>
    22de:	80 93 60 04 	sts	0x0460, r24	; 0x800460 <rowCleared.2333>
					rowState = 6;
    22e2:	86 e0       	ldi	r24, 0x06	; 6
    22e4:	80 93 62 04 	sts	0x0462, r24	; 0x800462 <rowState.2334>
					gameState = RowClear;
    22e8:	83 e0       	ldi	r24, 0x03	; 3
    22ea:	80 93 4d 03 	sts	0x034D, r24	; 0x80034d <gameState.2330>
					break;
    22ee:	09 c0       	rjmp	.+18     	; 0x2302 <UpdateGame+0x3a4>
			time = standardInterval;
		} else {
			descendRow(&g, rowCleared);

			gameState = Play;
			for(unsigned short y = 0; y < HEIGHT; y++) {
    22f0:	8b 81       	ldd	r24, Y+3	; 0x03
    22f2:	9c 81       	ldd	r25, Y+4	; 0x04
    22f4:	01 96       	adiw	r24, 0x01	; 1
    22f6:	9c 83       	std	Y+4, r25	; 0x04
    22f8:	8b 83       	std	Y+3, r24	; 0x03
    22fa:	8b 81       	ldd	r24, Y+3	; 0x03
    22fc:	9c 81       	ldd	r25, Y+4	; 0x04
    22fe:	45 97       	sbiw	r24, 0x15	; 21
    2300:	10 f3       	brcs	.-60     	; 0x22c6 <UpdateGame+0x368>
					rowState = 6;
					gameState = RowClear;
					break;
				}
			}
			if(gameState != RowClear) {
    2302:	80 91 4d 03 	lds	r24, 0x034D	; 0x80034d <gameState.2330>
    2306:	83 30       	cpi	r24, 0x03	; 3
    2308:	61 f0       	breq	.+24     	; 0x2322 <UpdateGame+0x3c4>
				time = standardInterval * 3;
    230a:	2b 8d       	ldd	r18, Y+27	; 0x1b
    230c:	3c 8d       	ldd	r19, Y+28	; 0x1c
    230e:	c9 01       	movw	r24, r18
    2310:	88 0f       	add	r24, r24
    2312:	99 1f       	adc	r25, r25
    2314:	82 0f       	add	r24, r18
    2316:	93 1f       	adc	r25, r19
    2318:	90 93 4c 03 	sts	0x034C, r25	; 0x80034c <time.2337+0x1>
    231c:	80 93 4b 03 	sts	0x034B, r24	; 0x80034b <time.2337>
			} else {
				time = standardInterval;
			}
		}
		break;
    2320:	4a c0       	rjmp	.+148    	; 0x23b6 <UpdateGame+0x458>
				}
			}
			if(gameState != RowClear) {
				time = standardInterval * 3;
			} else {
				time = standardInterval;
    2322:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2324:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2326:	90 93 4c 03 	sts	0x034C, r25	; 0x80034c <time.2337+0x1>
    232a:	80 93 4b 03 	sts	0x034B, r24	; 0x80034b <time.2337>
			}
		}
		break;
	case GameOver:
		if(rowCleared < HEIGHT && !rowEmpty(&g, rowCleared)) {
    232e:	43 c0       	rjmp	.+134    	; 0x23b6 <UpdateGame+0x458>
    2330:	80 91 60 04 	lds	r24, 0x0460	; 0x800460 <rowCleared.2333>
    2334:	90 91 61 04 	lds	r25, 0x0461	; 0x800461 <rowCleared.2333+0x1>
    2338:	45 97       	sbiw	r24, 0x15	; 21
    233a:	3c f5       	brge	.+78     	; 0x238a <UpdateGame+0x42c>
    233c:	80 91 60 04 	lds	r24, 0x0460	; 0x800460 <rowCleared.2333>
    2340:	90 91 61 04 	lds	r25, 0x0461	; 0x800461 <rowCleared.2333+0x1>
    2344:	bc 01       	movw	r22, r24
    2346:	8e e4       	ldi	r24, 0x4E	; 78
    2348:	93 e0       	ldi	r25, 0x03	; 3
    234a:	9f d9       	rcall	.-3266   	; 0x168a <rowEmpty>
			clearRow(&g, 0);
    234c:	88 23       	and	r24, r24
    234e:	e9 f4       	brne	.+58     	; 0x238a <UpdateGame+0x42c>
    2350:	60 e0       	ldi	r22, 0x00	; 0
    2352:	70 e0       	ldi	r23, 0x00	; 0
    2354:	8e e4       	ldi	r24, 0x4E	; 78
    2356:	93 e0       	ldi	r25, 0x03	; 3
			descendRow(&g, 0);
    2358:	60 d8       	rcall	.-3904   	; 0x141a <clearRow>
    235a:	60 e0       	ldi	r22, 0x00	; 0
    235c:	70 e0       	ldi	r23, 0x00	; 0
    235e:	8e e4       	ldi	r24, 0x4E	; 78
    2360:	93 e0       	ldi	r25, 0x03	; 3
    2362:	ff d8       	rcall	.-3586   	; 0x1562 <descendRow>
			rowCleared++;
    2364:	80 91 60 04 	lds	r24, 0x0460	; 0x800460 <rowCleared.2333>
    2368:	90 91 61 04 	lds	r25, 0x0461	; 0x800461 <rowCleared.2333+0x1>
    236c:	01 96       	adiw	r24, 0x01	; 1
    236e:	90 93 61 04 	sts	0x0461, r25	; 0x800461 <rowCleared.2333+0x1>
    2372:	80 93 60 04 	sts	0x0460, r24	; 0x800460 <rowCleared.2333>
			time = standardInterval;
    2376:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2378:	9c 8d       	ldd	r25, Y+28	; 0x1c
    237a:	90 93 4c 03 	sts	0x034C, r25	; 0x80034c <time.2337+0x1>
    237e:	80 93 4b 03 	sts	0x034B, r24	; 0x80034b <time.2337>
			gameState = GameOverFlash;
    2382:	85 e0       	ldi	r24, 0x05	; 5
    2384:	80 93 4d 03 	sts	0x034D, r24	; 0x80034d <gameState.2330>
			time = standardInterval;
			screenState = FinalScore;

			gameState = Init;				//For some reason, future games immediately go to the Game Over screen unless the state is set here
		}
		break;
    2388:	16 c0       	rjmp	.+44     	; 0x23b6 <UpdateGame+0x458>
			descendRow(&g, 0);
			rowCleared++;
			time = standardInterval;
			gameState = GameOverFlash;
		} else {
			time = standardInterval;
    238a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    238c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    238e:	90 93 4c 03 	sts	0x034C, r25	; 0x80034c <time.2337+0x1>
    2392:	80 93 4b 03 	sts	0x034B, r24	; 0x80034b <time.2337>
			screenState = FinalScore;
    2396:	82 e0       	ldi	r24, 0x02	; 2
    2398:	80 93 67 04 	sts	0x0467, r24	; 0x800467 <screenState>

			gameState = Init;				//For some reason, future games immediately go to the Game Over screen unless the state is set here
    239c:	10 92 4d 03 	sts	0x034D, r1	; 0x80034d <gameState.2330>
		}
		break;
    23a0:	0a c0       	rjmp	.+20     	; 0x23b6 <UpdateGame+0x458>
	case GameOverFlash:
		time = standardInterval;
    23a2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    23a4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    23a6:	90 93 4c 03 	sts	0x034C, r25	; 0x80034c <time.2337+0x1>
    23aa:	80 93 4b 03 	sts	0x034B, r24	; 0x80034b <time.2337>
		gameState = GameOver;
    23ae:	84 e0       	ldi	r24, 0x04	; 4
    23b0:	80 93 4d 03 	sts	0x034D, r24	; 0x80034d <gameState.2330>
		break;
	}
	nokia_lcd_clear();
    23b4:	00 00       	nop
    23b6:	0e 94 6c 03 	call	0x6d8	; 0x6d8 <nokia_lcd_clear>
	if(gameState == GameOverFlash) {
    23ba:	80 91 4d 03 	lds	r24, 0x034D	; 0x80034d <gameState.2330>
    23be:	85 30       	cpi	r24, 0x05	; 5
		//Black screen
		for(short x = 0; x < WIDTH; x++) {
    23c0:	09 f5       	brne	.+66     	; 0x2404 <UpdateGame+0x4a6>
    23c2:	1e 82       	std	Y+6, r1	; 0x06
    23c4:	1d 82       	std	Y+5, r1	; 0x05
			for(short y = 0; y < HEIGHT; y++) {
    23c6:	19 c0       	rjmp	.+50     	; 0x23fa <UpdateGame+0x49c>
    23c8:	18 86       	std	Y+8, r1	; 0x08
    23ca:	1f 82       	std	Y+7, r1	; 0x07
				drawTile(x, y, 1);
    23cc:	0d c0       	rjmp	.+26     	; 0x23e8 <UpdateGame+0x48a>
    23ce:	2f 81       	ldd	r18, Y+7	; 0x07
    23d0:	38 85       	ldd	r19, Y+8	; 0x08
    23d2:	8d 81       	ldd	r24, Y+5	; 0x05
    23d4:	9e 81       	ldd	r25, Y+6	; 0x06
    23d6:	41 e0       	ldi	r20, 0x01	; 1
    23d8:	50 e0       	ldi	r21, 0x00	; 0
    23da:	b9 01       	movw	r22, r18
    23dc:	7c dd       	rcall	.-1288   	; 0x1ed6 <drawTile>
	}
	nokia_lcd_clear();
	if(gameState == GameOverFlash) {
		//Black screen
		for(short x = 0; x < WIDTH; x++) {
			for(short y = 0; y < HEIGHT; y++) {
    23de:	8f 81       	ldd	r24, Y+7	; 0x07
    23e0:	98 85       	ldd	r25, Y+8	; 0x08
    23e2:	01 96       	adiw	r24, 0x01	; 1
    23e4:	98 87       	std	Y+8, r25	; 0x08
    23e6:	8f 83       	std	Y+7, r24	; 0x07
    23e8:	8f 81       	ldd	r24, Y+7	; 0x07
    23ea:	98 85       	ldd	r25, Y+8	; 0x08
    23ec:	45 97       	sbiw	r24, 0x15	; 21
    23ee:	7c f3       	brlt	.-34     	; 0x23ce <UpdateGame+0x470>
		break;
	}
	nokia_lcd_clear();
	if(gameState == GameOverFlash) {
		//Black screen
		for(short x = 0; x < WIDTH; x++) {
    23f0:	8d 81       	ldd	r24, Y+5	; 0x05
    23f2:	9e 81       	ldd	r25, Y+6	; 0x06
    23f4:	01 96       	adiw	r24, 0x01	; 1
    23f6:	9e 83       	std	Y+6, r25	; 0x06
    23f8:	8d 83       	std	Y+5, r24	; 0x05
    23fa:	8d 81       	ldd	r24, Y+5	; 0x05
    23fc:	9e 81       	ldd	r25, Y+6	; 0x06
    23fe:	0c 97       	sbiw	r24, 0x0c	; 12
    2400:	1c f3       	brlt	.-58     	; 0x23c8 <UpdateGame+0x46a>
    2402:	21 c1       	rjmp	.+578    	; 0x2646 <UpdateGame+0x6e8>
			for(short y = 0; y < HEIGHT; y++) {
				drawTile(x, y, 1);
			}
		}
	} else if(gameState == Play) {
    2404:	80 91 4d 03 	lds	r24, 0x034D	; 0x80034d <gameState.2330>
    2408:	81 30       	cpi	r24, 0x01	; 1
    240a:	09 f0       	breq	.+2      	; 0x240e <UpdateGame+0x4b0>
    240c:	91 c0       	rjmp	.+290    	; 0x2530 <UpdateGame+0x5d2>
		for(short x = 0; x < WIDTH; x++) {
    240e:	1a 86       	std	Y+10, r1	; 0x0a
    2410:	19 86       	std	Y+9, r1	; 0x09
    2412:	29 c0       	rjmp	.+82     	; 0x2466 <UpdateGame+0x508>
			for(short y = 0; y < HEIGHT; y++) {
    2414:	1c 86       	std	Y+12, r1	; 0x0c
    2416:	1b 86       	std	Y+11, r1	; 0x0b
    2418:	1d c0       	rjmp	.+58     	; 0x2454 <UpdateGame+0x4f6>
				drawTile(x, y, g.tiles[x][y]);
    241a:	89 85       	ldd	r24, Y+9	; 0x09
    241c:	9a 85       	ldd	r25, Y+10	; 0x0a
    241e:	45 e1       	ldi	r20, 0x15	; 21
    2420:	48 9f       	mul	r20, r24
    2422:	90 01       	movw	r18, r0
    2424:	49 9f       	mul	r20, r25
    2426:	30 0d       	add	r19, r0
    2428:	11 24       	eor	r1, r1
    242a:	8b 85       	ldd	r24, Y+11	; 0x0b
    242c:	9c 85       	ldd	r25, Y+12	; 0x0c
    242e:	82 0f       	add	r24, r18
    2430:	93 1f       	adc	r25, r19
    2432:	82 5b       	subi	r24, 0xB2	; 178
    2434:	9c 4f       	sbci	r25, 0xFC	; 252
    2436:	fc 01       	movw	r30, r24
    2438:	80 81       	ld	r24, Z
    243a:	48 2f       	mov	r20, r24
    243c:	50 e0       	ldi	r21, 0x00	; 0
    243e:	2b 85       	ldd	r18, Y+11	; 0x0b
    2440:	3c 85       	ldd	r19, Y+12	; 0x0c
    2442:	89 85       	ldd	r24, Y+9	; 0x09
    2444:	9a 85       	ldd	r25, Y+10	; 0x0a
    2446:	b9 01       	movw	r22, r18
    2448:	46 dd       	rcall	.-1396   	; 0x1ed6 <drawTile>
				drawTile(x, y, 1);
			}
		}
	} else if(gameState == Play) {
		for(short x = 0; x < WIDTH; x++) {
			for(short y = 0; y < HEIGHT; y++) {
    244a:	8b 85       	ldd	r24, Y+11	; 0x0b
    244c:	9c 85       	ldd	r25, Y+12	; 0x0c
    244e:	01 96       	adiw	r24, 0x01	; 1
    2450:	9c 87       	std	Y+12, r25	; 0x0c
    2452:	8b 87       	std	Y+11, r24	; 0x0b
    2454:	8b 85       	ldd	r24, Y+11	; 0x0b
    2456:	9c 85       	ldd	r25, Y+12	; 0x0c
    2458:	45 97       	sbiw	r24, 0x15	; 21
    245a:	fc f2       	brlt	.-66     	; 0x241a <UpdateGame+0x4bc>
			for(short y = 0; y < HEIGHT; y++) {
				drawTile(x, y, 1);
			}
		}
	} else if(gameState == Play) {
		for(short x = 0; x < WIDTH; x++) {
    245c:	89 85       	ldd	r24, Y+9	; 0x09
    245e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2460:	01 96       	adiw	r24, 0x01	; 1
    2462:	9a 87       	std	Y+10, r25	; 0x0a
    2464:	89 87       	std	Y+9, r24	; 0x09
    2466:	89 85       	ldd	r24, Y+9	; 0x09
    2468:	9a 85       	ldd	r25, Y+10	; 0x0a
    246a:	0c 97       	sbiw	r24, 0x0c	; 12
    246c:	9c f2       	brlt	.-90     	; 0x2414 <UpdateGame+0x4b6>
			for(short y = 0; y < HEIGHT; y++) {
				drawTile(x, y, g.tiles[x][y]);
			}
		}
		for(short i = 0; i < 4; i++) {
    246e:	1e 86       	std	Y+14, r1	; 0x0e
    2470:	1d 86       	std	Y+13, r1	; 0x0d
    2472:	1e c0       	rjmp	.+60     	; 0x24b0 <UpdateGame+0x552>
			Point p = getTile(&t, i);
    2474:	8d 85       	ldd	r24, Y+13	; 0x0d
    2476:	9e 85       	ldd	r25, Y+14	; 0x0e
    2478:	bc 01       	movw	r22, r24
    247a:	8a e4       	ldi	r24, 0x4A	; 74
    247c:	94 e0       	ldi	r25, 0x04	; 4
    247e:	0e 94 2f 08 	call	0x105e	; 0x105e <getTile>
    2482:	dc 01       	movw	r26, r24
    2484:	cb 01       	movw	r24, r22
    2486:	8a ab       	std	Y+50, r24	; 0x32
    2488:	9b ab       	std	Y+51, r25	; 0x33
    248a:	ac ab       	std	Y+52, r26	; 0x34
			if(p.y < HEIGHT) {
    248c:	bd ab       	std	Y+53, r27	; 0x35
    248e:	8c a9       	ldd	r24, Y+52	; 0x34
    2490:	9d a9       	ldd	r25, Y+53	; 0x35
    2492:	45 97       	sbiw	r24, 0x15	; 21
				drawTile(p.x, p.y, 1);
    2494:	44 f4       	brge	.+16     	; 0x24a6 <UpdateGame+0x548>
    2496:	2c a9       	ldd	r18, Y+52	; 0x34
    2498:	3d a9       	ldd	r19, Y+53	; 0x35
    249a:	8a a9       	ldd	r24, Y+50	; 0x32
    249c:	9b a9       	ldd	r25, Y+51	; 0x33
    249e:	41 e0       	ldi	r20, 0x01	; 1
    24a0:	50 e0       	ldi	r21, 0x00	; 0
    24a2:	b9 01       	movw	r22, r18
    24a4:	18 dd       	rcall	.-1488   	; 0x1ed6 <drawTile>
		for(short x = 0; x < WIDTH; x++) {
			for(short y = 0; y < HEIGHT; y++) {
				drawTile(x, y, g.tiles[x][y]);
			}
		}
		for(short i = 0; i < 4; i++) {
    24a6:	8d 85       	ldd	r24, Y+13	; 0x0d
    24a8:	9e 85       	ldd	r25, Y+14	; 0x0e
    24aa:	01 96       	adiw	r24, 0x01	; 1
    24ac:	9e 87       	std	Y+14, r25	; 0x0e
    24ae:	8d 87       	std	Y+13, r24	; 0x0d
    24b0:	8d 85       	ldd	r24, Y+13	; 0x0d
    24b2:	9e 85       	ldd	r25, Y+14	; 0x0e
    24b4:	04 97       	sbiw	r24, 0x04	; 4
			Point p = getTile(&t, i);
			if(p.y < HEIGHT) {
				drawTile(p.x, p.y, 1);
			}
		}
		Tetra landed = t;
    24b6:	f4 f2       	brlt	.-68     	; 0x2474 <UpdateGame+0x516>
    24b8:	84 e1       	ldi	r24, 0x14	; 20
    24ba:	ea e4       	ldi	r30, 0x4A	; 74
    24bc:	f4 e0       	ldi	r31, 0x04	; 4
    24be:	de 01       	movw	r26, r28
    24c0:	5e 96       	adiw	r26, 0x1e	; 30
    24c2:	01 90       	ld	r0, Z+
    24c4:	0d 92       	st	X+, r0
    24c6:	8a 95       	dec	r24
		while(!land(&g, &landed)) {
    24c8:	e1 f7       	brne	.-8      	; 0x24c2 <UpdateGame+0x564>
			down(&landed);
    24ca:	04 c0       	rjmp	.+8      	; 0x24d4 <UpdateGame+0x576>
    24cc:	ce 01       	movw	r24, r28
    24ce:	4e 96       	adiw	r24, 0x1e	; 30
    24d0:	0e 94 53 08 	call	0x10a6	; 0x10a6 <down>
			if(p.y < HEIGHT) {
				drawTile(p.x, p.y, 1);
			}
		}
		Tetra landed = t;
		while(!land(&g, &landed)) {
    24d4:	ce 01       	movw	r24, r28
    24d6:	4e 96       	adiw	r24, 0x1e	; 30
    24d8:	bc 01       	movw	r22, r24
    24da:	8e e4       	ldi	r24, 0x4E	; 78
    24dc:	93 e0       	ldi	r25, 0x03	; 3
    24de:	82 d9       	rcall	.-3324   	; 0x17e4 <land>
    24e0:	88 23       	and	r24, r24
    24e2:	a1 f3       	breq	.-24     	; 0x24cc <UpdateGame+0x56e>
			down(&landed);
		}
		for(short i = 0; i < 4; i++) {
    24e4:	18 8a       	std	Y+16, r1	; 0x10
    24e6:	1f 86       	std	Y+15, r1	; 0x0f
			Point p = getTile(&landed, i);
    24e8:	1e c0       	rjmp	.+60     	; 0x2526 <UpdateGame+0x5c8>
    24ea:	2f 85       	ldd	r18, Y+15	; 0x0f
    24ec:	38 89       	ldd	r19, Y+16	; 0x10
    24ee:	ce 01       	movw	r24, r28
    24f0:	4e 96       	adiw	r24, 0x1e	; 30
    24f2:	b9 01       	movw	r22, r18
    24f4:	0e 94 2f 08 	call	0x105e	; 0x105e <getTile>
    24f8:	dc 01       	movw	r26, r24
    24fa:	cb 01       	movw	r24, r22
    24fc:	8e ab       	std	Y+54, r24	; 0x36
    24fe:	9f ab       	std	Y+55, r25	; 0x37
    2500:	a8 af       	std	Y+56, r26	; 0x38
			if(p.y < HEIGHT) {
    2502:	b9 af       	std	Y+57, r27	; 0x39
    2504:	88 ad       	ldd	r24, Y+56	; 0x38
    2506:	99 ad       	ldd	r25, Y+57	; 0x39
    2508:	45 97       	sbiw	r24, 0x15	; 21
				drawTile(p.x, p.y, 1);
    250a:	44 f4       	brge	.+16     	; 0x251c <UpdateGame+0x5be>
    250c:	28 ad       	ldd	r18, Y+56	; 0x38
    250e:	39 ad       	ldd	r19, Y+57	; 0x39
    2510:	8e a9       	ldd	r24, Y+54	; 0x36
    2512:	9f a9       	ldd	r25, Y+55	; 0x37
    2514:	41 e0       	ldi	r20, 0x01	; 1
    2516:	50 e0       	ldi	r21, 0x00	; 0
    2518:	b9 01       	movw	r22, r18
    251a:	dd dc       	rcall	.-1606   	; 0x1ed6 <drawTile>
		}
		Tetra landed = t;
		while(!land(&g, &landed)) {
			down(&landed);
		}
		for(short i = 0; i < 4; i++) {
    251c:	8f 85       	ldd	r24, Y+15	; 0x0f
    251e:	98 89       	ldd	r25, Y+16	; 0x10
    2520:	01 96       	adiw	r24, 0x01	; 1
    2522:	98 8b       	std	Y+16, r25	; 0x10
    2524:	8f 87       	std	Y+15, r24	; 0x0f
    2526:	8f 85       	ldd	r24, Y+15	; 0x0f
    2528:	98 89       	ldd	r25, Y+16	; 0x10
    252a:	04 97       	sbiw	r24, 0x04	; 4
    252c:	f4 f2       	brlt	.-68     	; 0x24ea <UpdateGame+0x58c>
    252e:	8b c0       	rjmp	.+278    	; 0x2646 <UpdateGame+0x6e8>
			Point p = getTile(&landed, i);
			if(p.y < HEIGHT) {
				drawTile(p.x, p.y, 1);
			}
		}
	} else if(gameState == PlayInterval) {
    2530:	80 91 4d 03 	lds	r24, 0x034D	; 0x80034d <gameState.2330>
    2534:	82 30       	cpi	r24, 0x02	; 2
    2536:	09 f0       	breq	.+2      	; 0x253a <UpdateGame+0x5dc>
    2538:	56 c0       	rjmp	.+172    	; 0x25e6 <UpdateGame+0x688>
		for(short x = 0; x < WIDTH; x++) {
    253a:	1a 8a       	std	Y+18, r1	; 0x12
    253c:	19 8a       	std	Y+17, r1	; 0x11
			for(short y = 0; y < HEIGHT; y++) {
    253e:	29 c0       	rjmp	.+82     	; 0x2592 <UpdateGame+0x634>
    2540:	1c 8a       	std	Y+20, r1	; 0x14
    2542:	1b 8a       	std	Y+19, r1	; 0x13
				drawTile(x, y, g.tiles[x][y]);
    2544:	1d c0       	rjmp	.+58     	; 0x2580 <UpdateGame+0x622>
    2546:	89 89       	ldd	r24, Y+17	; 0x11
    2548:	9a 89       	ldd	r25, Y+18	; 0x12
    254a:	45 e1       	ldi	r20, 0x15	; 21
    254c:	48 9f       	mul	r20, r24
    254e:	90 01       	movw	r18, r0
    2550:	49 9f       	mul	r20, r25
    2552:	30 0d       	add	r19, r0
    2554:	11 24       	eor	r1, r1
    2556:	8b 89       	ldd	r24, Y+19	; 0x13
    2558:	9c 89       	ldd	r25, Y+20	; 0x14
    255a:	82 0f       	add	r24, r18
    255c:	93 1f       	adc	r25, r19
    255e:	82 5b       	subi	r24, 0xB2	; 178
    2560:	9c 4f       	sbci	r25, 0xFC	; 252
    2562:	fc 01       	movw	r30, r24
    2564:	80 81       	ld	r24, Z
    2566:	48 2f       	mov	r20, r24
    2568:	50 e0       	ldi	r21, 0x00	; 0
    256a:	2b 89       	ldd	r18, Y+19	; 0x13
    256c:	3c 89       	ldd	r19, Y+20	; 0x14
    256e:	89 89       	ldd	r24, Y+17	; 0x11
    2570:	9a 89       	ldd	r25, Y+18	; 0x12
    2572:	b9 01       	movw	r22, r18
    2574:	b0 dc       	rcall	.-1696   	; 0x1ed6 <drawTile>
				drawTile(p.x, p.y, 1);
			}
		}
	} else if(gameState == PlayInterval) {
		for(short x = 0; x < WIDTH; x++) {
			for(short y = 0; y < HEIGHT; y++) {
    2576:	8b 89       	ldd	r24, Y+19	; 0x13
    2578:	9c 89       	ldd	r25, Y+20	; 0x14
    257a:	01 96       	adiw	r24, 0x01	; 1
    257c:	9c 8b       	std	Y+20, r25	; 0x14
    257e:	8b 8b       	std	Y+19, r24	; 0x13
    2580:	8b 89       	ldd	r24, Y+19	; 0x13
    2582:	9c 89       	ldd	r25, Y+20	; 0x14
    2584:	45 97       	sbiw	r24, 0x15	; 21
    2586:	fc f2       	brlt	.-66     	; 0x2546 <UpdateGame+0x5e8>
			if(p.y < HEIGHT) {
				drawTile(p.x, p.y, 1);
			}
		}
	} else if(gameState == PlayInterval) {
		for(short x = 0; x < WIDTH; x++) {
    2588:	89 89       	ldd	r24, Y+17	; 0x11
    258a:	9a 89       	ldd	r25, Y+18	; 0x12
    258c:	01 96       	adiw	r24, 0x01	; 1
    258e:	9a 8b       	std	Y+18, r25	; 0x12
    2590:	89 8b       	std	Y+17, r24	; 0x11
    2592:	89 89       	ldd	r24, Y+17	; 0x11
    2594:	9a 89       	ldd	r25, Y+18	; 0x12
    2596:	0c 97       	sbiw	r24, 0x0c	; 12
			for(short y = 0; y < HEIGHT; y++) {
				drawTile(x, y, g.tiles[x][y]);
			}
		}
		for(short i = 0; i < 4; i++) {
    2598:	9c f2       	brlt	.-90     	; 0x2540 <UpdateGame+0x5e2>
    259a:	1e 8a       	std	Y+22, r1	; 0x16
    259c:	1d 8a       	std	Y+21, r1	; 0x15
			Point p = getTile(&t, i);
    259e:	1e c0       	rjmp	.+60     	; 0x25dc <UpdateGame+0x67e>
    25a0:	8d 89       	ldd	r24, Y+21	; 0x15
    25a2:	9e 89       	ldd	r25, Y+22	; 0x16
    25a4:	bc 01       	movw	r22, r24
    25a6:	8a e4       	ldi	r24, 0x4A	; 74
    25a8:	94 e0       	ldi	r25, 0x04	; 4
    25aa:	0e 94 2f 08 	call	0x105e	; 0x105e <getTile>
    25ae:	dc 01       	movw	r26, r24
    25b0:	cb 01       	movw	r24, r22
    25b2:	8a af       	std	Y+58, r24	; 0x3a
    25b4:	9b af       	std	Y+59, r25	; 0x3b
    25b6:	ac af       	std	Y+60, r26	; 0x3c
			if(p.y < HEIGHT) {
    25b8:	bd af       	std	Y+61, r27	; 0x3d
    25ba:	8c ad       	ldd	r24, Y+60	; 0x3c
    25bc:	9d ad       	ldd	r25, Y+61	; 0x3d
    25be:	45 97       	sbiw	r24, 0x15	; 21
				drawTile(p.x, p.y, 1);
    25c0:	44 f4       	brge	.+16     	; 0x25d2 <UpdateGame+0x674>
    25c2:	2c ad       	ldd	r18, Y+60	; 0x3c
    25c4:	3d ad       	ldd	r19, Y+61	; 0x3d
    25c6:	8a ad       	ldd	r24, Y+58	; 0x3a
    25c8:	9b ad       	ldd	r25, Y+59	; 0x3b
    25ca:	41 e0       	ldi	r20, 0x01	; 1
    25cc:	50 e0       	ldi	r21, 0x00	; 0
    25ce:	b9 01       	movw	r22, r18
    25d0:	82 dc       	rcall	.-1788   	; 0x1ed6 <drawTile>
		for(short x = 0; x < WIDTH; x++) {
			for(short y = 0; y < HEIGHT; y++) {
				drawTile(x, y, g.tiles[x][y]);
			}
		}
		for(short i = 0; i < 4; i++) {
    25d2:	8d 89       	ldd	r24, Y+21	; 0x15
    25d4:	9e 89       	ldd	r25, Y+22	; 0x16
    25d6:	01 96       	adiw	r24, 0x01	; 1
    25d8:	9e 8b       	std	Y+22, r25	; 0x16
    25da:	8d 8b       	std	Y+21, r24	; 0x15
    25dc:	8d 89       	ldd	r24, Y+21	; 0x15
    25de:	9e 89       	ldd	r25, Y+22	; 0x16
    25e0:	04 97       	sbiw	r24, 0x04	; 4
    25e2:	f4 f2       	brlt	.-68     	; 0x25a0 <UpdateGame+0x642>
    25e4:	30 c0       	rjmp	.+96     	; 0x2646 <UpdateGame+0x6e8>
				drawTile(p.x, p.y, 1);
			}
		}
	} else {
		//Otherwise just draw the grid
		for(short x = 0; x < WIDTH; x++) {
    25e6:	18 8e       	std	Y+24, r1	; 0x18
    25e8:	1f 8a       	std	Y+23, r1	; 0x17
			for(short y = 0; y < HEIGHT; y++) {
    25ea:	29 c0       	rjmp	.+82     	; 0x263e <UpdateGame+0x6e0>
    25ec:	1a 8e       	std	Y+26, r1	; 0x1a
    25ee:	19 8e       	std	Y+25, r1	; 0x19
				drawTile(x, y, g.tiles[x][y]);
    25f0:	1d c0       	rjmp	.+58     	; 0x262c <UpdateGame+0x6ce>
    25f2:	8f 89       	ldd	r24, Y+23	; 0x17
    25f4:	98 8d       	ldd	r25, Y+24	; 0x18
    25f6:	45 e1       	ldi	r20, 0x15	; 21
    25f8:	48 9f       	mul	r20, r24
    25fa:	90 01       	movw	r18, r0
    25fc:	49 9f       	mul	r20, r25
    25fe:	30 0d       	add	r19, r0
    2600:	11 24       	eor	r1, r1
    2602:	89 8d       	ldd	r24, Y+25	; 0x19
    2604:	9a 8d       	ldd	r25, Y+26	; 0x1a
    2606:	82 0f       	add	r24, r18
    2608:	93 1f       	adc	r25, r19
    260a:	82 5b       	subi	r24, 0xB2	; 178
    260c:	9c 4f       	sbci	r25, 0xFC	; 252
    260e:	fc 01       	movw	r30, r24
    2610:	80 81       	ld	r24, Z
    2612:	48 2f       	mov	r20, r24
    2614:	50 e0       	ldi	r21, 0x00	; 0
    2616:	29 8d       	ldd	r18, Y+25	; 0x19
    2618:	3a 8d       	ldd	r19, Y+26	; 0x1a
    261a:	8f 89       	ldd	r24, Y+23	; 0x17
    261c:	98 8d       	ldd	r25, Y+24	; 0x18
    261e:	b9 01       	movw	r22, r18
    2620:	5a dc       	rcall	.-1868   	; 0x1ed6 <drawTile>
			}
		}
	} else {
		//Otherwise just draw the grid
		for(short x = 0; x < WIDTH; x++) {
			for(short y = 0; y < HEIGHT; y++) {
    2622:	89 8d       	ldd	r24, Y+25	; 0x19
    2624:	9a 8d       	ldd	r25, Y+26	; 0x1a
    2626:	01 96       	adiw	r24, 0x01	; 1
    2628:	9a 8f       	std	Y+26, r25	; 0x1a
    262a:	89 8f       	std	Y+25, r24	; 0x19
    262c:	89 8d       	ldd	r24, Y+25	; 0x19
    262e:	9a 8d       	ldd	r25, Y+26	; 0x1a
    2630:	45 97       	sbiw	r24, 0x15	; 21
    2632:	fc f2       	brlt	.-66     	; 0x25f2 <UpdateGame+0x694>
				drawTile(p.x, p.y, 1);
			}
		}
	} else {
		//Otherwise just draw the grid
		for(short x = 0; x < WIDTH; x++) {
    2634:	8f 89       	ldd	r24, Y+23	; 0x17
    2636:	98 8d       	ldd	r25, Y+24	; 0x18
    2638:	01 96       	adiw	r24, 0x01	; 1
    263a:	98 8f       	std	Y+24, r25	; 0x18
    263c:	8f 8b       	std	Y+23, r24	; 0x17
    263e:	8f 89       	ldd	r24, Y+23	; 0x17
    2640:	98 8d       	ldd	r25, Y+24	; 0x18
    2642:	0c 97       	sbiw	r24, 0x0c	; 12
    2644:	9c f2       	brlt	.-90     	; 0x25ec <UpdateGame+0x68e>
			for(short y = 0; y < HEIGHT; y++) {
				drawTile(x, y, g.tiles[x][y]);
			}
		}
	}
	nokia_lcd_render();
    2646:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <nokia_lcd_render>
    264a:	01 c0       	rjmp	.+2      	; 0x264e <UpdateGame+0x6f0>
	static short fall = 0;

	static short time = 0;

	if(--time > 0) {
		return;
    264c:	00 00       	nop
				drawTile(x, y, g.tiles[x][y]);
			}
		}
	}
	nokia_lcd_render();
}
    264e:	cf 5a       	subi	r28, 0xAF	; 175
    2650:	df 4f       	sbci	r29, 0xFF	; 255
    2652:	0f b6       	in	r0, 0x3f	; 63
    2654:	f8 94       	cli
    2656:	de bf       	out	0x3e, r29	; 62
    2658:	0f be       	out	0x3f, r0	; 63
    265a:	cd bf       	out	0x3d, r28	; 61
    265c:	df 91       	pop	r29
    265e:	cf 91       	pop	r28
    2660:	08 95       	ret

00002662 <UpdateState>:
void UpdateState() {
    2662:	cf 93       	push	r28
    2664:	df 93       	push	r29
    2666:	cd b7       	in	r28, 0x3d	; 61
    2668:	de b7       	in	r29, 0x3e	; 62
	switch(screenState) {
    266a:	80 91 67 04 	lds	r24, 0x0467	; 0x800467 <screenState>
    266e:	88 2f       	mov	r24, r24
    2670:	90 e0       	ldi	r25, 0x00	; 0
    2672:	81 30       	cpi	r24, 0x01	; 1
    2674:	91 05       	cpc	r25, r1
    2676:	41 f0       	breq	.+16     	; 0x2688 <UpdateState+0x26>
    2678:	82 30       	cpi	r24, 0x02	; 2
    267a:	91 05       	cpc	r25, r1
    267c:	39 f0       	breq	.+14     	; 0x268c <UpdateState+0x2a>
    267e:	89 2b       	or	r24, r25
    2680:	09 f0       	breq	.+2      	; 0x2684 <UpdateState+0x22>
	case Title: UpdateTitle(); break;
	case Game: UpdateGame(); break;
	case FinalScore: UpdateFinalScore(); break;
	}
}
    2682:	06 c0       	rjmp	.+12     	; 0x2690 <UpdateState+0x2e>
	}
	nokia_lcd_render();
}
void UpdateState() {
	switch(screenState) {
	case Title: UpdateTitle(); break;
    2684:	75 da       	rcall	.-2838   	; 0x1b70 <UpdateTitle>
    2686:	04 c0       	rjmp	.+8      	; 0x2690 <UpdateState+0x2e>
	case Game: UpdateGame(); break;
    2688:	6a dc       	rcall	.-1836   	; 0x1f5e <UpdateGame>
    268a:	02 c0       	rjmp	.+4      	; 0x2690 <UpdateState+0x2e>
	case FinalScore: UpdateFinalScore(); break;
    268c:	52 db       	rcall	.-2396   	; 0x1d32 <UpdateFinalScore>
    268e:	00 00       	nop
    2690:	00 00       	nop
	}
}
    2692:	df 91       	pop	r29
    2694:	cf 91       	pop	r28
    2696:	08 95       	ret

00002698 <main>:
    2698:	cf 93       	push	r28
int main(void)
{
    269a:	df 93       	push	r29
    269c:	cd b7       	in	r28, 0x3d	; 61
    269e:	de b7       	in	r29, 0x3e	; 62
    nokia_lcd_render();

	TimerSet(1000);
	TimerOn();
	*/
	DDR_BUTTONS = 0xFF;
    26a0:	8a e2       	ldi	r24, 0x2A	; 42
    26a2:	90 e0       	ldi	r25, 0x00	; 0
    26a4:	2f ef       	ldi	r18, 0xFF	; 255
    26a6:	fc 01       	movw	r30, r24
    26a8:	20 83       	st	Z, r18
	PIN_BUTTONS = -1;
    26aa:	89 e2       	ldi	r24, 0x29	; 41
    26ac:	90 e0       	ldi	r25, 0x00	; 0
    26ae:	2f ef       	ldi	r18, 0xFF	; 255
    26b0:	fc 01       	movw	r30, r24
    26b2:	20 83       	st	Z, r18
	nokia_lcd_init();
    26b4:	0e 94 f7 01 	call	0x3ee	; 0x3ee <nokia_lcd_init>
	nokia_lcd_clear();
    26b8:	0e 94 6c 03 	call	0x6d8	; 0x6d8 <nokia_lcd_clear>
	TimerSet(10);
    26bc:	6a e0       	ldi	r22, 0x0A	; 10
    26be:	70 e0       	ldi	r23, 0x00	; 0
    26c0:	80 e0       	ldi	r24, 0x00	; 0
    26c2:	90 e0       	ldi	r25, 0x00	; 0
    26c4:	0e 94 ef 04 	call	0x9de	; 0x9de <TimerSet>
	TimerOn();
    26c8:	0e 94 1d 05 	call	0xa3a	; 0xa3a <TimerOn>

	screenState = Title;
    26cc:	10 92 67 04 	sts	0x0467, r1	; 0x800467 <screenState>
	highScore = load(0xFF);
    26d0:	8f ef       	ldi	r24, 0xFF	; 255
    26d2:	90 e0       	ldi	r25, 0x00	; 0
    26d4:	0e 94 14 06 	call	0xc28	; 0xc28 <load>
    26d8:	80 93 48 03 	sts	0x0348, r24	; 0x800348 <highScore>
	while(1) {
		UpdateState();
    26dc:	c2 df       	rcall	.-124    	; 0x2662 <UpdateState>
		while(!TimerFlag);
    26de:	00 00       	nop
    26e0:	80 91 42 03 	lds	r24, 0x0342	; 0x800342 <TimerFlag>
    26e4:	88 23       	and	r24, r24
    26e6:	e1 f3       	breq	.-8      	; 0x26e0 <main+0x48>
		TimerFlag = 0;
    26e8:	10 92 42 03 	sts	0x0342, r1	; 0x800342 <TimerFlag>
	}
    26ec:	f7 cf       	rjmp	.-18     	; 0x26dc <main+0x44>

000026ee <__cmpsf2>:
    26ee:	2f d0       	rcall	.+94     	; 0x274e <__fp_cmp>
    26f0:	08 f4       	brcc	.+2      	; 0x26f4 <__cmpsf2+0x6>
    26f2:	81 e0       	ldi	r24, 0x01	; 1
    26f4:	08 95       	ret

000026f6 <__fixunssfsi>:
    26f6:	57 d0       	rcall	.+174    	; 0x27a6 <__fp_splitA>
    26f8:	88 f0       	brcs	.+34     	; 0x271c <__fixunssfsi+0x26>
    26fa:	9f 57       	subi	r25, 0x7F	; 127
    26fc:	90 f0       	brcs	.+36     	; 0x2722 <__fixunssfsi+0x2c>
    26fe:	b9 2f       	mov	r27, r25
    2700:	99 27       	eor	r25, r25
    2702:	b7 51       	subi	r27, 0x17	; 23
    2704:	a0 f0       	brcs	.+40     	; 0x272e <__fixunssfsi+0x38>
    2706:	d1 f0       	breq	.+52     	; 0x273c <__fixunssfsi+0x46>
    2708:	66 0f       	add	r22, r22
    270a:	77 1f       	adc	r23, r23
    270c:	88 1f       	adc	r24, r24
    270e:	99 1f       	adc	r25, r25
    2710:	1a f0       	brmi	.+6      	; 0x2718 <__fixunssfsi+0x22>
    2712:	ba 95       	dec	r27
    2714:	c9 f7       	brne	.-14     	; 0x2708 <__fixunssfsi+0x12>
    2716:	12 c0       	rjmp	.+36     	; 0x273c <__fixunssfsi+0x46>
    2718:	b1 30       	cpi	r27, 0x01	; 1
    271a:	81 f0       	breq	.+32     	; 0x273c <__fixunssfsi+0x46>
    271c:	5e d0       	rcall	.+188    	; 0x27da <__fp_zero>
    271e:	b1 e0       	ldi	r27, 0x01	; 1
    2720:	08 95       	ret
    2722:	5b c0       	rjmp	.+182    	; 0x27da <__fp_zero>
    2724:	67 2f       	mov	r22, r23
    2726:	78 2f       	mov	r23, r24
    2728:	88 27       	eor	r24, r24
    272a:	b8 5f       	subi	r27, 0xF8	; 248
    272c:	39 f0       	breq	.+14     	; 0x273c <__fixunssfsi+0x46>
    272e:	b9 3f       	cpi	r27, 0xF9	; 249
    2730:	cc f3       	brlt	.-14     	; 0x2724 <__fixunssfsi+0x2e>
    2732:	86 95       	lsr	r24
    2734:	77 95       	ror	r23
    2736:	67 95       	ror	r22
    2738:	b3 95       	inc	r27
    273a:	d9 f7       	brne	.-10     	; 0x2732 <__fixunssfsi+0x3c>
    273c:	3e f4       	brtc	.+14     	; 0x274c <__fixunssfsi+0x56>
    273e:	90 95       	com	r25
    2740:	80 95       	com	r24
    2742:	70 95       	com	r23
    2744:	61 95       	neg	r22
    2746:	7f 4f       	sbci	r23, 0xFF	; 255
    2748:	8f 4f       	sbci	r24, 0xFF	; 255
    274a:	9f 4f       	sbci	r25, 0xFF	; 255
    274c:	08 95       	ret

0000274e <__fp_cmp>:
    274e:	99 0f       	add	r25, r25
    2750:	00 08       	sbc	r0, r0
    2752:	55 0f       	add	r21, r21
    2754:	aa 0b       	sbc	r26, r26
    2756:	e0 e8       	ldi	r30, 0x80	; 128
    2758:	fe ef       	ldi	r31, 0xFE	; 254
    275a:	16 16       	cp	r1, r22
    275c:	17 06       	cpc	r1, r23
    275e:	e8 07       	cpc	r30, r24
    2760:	f9 07       	cpc	r31, r25
    2762:	c0 f0       	brcs	.+48     	; 0x2794 <__fp_cmp+0x46>
    2764:	12 16       	cp	r1, r18
    2766:	13 06       	cpc	r1, r19
    2768:	e4 07       	cpc	r30, r20
    276a:	f5 07       	cpc	r31, r21
    276c:	98 f0       	brcs	.+38     	; 0x2794 <__fp_cmp+0x46>
    276e:	62 1b       	sub	r22, r18
    2770:	73 0b       	sbc	r23, r19
    2772:	84 0b       	sbc	r24, r20
    2774:	95 0b       	sbc	r25, r21
    2776:	39 f4       	brne	.+14     	; 0x2786 <__fp_cmp+0x38>
    2778:	0a 26       	eor	r0, r26
    277a:	61 f0       	breq	.+24     	; 0x2794 <__fp_cmp+0x46>
    277c:	23 2b       	or	r18, r19
    277e:	24 2b       	or	r18, r20
    2780:	25 2b       	or	r18, r21
    2782:	21 f4       	brne	.+8      	; 0x278c <__fp_cmp+0x3e>
    2784:	08 95       	ret
    2786:	0a 26       	eor	r0, r26
    2788:	09 f4       	brne	.+2      	; 0x278c <__fp_cmp+0x3e>
    278a:	a1 40       	sbci	r26, 0x01	; 1
    278c:	a6 95       	lsr	r26
    278e:	8f ef       	ldi	r24, 0xFF	; 255
    2790:	81 1d       	adc	r24, r1
    2792:	81 1d       	adc	r24, r1
    2794:	08 95       	ret

00002796 <__fp_split3>:
    2796:	57 fd       	sbrc	r21, 7
    2798:	90 58       	subi	r25, 0x80	; 128
    279a:	44 0f       	add	r20, r20
    279c:	55 1f       	adc	r21, r21
    279e:	59 f0       	breq	.+22     	; 0x27b6 <__fp_splitA+0x10>
    27a0:	5f 3f       	cpi	r21, 0xFF	; 255
    27a2:	71 f0       	breq	.+28     	; 0x27c0 <__fp_splitA+0x1a>
    27a4:	47 95       	ror	r20

000027a6 <__fp_splitA>:
    27a6:	88 0f       	add	r24, r24
    27a8:	97 fb       	bst	r25, 7
    27aa:	99 1f       	adc	r25, r25
    27ac:	61 f0       	breq	.+24     	; 0x27c6 <__fp_splitA+0x20>
    27ae:	9f 3f       	cpi	r25, 0xFF	; 255
    27b0:	79 f0       	breq	.+30     	; 0x27d0 <__fp_splitA+0x2a>
    27b2:	87 95       	ror	r24
    27b4:	08 95       	ret
    27b6:	12 16       	cp	r1, r18
    27b8:	13 06       	cpc	r1, r19
    27ba:	14 06       	cpc	r1, r20
    27bc:	55 1f       	adc	r21, r21
    27be:	f2 cf       	rjmp	.-28     	; 0x27a4 <__fp_split3+0xe>
    27c0:	46 95       	lsr	r20
    27c2:	f1 df       	rcall	.-30     	; 0x27a6 <__fp_splitA>
    27c4:	08 c0       	rjmp	.+16     	; 0x27d6 <__fp_splitA+0x30>
    27c6:	16 16       	cp	r1, r22
    27c8:	17 06       	cpc	r1, r23
    27ca:	18 06       	cpc	r1, r24
    27cc:	99 1f       	adc	r25, r25
    27ce:	f1 cf       	rjmp	.-30     	; 0x27b2 <__fp_splitA+0xc>
    27d0:	86 95       	lsr	r24
    27d2:	71 05       	cpc	r23, r1
    27d4:	61 05       	cpc	r22, r1
    27d6:	08 94       	sec
    27d8:	08 95       	ret

000027da <__fp_zero>:
    27da:	e8 94       	clt

000027dc <__fp_szero>:
    27dc:	bb 27       	eor	r27, r27
    27de:	66 27       	eor	r22, r22
    27e0:	77 27       	eor	r23, r23
    27e2:	cb 01       	movw	r24, r22
    27e4:	97 f9       	bld	r25, 7
    27e6:	08 95       	ret

000027e8 <__gesf2>:
    27e8:	b2 df       	rcall	.-156    	; 0x274e <__fp_cmp>
    27ea:	08 f4       	brcc	.+2      	; 0x27ee <__gesf2+0x6>
    27ec:	8f ef       	ldi	r24, 0xFF	; 255
    27ee:	08 95       	ret

000027f0 <__mulsf3>:
    27f0:	0b d0       	rcall	.+22     	; 0x2808 <__mulsf3x>
    27f2:	78 c0       	rjmp	.+240    	; 0x28e4 <__fp_round>
    27f4:	69 d0       	rcall	.+210    	; 0x28c8 <__fp_pscA>
    27f6:	28 f0       	brcs	.+10     	; 0x2802 <__mulsf3+0x12>
    27f8:	6e d0       	rcall	.+220    	; 0x28d6 <__fp_pscB>
    27fa:	18 f0       	brcs	.+6      	; 0x2802 <__mulsf3+0x12>
    27fc:	95 23       	and	r25, r21
    27fe:	09 f0       	breq	.+2      	; 0x2802 <__mulsf3+0x12>
    2800:	5a c0       	rjmp	.+180    	; 0x28b6 <__fp_inf>
    2802:	5f c0       	rjmp	.+190    	; 0x28c2 <__fp_nan>
    2804:	11 24       	eor	r1, r1
    2806:	ea cf       	rjmp	.-44     	; 0x27dc <__fp_szero>

00002808 <__mulsf3x>:
    2808:	c6 df       	rcall	.-116    	; 0x2796 <__fp_split3>
    280a:	a0 f3       	brcs	.-24     	; 0x27f4 <__mulsf3+0x4>

0000280c <__mulsf3_pse>:
    280c:	95 9f       	mul	r25, r21
    280e:	d1 f3       	breq	.-12     	; 0x2804 <__mulsf3+0x14>
    2810:	95 0f       	add	r25, r21
    2812:	50 e0       	ldi	r21, 0x00	; 0
    2814:	55 1f       	adc	r21, r21
    2816:	62 9f       	mul	r22, r18
    2818:	f0 01       	movw	r30, r0
    281a:	72 9f       	mul	r23, r18
    281c:	bb 27       	eor	r27, r27
    281e:	f0 0d       	add	r31, r0
    2820:	b1 1d       	adc	r27, r1
    2822:	63 9f       	mul	r22, r19
    2824:	aa 27       	eor	r26, r26
    2826:	f0 0d       	add	r31, r0
    2828:	b1 1d       	adc	r27, r1
    282a:	aa 1f       	adc	r26, r26
    282c:	64 9f       	mul	r22, r20
    282e:	66 27       	eor	r22, r22
    2830:	b0 0d       	add	r27, r0
    2832:	a1 1d       	adc	r26, r1
    2834:	66 1f       	adc	r22, r22
    2836:	82 9f       	mul	r24, r18
    2838:	22 27       	eor	r18, r18
    283a:	b0 0d       	add	r27, r0
    283c:	a1 1d       	adc	r26, r1
    283e:	62 1f       	adc	r22, r18
    2840:	73 9f       	mul	r23, r19
    2842:	b0 0d       	add	r27, r0
    2844:	a1 1d       	adc	r26, r1
    2846:	62 1f       	adc	r22, r18
    2848:	83 9f       	mul	r24, r19
    284a:	a0 0d       	add	r26, r0
    284c:	61 1d       	adc	r22, r1
    284e:	22 1f       	adc	r18, r18
    2850:	74 9f       	mul	r23, r20
    2852:	33 27       	eor	r19, r19
    2854:	a0 0d       	add	r26, r0
    2856:	61 1d       	adc	r22, r1
    2858:	23 1f       	adc	r18, r19
    285a:	84 9f       	mul	r24, r20
    285c:	60 0d       	add	r22, r0
    285e:	21 1d       	adc	r18, r1
    2860:	82 2f       	mov	r24, r18
    2862:	76 2f       	mov	r23, r22
    2864:	6a 2f       	mov	r22, r26
    2866:	11 24       	eor	r1, r1
    2868:	9f 57       	subi	r25, 0x7F	; 127
    286a:	50 40       	sbci	r21, 0x00	; 0
    286c:	8a f0       	brmi	.+34     	; 0x2890 <__mulsf3_pse+0x84>
    286e:	e1 f0       	breq	.+56     	; 0x28a8 <__mulsf3_pse+0x9c>
    2870:	88 23       	and	r24, r24
    2872:	4a f0       	brmi	.+18     	; 0x2886 <__mulsf3_pse+0x7a>
    2874:	ee 0f       	add	r30, r30
    2876:	ff 1f       	adc	r31, r31
    2878:	bb 1f       	adc	r27, r27
    287a:	66 1f       	adc	r22, r22
    287c:	77 1f       	adc	r23, r23
    287e:	88 1f       	adc	r24, r24
    2880:	91 50       	subi	r25, 0x01	; 1
    2882:	50 40       	sbci	r21, 0x00	; 0
    2884:	a9 f7       	brne	.-22     	; 0x2870 <__mulsf3_pse+0x64>
    2886:	9e 3f       	cpi	r25, 0xFE	; 254
    2888:	51 05       	cpc	r21, r1
    288a:	70 f0       	brcs	.+28     	; 0x28a8 <__mulsf3_pse+0x9c>
    288c:	14 c0       	rjmp	.+40     	; 0x28b6 <__fp_inf>
    288e:	a6 cf       	rjmp	.-180    	; 0x27dc <__fp_szero>
    2890:	5f 3f       	cpi	r21, 0xFF	; 255
    2892:	ec f3       	brlt	.-6      	; 0x288e <__mulsf3_pse+0x82>
    2894:	98 3e       	cpi	r25, 0xE8	; 232
    2896:	dc f3       	brlt	.-10     	; 0x288e <__mulsf3_pse+0x82>
    2898:	86 95       	lsr	r24
    289a:	77 95       	ror	r23
    289c:	67 95       	ror	r22
    289e:	b7 95       	ror	r27
    28a0:	f7 95       	ror	r31
    28a2:	e7 95       	ror	r30
    28a4:	9f 5f       	subi	r25, 0xFF	; 255
    28a6:	c1 f7       	brne	.-16     	; 0x2898 <__mulsf3_pse+0x8c>
    28a8:	fe 2b       	or	r31, r30
    28aa:	88 0f       	add	r24, r24
    28ac:	91 1d       	adc	r25, r1
    28ae:	96 95       	lsr	r25
    28b0:	87 95       	ror	r24
    28b2:	97 f9       	bld	r25, 7
    28b4:	08 95       	ret

000028b6 <__fp_inf>:
    28b6:	97 f9       	bld	r25, 7
    28b8:	9f 67       	ori	r25, 0x7F	; 127
    28ba:	80 e8       	ldi	r24, 0x80	; 128
    28bc:	70 e0       	ldi	r23, 0x00	; 0
    28be:	60 e0       	ldi	r22, 0x00	; 0
    28c0:	08 95       	ret

000028c2 <__fp_nan>:
    28c2:	9f ef       	ldi	r25, 0xFF	; 255
    28c4:	80 ec       	ldi	r24, 0xC0	; 192
    28c6:	08 95       	ret

000028c8 <__fp_pscA>:
    28c8:	00 24       	eor	r0, r0
    28ca:	0a 94       	dec	r0
    28cc:	16 16       	cp	r1, r22
    28ce:	17 06       	cpc	r1, r23
    28d0:	18 06       	cpc	r1, r24
    28d2:	09 06       	cpc	r0, r25
    28d4:	08 95       	ret

000028d6 <__fp_pscB>:
    28d6:	00 24       	eor	r0, r0
    28d8:	0a 94       	dec	r0
    28da:	12 16       	cp	r1, r18
    28dc:	13 06       	cpc	r1, r19
    28de:	14 06       	cpc	r1, r20
    28e0:	05 06       	cpc	r0, r21
    28e2:	08 95       	ret

000028e4 <__fp_round>:
    28e4:	09 2e       	mov	r0, r25
    28e6:	03 94       	inc	r0
    28e8:	00 0c       	add	r0, r0
    28ea:	11 f4       	brne	.+4      	; 0x28f0 <__fp_round+0xc>
    28ec:	88 23       	and	r24, r24
    28ee:	52 f0       	brmi	.+20     	; 0x2904 <__fp_round+0x20>
    28f0:	bb 0f       	add	r27, r27
    28f2:	40 f4       	brcc	.+16     	; 0x2904 <__fp_round+0x20>
    28f4:	bf 2b       	or	r27, r31
    28f6:	11 f4       	brne	.+4      	; 0x28fc <__fp_round+0x18>
    28f8:	60 ff       	sbrs	r22, 0
    28fa:	04 c0       	rjmp	.+8      	; 0x2904 <__fp_round+0x20>
    28fc:	6f 5f       	subi	r22, 0xFF	; 255
    28fe:	7f 4f       	sbci	r23, 0xFF	; 255
    2900:	8f 4f       	sbci	r24, 0xFF	; 255
    2902:	9f 4f       	sbci	r25, 0xFF	; 255
    2904:	08 95       	ret

00002906 <__udivmodqi4>:
    2906:	99 1b       	sub	r25, r25
    2908:	79 e0       	ldi	r23, 0x09	; 9
    290a:	04 c0       	rjmp	.+8      	; 0x2914 <__udivmodqi4_ep>

0000290c <__udivmodqi4_loop>:
    290c:	99 1f       	adc	r25, r25
    290e:	96 17       	cp	r25, r22
    2910:	08 f0       	brcs	.+2      	; 0x2914 <__udivmodqi4_ep>
    2912:	96 1b       	sub	r25, r22

00002914 <__udivmodqi4_ep>:
    2914:	88 1f       	adc	r24, r24
    2916:	7a 95       	dec	r23
    2918:	c9 f7       	brne	.-14     	; 0x290c <__udivmodqi4_loop>
    291a:	80 95       	com	r24
    291c:	08 95       	ret

0000291e <__divmodhi4>:
    291e:	97 fb       	bst	r25, 7
    2920:	07 2e       	mov	r0, r23
    2922:	16 f4       	brtc	.+4      	; 0x2928 <__divmodhi4+0xa>
    2924:	00 94       	com	r0
    2926:	06 d0       	rcall	.+12     	; 0x2934 <__divmodhi4_neg1>
    2928:	77 fd       	sbrc	r23, 7
    292a:	08 d0       	rcall	.+16     	; 0x293c <__divmodhi4_neg2>
    292c:	14 d0       	rcall	.+40     	; 0x2956 <__udivmodhi4>
    292e:	07 fc       	sbrc	r0, 7
    2930:	05 d0       	rcall	.+10     	; 0x293c <__divmodhi4_neg2>
    2932:	3e f4       	brtc	.+14     	; 0x2942 <__divmodhi4_exit>

00002934 <__divmodhi4_neg1>:
    2934:	90 95       	com	r25
    2936:	81 95       	neg	r24
    2938:	9f 4f       	sbci	r25, 0xFF	; 255
    293a:	08 95       	ret

0000293c <__divmodhi4_neg2>:
    293c:	70 95       	com	r23
    293e:	61 95       	neg	r22
    2940:	7f 4f       	sbci	r23, 0xFF	; 255

00002942 <__divmodhi4_exit>:
    2942:	08 95       	ret

00002944 <__tablejump2__>:
    2944:	ee 0f       	add	r30, r30
    2946:	ff 1f       	adc	r31, r31
    2948:	00 24       	eor	r0, r0
    294a:	00 1c       	adc	r0, r0
    294c:	0b be       	out	0x3b, r0	; 59
    294e:	07 90       	elpm	r0, Z+
    2950:	f6 91       	elpm	r31, Z
    2952:	e0 2d       	mov	r30, r0
    2954:	09 94       	ijmp

00002956 <__udivmodhi4>:
    2956:	aa 1b       	sub	r26, r26
    2958:	bb 1b       	sub	r27, r27
    295a:	51 e1       	ldi	r21, 0x11	; 17
    295c:	07 c0       	rjmp	.+14     	; 0x296c <__udivmodhi4_ep>

0000295e <__udivmodhi4_loop>:
    295e:	aa 1f       	adc	r26, r26
    2960:	bb 1f       	adc	r27, r27
    2962:	a6 17       	cp	r26, r22
    2964:	b7 07       	cpc	r27, r23
    2966:	10 f0       	brcs	.+4      	; 0x296c <__udivmodhi4_ep>
    2968:	a6 1b       	sub	r26, r22
    296a:	b7 0b       	sbc	r27, r23

0000296c <__udivmodhi4_ep>:
    296c:	88 1f       	adc	r24, r24
    296e:	99 1f       	adc	r25, r25
    2970:	5a 95       	dec	r21
    2972:	a9 f7       	brne	.-22     	; 0x295e <__udivmodhi4_loop>
    2974:	80 95       	com	r24
    2976:	90 95       	com	r25
    2978:	bc 01       	movw	r22, r24
    297a:	cd 01       	movw	r24, r26
    297c:	08 95       	ret

0000297e <do_rand>:
    297e:	8f 92       	push	r8
    2980:	9f 92       	push	r9
    2982:	af 92       	push	r10
    2984:	bf 92       	push	r11
    2986:	cf 92       	push	r12
    2988:	df 92       	push	r13
    298a:	ef 92       	push	r14
    298c:	ff 92       	push	r15
    298e:	cf 93       	push	r28
    2990:	df 93       	push	r29
    2992:	ec 01       	movw	r28, r24
    2994:	68 81       	ld	r22, Y
    2996:	79 81       	ldd	r23, Y+1	; 0x01
    2998:	8a 81       	ldd	r24, Y+2	; 0x02
    299a:	9b 81       	ldd	r25, Y+3	; 0x03
    299c:	61 15       	cp	r22, r1
    299e:	71 05       	cpc	r23, r1
    29a0:	81 05       	cpc	r24, r1
    29a2:	91 05       	cpc	r25, r1
    29a4:	21 f4       	brne	.+8      	; 0x29ae <do_rand+0x30>
    29a6:	64 e2       	ldi	r22, 0x24	; 36
    29a8:	79 ed       	ldi	r23, 0xD9	; 217
    29aa:	8b e5       	ldi	r24, 0x5B	; 91
    29ac:	97 e0       	ldi	r25, 0x07	; 7
    29ae:	2d e1       	ldi	r18, 0x1D	; 29
    29b0:	33 ef       	ldi	r19, 0xF3	; 243
    29b2:	41 e0       	ldi	r20, 0x01	; 1
    29b4:	50 e0       	ldi	r21, 0x00	; 0
    29b6:	38 d0       	rcall	.+112    	; 0x2a28 <__divmodsi4>
    29b8:	49 01       	movw	r8, r18
    29ba:	5a 01       	movw	r10, r20
    29bc:	9b 01       	movw	r18, r22
    29be:	ac 01       	movw	r20, r24
    29c0:	a7 ea       	ldi	r26, 0xA7	; 167
    29c2:	b1 e4       	ldi	r27, 0x41	; 65
    29c4:	4d d0       	rcall	.+154    	; 0x2a60 <__muluhisi3>
    29c6:	6b 01       	movw	r12, r22
    29c8:	7c 01       	movw	r14, r24
    29ca:	ac ee       	ldi	r26, 0xEC	; 236
    29cc:	b4 ef       	ldi	r27, 0xF4	; 244
    29ce:	a5 01       	movw	r20, r10
    29d0:	94 01       	movw	r18, r8
    29d2:	52 d0       	rcall	.+164    	; 0x2a78 <__mulohisi3>
    29d4:	dc 01       	movw	r26, r24
    29d6:	cb 01       	movw	r24, r22
    29d8:	8c 0d       	add	r24, r12
    29da:	9d 1d       	adc	r25, r13
    29dc:	ae 1d       	adc	r26, r14
    29de:	bf 1d       	adc	r27, r15
    29e0:	b7 ff       	sbrs	r27, 7
    29e2:	03 c0       	rjmp	.+6      	; 0x29ea <do_rand+0x6c>
    29e4:	01 97       	sbiw	r24, 0x01	; 1
    29e6:	a1 09       	sbc	r26, r1
    29e8:	b0 48       	sbci	r27, 0x80	; 128
    29ea:	88 83       	st	Y, r24
    29ec:	99 83       	std	Y+1, r25	; 0x01
    29ee:	aa 83       	std	Y+2, r26	; 0x02
    29f0:	bb 83       	std	Y+3, r27	; 0x03
    29f2:	9f 77       	andi	r25, 0x7F	; 127
    29f4:	df 91       	pop	r29
    29f6:	cf 91       	pop	r28
    29f8:	ff 90       	pop	r15
    29fa:	ef 90       	pop	r14
    29fc:	df 90       	pop	r13
    29fe:	cf 90       	pop	r12
    2a00:	bf 90       	pop	r11
    2a02:	af 90       	pop	r10
    2a04:	9f 90       	pop	r9
    2a06:	8f 90       	pop	r8
    2a08:	08 95       	ret

00002a0a <rand_r>:
    2a0a:	b9 cf       	rjmp	.-142    	; 0x297e <do_rand>

00002a0c <rand>:
    2a0c:	80 e0       	ldi	r24, 0x00	; 0
    2a0e:	91 e0       	ldi	r25, 0x01	; 1
    2a10:	b6 cf       	rjmp	.-148    	; 0x297e <do_rand>

00002a12 <srand>:
    2a12:	a0 e0       	ldi	r26, 0x00	; 0
    2a14:	b0 e0       	ldi	r27, 0x00	; 0
    2a16:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    2a1a:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
    2a1e:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
    2a22:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
    2a26:	08 95       	ret

00002a28 <__divmodsi4>:
    2a28:	05 2e       	mov	r0, r21
    2a2a:	97 fb       	bst	r25, 7
    2a2c:	16 f4       	brtc	.+4      	; 0x2a32 <__divmodsi4+0xa>
    2a2e:	00 94       	com	r0
    2a30:	0f d0       	rcall	.+30     	; 0x2a50 <__negsi2>
    2a32:	57 fd       	sbrc	r21, 7
    2a34:	05 d0       	rcall	.+10     	; 0x2a40 <__divmodsi4_neg2>
    2a36:	24 d0       	rcall	.+72     	; 0x2a80 <__udivmodsi4>
    2a38:	07 fc       	sbrc	r0, 7
    2a3a:	02 d0       	rcall	.+4      	; 0x2a40 <__divmodsi4_neg2>
    2a3c:	46 f4       	brtc	.+16     	; 0x2a4e <__divmodsi4_exit>
    2a3e:	08 c0       	rjmp	.+16     	; 0x2a50 <__negsi2>

00002a40 <__divmodsi4_neg2>:
    2a40:	50 95       	com	r21
    2a42:	40 95       	com	r20
    2a44:	30 95       	com	r19
    2a46:	21 95       	neg	r18
    2a48:	3f 4f       	sbci	r19, 0xFF	; 255
    2a4a:	4f 4f       	sbci	r20, 0xFF	; 255
    2a4c:	5f 4f       	sbci	r21, 0xFF	; 255

00002a4e <__divmodsi4_exit>:
    2a4e:	08 95       	ret

00002a50 <__negsi2>:
    2a50:	90 95       	com	r25
    2a52:	80 95       	com	r24
    2a54:	70 95       	com	r23
    2a56:	61 95       	neg	r22
    2a58:	7f 4f       	sbci	r23, 0xFF	; 255
    2a5a:	8f 4f       	sbci	r24, 0xFF	; 255
    2a5c:	9f 4f       	sbci	r25, 0xFF	; 255
    2a5e:	08 95       	ret

00002a60 <__muluhisi3>:
    2a60:	31 d0       	rcall	.+98     	; 0x2ac4 <__umulhisi3>
    2a62:	a5 9f       	mul	r26, r21
    2a64:	90 0d       	add	r25, r0
    2a66:	b4 9f       	mul	r27, r20
    2a68:	90 0d       	add	r25, r0
    2a6a:	a4 9f       	mul	r26, r20
    2a6c:	80 0d       	add	r24, r0
    2a6e:	91 1d       	adc	r25, r1
    2a70:	11 24       	eor	r1, r1
    2a72:	08 95       	ret

00002a74 <__mulshisi3>:
    2a74:	b7 ff       	sbrs	r27, 7
    2a76:	f4 cf       	rjmp	.-24     	; 0x2a60 <__muluhisi3>

00002a78 <__mulohisi3>:
    2a78:	f3 df       	rcall	.-26     	; 0x2a60 <__muluhisi3>
    2a7a:	82 1b       	sub	r24, r18
    2a7c:	93 0b       	sbc	r25, r19
    2a7e:	08 95       	ret

00002a80 <__udivmodsi4>:
    2a80:	a1 e2       	ldi	r26, 0x21	; 33
    2a82:	1a 2e       	mov	r1, r26
    2a84:	aa 1b       	sub	r26, r26
    2a86:	bb 1b       	sub	r27, r27
    2a88:	fd 01       	movw	r30, r26
    2a8a:	0d c0       	rjmp	.+26     	; 0x2aa6 <__udivmodsi4_ep>

00002a8c <__udivmodsi4_loop>:
    2a8c:	aa 1f       	adc	r26, r26
    2a8e:	bb 1f       	adc	r27, r27
    2a90:	ee 1f       	adc	r30, r30
    2a92:	ff 1f       	adc	r31, r31
    2a94:	a2 17       	cp	r26, r18
    2a96:	b3 07       	cpc	r27, r19
    2a98:	e4 07       	cpc	r30, r20
    2a9a:	f5 07       	cpc	r31, r21
    2a9c:	20 f0       	brcs	.+8      	; 0x2aa6 <__udivmodsi4_ep>
    2a9e:	a2 1b       	sub	r26, r18
    2aa0:	b3 0b       	sbc	r27, r19
    2aa2:	e4 0b       	sbc	r30, r20
    2aa4:	f5 0b       	sbc	r31, r21

00002aa6 <__udivmodsi4_ep>:
    2aa6:	66 1f       	adc	r22, r22
    2aa8:	77 1f       	adc	r23, r23
    2aaa:	88 1f       	adc	r24, r24
    2aac:	99 1f       	adc	r25, r25
    2aae:	1a 94       	dec	r1
    2ab0:	69 f7       	brne	.-38     	; 0x2a8c <__udivmodsi4_loop>
    2ab2:	60 95       	com	r22
    2ab4:	70 95       	com	r23
    2ab6:	80 95       	com	r24
    2ab8:	90 95       	com	r25
    2aba:	9b 01       	movw	r18, r22
    2abc:	ac 01       	movw	r20, r24
    2abe:	bd 01       	movw	r22, r26
    2ac0:	cf 01       	movw	r24, r30
    2ac2:	08 95       	ret

00002ac4 <__umulhisi3>:
    2ac4:	a2 9f       	mul	r26, r18
    2ac6:	b0 01       	movw	r22, r0
    2ac8:	b3 9f       	mul	r27, r19
    2aca:	c0 01       	movw	r24, r0
    2acc:	a3 9f       	mul	r26, r19
    2ace:	70 0d       	add	r23, r0
    2ad0:	81 1d       	adc	r24, r1
    2ad2:	11 24       	eor	r1, r1
    2ad4:	91 1d       	adc	r25, r1
    2ad6:	b2 9f       	mul	r27, r18
    2ad8:	70 0d       	add	r23, r0
    2ada:	81 1d       	adc	r24, r1
    2adc:	11 24       	eor	r1, r1
    2ade:	91 1d       	adc	r25, r1
    2ae0:	08 95       	ret

00002ae2 <_exit>:
    2ae2:	f8 94       	cli

00002ae4 <__stop_program>:
    2ae4:	ff cf       	rjmp	.-2      	; 0x2ae4 <__stop_program>
