
achen115_project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  000020d2  00002166  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000020d2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000031a  0080010a  0080010a  00002170  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002170  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000021a0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001c0  00000000  00000000  000021e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001984  00000000  00000000  000023a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a64  00000000  00000000  00003d24  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000013b0  00000000  00000000  00004788  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000728  00000000  00000000  00005b38  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007ac  00000000  00000000  00006260  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000faf  00000000  00000000  00006a0c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001b0  00000000  00000000  000079bb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	4c c0       	rjmp	.+152    	; 0x9a <__ctors_end>
       2:	00 00       	nop
       4:	69 c0       	rjmp	.+210    	; 0xd8 <__bad_interrupt>
       6:	00 00       	nop
       8:	67 c0       	rjmp	.+206    	; 0xd8 <__bad_interrupt>
       a:	00 00       	nop
       c:	65 c0       	rjmp	.+202    	; 0xd8 <__bad_interrupt>
       e:	00 00       	nop
      10:	63 c0       	rjmp	.+198    	; 0xd8 <__bad_interrupt>
      12:	00 00       	nop
      14:	61 c0       	rjmp	.+194    	; 0xd8 <__bad_interrupt>
      16:	00 00       	nop
      18:	5f c0       	rjmp	.+190    	; 0xd8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	5d c0       	rjmp	.+186    	; 0xd8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	5b c0       	rjmp	.+182    	; 0xd8 <__bad_interrupt>
      22:	00 00       	nop
      24:	59 c0       	rjmp	.+178    	; 0xd8 <__bad_interrupt>
      26:	00 00       	nop
      28:	57 c0       	rjmp	.+174    	; 0xd8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	55 c0       	rjmp	.+170    	; 0xd8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	53 c0       	rjmp	.+166    	; 0xd8 <__bad_interrupt>
      32:	00 00       	nop
      34:	68 c3       	rjmp	.+1744   	; 0x706 <__vector_13>
      36:	00 00       	nop
      38:	4f c0       	rjmp	.+158    	; 0xd8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	4d c0       	rjmp	.+154    	; 0xd8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	4b c0       	rjmp	.+150    	; 0xd8 <__bad_interrupt>
      42:	00 00       	nop
      44:	49 c0       	rjmp	.+146    	; 0xd8 <__bad_interrupt>
      46:	00 00       	nop
      48:	47 c0       	rjmp	.+142    	; 0xd8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	45 c0       	rjmp	.+138    	; 0xd8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	43 c0       	rjmp	.+134    	; 0xd8 <__bad_interrupt>
      52:	00 00       	nop
      54:	41 c0       	rjmp	.+130    	; 0xd8 <__bad_interrupt>
      56:	00 00       	nop
      58:	3f c0       	rjmp	.+126    	; 0xd8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	3d c0       	rjmp	.+122    	; 0xd8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	3b c0       	rjmp	.+118    	; 0xd8 <__bad_interrupt>
      62:	00 00       	nop
      64:	39 c0       	rjmp	.+114    	; 0xd8 <__bad_interrupt>
      66:	00 00       	nop
      68:	37 c0       	rjmp	.+110    	; 0xd8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	35 c0       	rjmp	.+106    	; 0xd8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	33 c0       	rjmp	.+102    	; 0xd8 <__bad_interrupt>
      72:	00 00       	nop
      74:	31 c0       	rjmp	.+98     	; 0xd8 <__bad_interrupt>
      76:	00 00       	nop
      78:	2f c0       	rjmp	.+94     	; 0xd8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	2d c0       	rjmp	.+90     	; 0xd8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	2b c0       	rjmp	.+86     	; 0xd8 <__bad_interrupt>
      82:	00 00       	nop
      84:	29 c0       	rjmp	.+82     	; 0xd8 <__bad_interrupt>
      86:	00 00       	nop
      88:	27 c0       	rjmp	.+78     	; 0xd8 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	a1 0b       	sbc	r26, r17
      8e:	a7 0b       	sbc	r26, r23
      90:	ad 0b       	sbc	r26, r29
      92:	b3 0b       	sbc	r27, r19
      94:	bc 0b       	sbc	r27, r28
      96:	c4 0b       	sbc	r28, r20
      98:	ca 0b       	sbc	r28, r26

0000009a <__ctors_end>:
      9a:	11 24       	eor	r1, r1
      9c:	1f be       	out	0x3f, r1	; 63
      9e:	cf ef       	ldi	r28, 0xFF	; 255
      a0:	d0 e4       	ldi	r29, 0x40	; 64
      a2:	de bf       	out	0x3e, r29	; 62
      a4:	cd bf       	out	0x3d, r28	; 61

000000a6 <__do_copy_data>:
      a6:	11 e0       	ldi	r17, 0x01	; 1
      a8:	a0 e0       	ldi	r26, 0x00	; 0
      aa:	b1 e0       	ldi	r27, 0x01	; 1
      ac:	e2 ed       	ldi	r30, 0xD2	; 210
      ae:	f0 e2       	ldi	r31, 0x20	; 32
      b0:	00 e0       	ldi	r16, 0x00	; 0
      b2:	0b bf       	out	0x3b, r16	; 59
      b4:	02 c0       	rjmp	.+4      	; 0xba <__do_copy_data+0x14>
      b6:	07 90       	elpm	r0, Z+
      b8:	0d 92       	st	X+, r0
      ba:	aa 30       	cpi	r26, 0x0A	; 10
      bc:	b1 07       	cpc	r27, r17
      be:	d9 f7       	brne	.-10     	; 0xb6 <__do_copy_data+0x10>

000000c0 <__do_clear_bss>:
      c0:	24 e0       	ldi	r18, 0x04	; 4
      c2:	aa e0       	ldi	r26, 0x0A	; 10
      c4:	b1 e0       	ldi	r27, 0x01	; 1
      c6:	01 c0       	rjmp	.+2      	; 0xca <.do_clear_bss_start>

000000c8 <.do_clear_bss_loop>:
      c8:	1d 92       	st	X+, r1

000000ca <.do_clear_bss_start>:
      ca:	a4 32       	cpi	r26, 0x24	; 36
      cc:	b2 07       	cpc	r27, r18
      ce:	e1 f7       	brne	.-8      	; 0xc8 <.do_clear_bss_loop>
      d0:	0e 94 56 0e 	call	0x1cac	; 0x1cac <main>
      d4:	0c 94 67 10 	jmp	0x20ce	; 0x20ce <_exit>

000000d8 <__bad_interrupt>:
      d8:	93 cf       	rjmp	.-218    	; 0x0 <__vectors>

000000da <write>:
		Point p = getTile(t, i);
		if(inBoundsPoint(g, &p)) {
			g->tiles[p.x][p.y] = 0;
		}
	}
}
      da:	1f 93       	push	r17
      dc:	cf 93       	push	r28
      de:	df 93       	push	r29
      e0:	00 d0       	rcall	.+0      	; 0xe2 <write+0x8>
      e2:	cd b7       	in	r28, 0x3d	; 61
      e4:	de b7       	in	r29, 0x3e	; 62
      e6:	89 83       	std	Y+1, r24	; 0x01
      e8:	6a 83       	std	Y+2, r22	; 0x02
      ea:	82 e2       	ldi	r24, 0x22	; 34
      ec:	90 e0       	ldi	r25, 0x00	; 0
      ee:	22 e2       	ldi	r18, 0x22	; 34
      f0:	30 e0       	ldi	r19, 0x00	; 0
      f2:	f9 01       	movw	r30, r18
      f4:	20 81       	ld	r18, Z
      f6:	2d 7f       	andi	r18, 0xFD	; 253
      f8:	fc 01       	movw	r30, r24
      fa:	20 83       	st	Z, r18
      fc:	8a 81       	ldd	r24, Y+2	; 0x02
      fe:	88 23       	and	r24, r24
     100:	51 f0       	breq	.+20     	; 0x116 <write+0x3c>
     102:	82 e2       	ldi	r24, 0x22	; 34
     104:	90 e0       	ldi	r25, 0x00	; 0
     106:	22 e2       	ldi	r18, 0x22	; 34
     108:	30 e0       	ldi	r19, 0x00	; 0
     10a:	f9 01       	movw	r30, r18
     10c:	20 81       	ld	r18, Z
     10e:	28 60       	ori	r18, 0x08	; 8
     110:	fc 01       	movw	r30, r24
     112:	20 83       	st	Z, r18
     114:	09 c0       	rjmp	.+18     	; 0x128 <write+0x4e>
     116:	82 e2       	ldi	r24, 0x22	; 34
     118:	90 e0       	ldi	r25, 0x00	; 0
     11a:	22 e2       	ldi	r18, 0x22	; 34
     11c:	30 e0       	ldi	r19, 0x00	; 0
     11e:	f9 01       	movw	r30, r18
     120:	20 81       	ld	r18, Z
     122:	27 7f       	andi	r18, 0xF7	; 247
     124:	fc 01       	movw	r30, r24
     126:	20 83       	st	Z, r18
     128:	10 e0       	ldi	r17, 0x00	; 0
     12a:	3c c0       	rjmp	.+120    	; 0x1a4 <write+0xca>
     12c:	89 81       	ldd	r24, Y+1	; 0x01
     12e:	88 2f       	mov	r24, r24
     130:	90 e0       	ldi	r25, 0x00	; 0
     132:	21 2f       	mov	r18, r17
     134:	30 e0       	ldi	r19, 0x00	; 0
     136:	47 e0       	ldi	r20, 0x07	; 7
     138:	50 e0       	ldi	r21, 0x00	; 0
     13a:	ba 01       	movw	r22, r20
     13c:	62 1b       	sub	r22, r18
     13e:	73 0b       	sbc	r23, r19
     140:	9b 01       	movw	r18, r22
     142:	02 c0       	rjmp	.+4      	; 0x148 <write+0x6e>
     144:	95 95       	asr	r25
     146:	87 95       	ror	r24
     148:	2a 95       	dec	r18
     14a:	e2 f7       	brpl	.-8      	; 0x144 <write+0x6a>
     14c:	81 70       	andi	r24, 0x01	; 1
     14e:	99 27       	eor	r25, r25
     150:	89 2b       	or	r24, r25
     152:	51 f0       	breq	.+20     	; 0x168 <write+0x8e>
     154:	82 e2       	ldi	r24, 0x22	; 34
     156:	90 e0       	ldi	r25, 0x00	; 0
     158:	22 e2       	ldi	r18, 0x22	; 34
     15a:	30 e0       	ldi	r19, 0x00	; 0
     15c:	f9 01       	movw	r30, r18
     15e:	20 81       	ld	r18, Z
     160:	20 61       	ori	r18, 0x10	; 16
     162:	fc 01       	movw	r30, r24
     164:	20 83       	st	Z, r18
     166:	09 c0       	rjmp	.+18     	; 0x17a <write+0xa0>
     168:	82 e2       	ldi	r24, 0x22	; 34
     16a:	90 e0       	ldi	r25, 0x00	; 0
     16c:	22 e2       	ldi	r18, 0x22	; 34
     16e:	30 e0       	ldi	r19, 0x00	; 0
     170:	f9 01       	movw	r30, r18
     172:	20 81       	ld	r18, Z
     174:	2f 7e       	andi	r18, 0xEF	; 239
     176:	fc 01       	movw	r30, r24
     178:	20 83       	st	Z, r18
     17a:	82 e2       	ldi	r24, 0x22	; 34
     17c:	90 e0       	ldi	r25, 0x00	; 0
     17e:	22 e2       	ldi	r18, 0x22	; 34
     180:	30 e0       	ldi	r19, 0x00	; 0
     182:	f9 01       	movw	r30, r18
     184:	20 81       	ld	r18, Z
     186:	20 62       	ori	r18, 0x20	; 32
     188:	fc 01       	movw	r30, r24
     18a:	20 83       	st	Z, r18
     18c:	82 e2       	ldi	r24, 0x22	; 34
     18e:	90 e0       	ldi	r25, 0x00	; 0
     190:	22 e2       	ldi	r18, 0x22	; 34
     192:	30 e0       	ldi	r19, 0x00	; 0
     194:	f9 01       	movw	r30, r18
     196:	20 81       	ld	r18, Z
     198:	2f 7d       	andi	r18, 0xDF	; 223
     19a:	fc 01       	movw	r30, r24
     19c:	20 83       	st	Z, r18
     19e:	81 2f       	mov	r24, r17
     1a0:	11 e0       	ldi	r17, 0x01	; 1
     1a2:	18 0f       	add	r17, r24
     1a4:	18 30       	cpi	r17, 0x08	; 8
     1a6:	10 f2       	brcs	.-124    	; 0x12c <write+0x52>
     1a8:	82 e2       	ldi	r24, 0x22	; 34
     1aa:	90 e0       	ldi	r25, 0x00	; 0
     1ac:	22 e2       	ldi	r18, 0x22	; 34
     1ae:	30 e0       	ldi	r19, 0x00	; 0
     1b0:	f9 01       	movw	r30, r18
     1b2:	20 81       	ld	r18, Z
     1b4:	22 60       	ori	r18, 0x02	; 2
     1b6:	fc 01       	movw	r30, r24
     1b8:	20 83       	st	Z, r18
     1ba:	00 00       	nop
     1bc:	0f 90       	pop	r0
     1be:	0f 90       	pop	r0
     1c0:	df 91       	pop	r29
     1c2:	cf 91       	pop	r28
     1c4:	1f 91       	pop	r17
     1c6:	08 95       	ret

000001c8 <write_cmd>:
     1c8:	cf 93       	push	r28
     1ca:	df 93       	push	r29
     1cc:	1f 92       	push	r1
     1ce:	cd b7       	in	r28, 0x3d	; 61
     1d0:	de b7       	in	r29, 0x3e	; 62
     1d2:	89 83       	std	Y+1, r24	; 0x01
     1d4:	60 e0       	ldi	r22, 0x00	; 0
     1d6:	89 81       	ldd	r24, Y+1	; 0x01
     1d8:	80 df       	rcall	.-256    	; 0xda <write>
     1da:	00 00       	nop
     1dc:	0f 90       	pop	r0
     1de:	df 91       	pop	r29
     1e0:	cf 91       	pop	r28
     1e2:	08 95       	ret

000001e4 <write_data>:
     1e4:	cf 93       	push	r28
     1e6:	df 93       	push	r29
     1e8:	1f 92       	push	r1
     1ea:	cd b7       	in	r28, 0x3d	; 61
     1ec:	de b7       	in	r29, 0x3e	; 62
     1ee:	89 83       	std	Y+1, r24	; 0x01
     1f0:	61 e0       	ldi	r22, 0x01	; 1
     1f2:	89 81       	ldd	r24, Y+1	; 0x01
     1f4:	72 df       	rcall	.-284    	; 0xda <write>
     1f6:	00 00       	nop
     1f8:	0f 90       	pop	r0
     1fa:	df 91       	pop	r29
     1fc:	cf 91       	pop	r28
     1fe:	08 95       	ret

00000200 <nokia_lcd_init>:
     200:	0f 93       	push	r16
     202:	1f 93       	push	r17
     204:	cf 93       	push	r28
     206:	df 93       	push	r29
     208:	cd b7       	in	r28, 0x3d	; 61
     20a:	de b7       	in	r29, 0x3e	; 62
     20c:	6c 97       	sbiw	r28, 0x1c	; 28
     20e:	0f b6       	in	r0, 0x3f	; 63
     210:	f8 94       	cli
     212:	de bf       	out	0x3e, r29	; 62
     214:	0f be       	out	0x3f, r0	; 63
     216:	cd bf       	out	0x3d, r28	; 61
     218:	81 e2       	ldi	r24, 0x21	; 33
     21a:	90 e0       	ldi	r25, 0x00	; 0
     21c:	21 e2       	ldi	r18, 0x21	; 33
     21e:	30 e0       	ldi	r19, 0x00	; 0
     220:	f9 01       	movw	r30, r18
     222:	20 81       	ld	r18, Z
     224:	22 60       	ori	r18, 0x02	; 2
     226:	fc 01       	movw	r30, r24
     228:	20 83       	st	Z, r18
     22a:	81 e2       	ldi	r24, 0x21	; 33
     22c:	90 e0       	ldi	r25, 0x00	; 0
     22e:	21 e2       	ldi	r18, 0x21	; 33
     230:	30 e0       	ldi	r19, 0x00	; 0
     232:	f9 01       	movw	r30, r18
     234:	20 81       	ld	r18, Z
     236:	24 60       	ori	r18, 0x04	; 4
     238:	fc 01       	movw	r30, r24
     23a:	20 83       	st	Z, r18
     23c:	81 e2       	ldi	r24, 0x21	; 33
     23e:	90 e0       	ldi	r25, 0x00	; 0
     240:	21 e2       	ldi	r18, 0x21	; 33
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	f9 01       	movw	r30, r18
     246:	20 81       	ld	r18, Z
     248:	28 60       	ori	r18, 0x08	; 8
     24a:	fc 01       	movw	r30, r24
     24c:	20 83       	st	Z, r18
     24e:	81 e2       	ldi	r24, 0x21	; 33
     250:	90 e0       	ldi	r25, 0x00	; 0
     252:	21 e2       	ldi	r18, 0x21	; 33
     254:	30 e0       	ldi	r19, 0x00	; 0
     256:	f9 01       	movw	r30, r18
     258:	20 81       	ld	r18, Z
     25a:	20 61       	ori	r18, 0x10	; 16
     25c:	fc 01       	movw	r30, r24
     25e:	20 83       	st	Z, r18
     260:	81 e2       	ldi	r24, 0x21	; 33
     262:	90 e0       	ldi	r25, 0x00	; 0
     264:	21 e2       	ldi	r18, 0x21	; 33
     266:	30 e0       	ldi	r19, 0x00	; 0
     268:	f9 01       	movw	r30, r18
     26a:	20 81       	ld	r18, Z
     26c:	20 62       	ori	r18, 0x20	; 32
     26e:	fc 01       	movw	r30, r24
     270:	20 83       	st	Z, r18
     272:	82 e2       	ldi	r24, 0x22	; 34
     274:	90 e0       	ldi	r25, 0x00	; 0
     276:	22 e2       	ldi	r18, 0x22	; 34
     278:	30 e0       	ldi	r19, 0x00	; 0
     27a:	f9 01       	movw	r30, r18
     27c:	20 81       	ld	r18, Z
     27e:	24 60       	ori	r18, 0x04	; 4
     280:	fc 01       	movw	r30, r24
     282:	20 83       	st	Z, r18
     284:	82 e2       	ldi	r24, 0x22	; 34
     286:	90 e0       	ldi	r25, 0x00	; 0
     288:	22 e2       	ldi	r18, 0x22	; 34
     28a:	30 e0       	ldi	r19, 0x00	; 0
     28c:	f9 01       	movw	r30, r18
     28e:	20 81       	ld	r18, Z
     290:	22 60       	ori	r18, 0x02	; 2
     292:	fc 01       	movw	r30, r24
     294:	20 83       	st	Z, r18
     296:	80 e0       	ldi	r24, 0x00	; 0
     298:	90 e0       	ldi	r25, 0x00	; 0
     29a:	a0 e2       	ldi	r26, 0x20	; 32
     29c:	b1 e4       	ldi	r27, 0x41	; 65
     29e:	89 83       	std	Y+1, r24	; 0x01
     2a0:	9a 83       	std	Y+2, r25	; 0x02
     2a2:	ab 83       	std	Y+3, r26	; 0x03
     2a4:	bc 83       	std	Y+4, r27	; 0x04
     2a6:	20 e0       	ldi	r18, 0x00	; 0
     2a8:	30 e0       	ldi	r19, 0x00	; 0
     2aa:	4a e7       	ldi	r20, 0x7A	; 122
     2ac:	53 e4       	ldi	r21, 0x43	; 67
     2ae:	69 81       	ldd	r22, Y+1	; 0x01
     2b0:	7a 81       	ldd	r23, Y+2	; 0x02
     2b2:	8b 81       	ldd	r24, Y+3	; 0x03
     2b4:	9c 81       	ldd	r25, Y+4	; 0x04
     2b6:	0e 94 fa 0e 	call	0x1df4	; 0x1df4 <__mulsf3>
     2ba:	dc 01       	movw	r26, r24
     2bc:	cb 01       	movw	r24, r22
     2be:	8b 8b       	std	Y+19, r24	; 0x13
     2c0:	9c 8b       	std	Y+20, r25	; 0x14
     2c2:	ad 8b       	std	Y+21, r26	; 0x15
     2c4:	be 8b       	std	Y+22, r27	; 0x16
     2c6:	20 e0       	ldi	r18, 0x00	; 0
     2c8:	30 e0       	ldi	r19, 0x00	; 0
     2ca:	40 e8       	ldi	r20, 0x80	; 128
     2cc:	5f e3       	ldi	r21, 0x3F	; 63
     2ce:	6b 89       	ldd	r22, Y+19	; 0x13
     2d0:	7c 89       	ldd	r23, Y+20	; 0x14
     2d2:	8d 89       	ldd	r24, Y+21	; 0x15
     2d4:	9e 89       	ldd	r25, Y+22	; 0x16
     2d6:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <__cmpsf2>
     2da:	88 23       	and	r24, r24
     2dc:	2c f4       	brge	.+10     	; 0x2e8 <nokia_lcd_init+0xe8>
     2de:	81 e0       	ldi	r24, 0x01	; 1
     2e0:	90 e0       	ldi	r25, 0x00	; 0
     2e2:	98 8f       	std	Y+24, r25	; 0x18
     2e4:	8f 8b       	std	Y+23, r24	; 0x17
     2e6:	3f c0       	rjmp	.+126    	; 0x366 <nokia_lcd_init+0x166>
     2e8:	20 e0       	ldi	r18, 0x00	; 0
     2ea:	3f ef       	ldi	r19, 0xFF	; 255
     2ec:	4f e7       	ldi	r20, 0x7F	; 127
     2ee:	57 e4       	ldi	r21, 0x47	; 71
     2f0:	6b 89       	ldd	r22, Y+19	; 0x13
     2f2:	7c 89       	ldd	r23, Y+20	; 0x14
     2f4:	8d 89       	ldd	r24, Y+21	; 0x15
     2f6:	9e 89       	ldd	r25, Y+22	; 0x16
     2f8:	0e 94 f6 0e 	call	0x1dec	; 0x1dec <__gesf2>
     2fc:	18 16       	cp	r1, r24
     2fe:	4c f5       	brge	.+82     	; 0x352 <nokia_lcd_init+0x152>
     300:	20 e0       	ldi	r18, 0x00	; 0
     302:	30 e0       	ldi	r19, 0x00	; 0
     304:	40 e2       	ldi	r20, 0x20	; 32
     306:	51 e4       	ldi	r21, 0x41	; 65
     308:	69 81       	ldd	r22, Y+1	; 0x01
     30a:	7a 81       	ldd	r23, Y+2	; 0x02
     30c:	8b 81       	ldd	r24, Y+3	; 0x03
     30e:	9c 81       	ldd	r25, Y+4	; 0x04
     310:	0e 94 fa 0e 	call	0x1df4	; 0x1df4 <__mulsf3>
     314:	dc 01       	movw	r26, r24
     316:	cb 01       	movw	r24, r22
     318:	bc 01       	movw	r22, r24
     31a:	cd 01       	movw	r24, r26
     31c:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <__fixunssfsi>
     320:	dc 01       	movw	r26, r24
     322:	cb 01       	movw	r24, r22
     324:	98 8f       	std	Y+24, r25	; 0x18
     326:	8f 8b       	std	Y+23, r24	; 0x17
     328:	0f c0       	rjmp	.+30     	; 0x348 <nokia_lcd_init+0x148>
     32a:	89 e1       	ldi	r24, 0x19	; 25
     32c:	90 e0       	ldi	r25, 0x00	; 0
     32e:	9a 8f       	std	Y+26, r25	; 0x1a
     330:	89 8f       	std	Y+25, r24	; 0x19
     332:	89 8d       	ldd	r24, Y+25	; 0x19
     334:	9a 8d       	ldd	r25, Y+26	; 0x1a
     336:	01 97       	sbiw	r24, 0x01	; 1
     338:	f1 f7       	brne	.-4      	; 0x336 <nokia_lcd_init+0x136>
     33a:	9a 8f       	std	Y+26, r25	; 0x1a
     33c:	89 8f       	std	Y+25, r24	; 0x19
     33e:	8f 89       	ldd	r24, Y+23	; 0x17
     340:	98 8d       	ldd	r25, Y+24	; 0x18
     342:	01 97       	sbiw	r24, 0x01	; 1
     344:	98 8f       	std	Y+24, r25	; 0x18
     346:	8f 8b       	std	Y+23, r24	; 0x17
     348:	8f 89       	ldd	r24, Y+23	; 0x17
     34a:	98 8d       	ldd	r25, Y+24	; 0x18
     34c:	89 2b       	or	r24, r25
     34e:	69 f7       	brne	.-38     	; 0x32a <nokia_lcd_init+0x12a>
     350:	14 c0       	rjmp	.+40     	; 0x37a <nokia_lcd_init+0x17a>
     352:	6b 89       	ldd	r22, Y+19	; 0x13
     354:	7c 89       	ldd	r23, Y+20	; 0x14
     356:	8d 89       	ldd	r24, Y+21	; 0x15
     358:	9e 89       	ldd	r25, Y+22	; 0x16
     35a:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <__fixunssfsi>
     35e:	dc 01       	movw	r26, r24
     360:	cb 01       	movw	r24, r22
     362:	98 8f       	std	Y+24, r25	; 0x18
     364:	8f 8b       	std	Y+23, r24	; 0x17
     366:	8f 89       	ldd	r24, Y+23	; 0x17
     368:	98 8d       	ldd	r25, Y+24	; 0x18
     36a:	9c 8f       	std	Y+28, r25	; 0x1c
     36c:	8b 8f       	std	Y+27, r24	; 0x1b
     36e:	8b 8d       	ldd	r24, Y+27	; 0x1b
     370:	9c 8d       	ldd	r25, Y+28	; 0x1c
     372:	01 97       	sbiw	r24, 0x01	; 1
     374:	f1 f7       	brne	.-4      	; 0x372 <nokia_lcd_init+0x172>
     376:	9c 8f       	std	Y+28, r25	; 0x1c
     378:	8b 8f       	std	Y+27, r24	; 0x1b
     37a:	82 e2       	ldi	r24, 0x22	; 34
     37c:	90 e0       	ldi	r25, 0x00	; 0
     37e:	22 e2       	ldi	r18, 0x22	; 34
     380:	30 e0       	ldi	r19, 0x00	; 0
     382:	f9 01       	movw	r30, r18
     384:	20 81       	ld	r18, Z
     386:	2b 7f       	andi	r18, 0xFB	; 251
     388:	fc 01       	movw	r30, r24
     38a:	20 83       	st	Z, r18
     38c:	80 e0       	ldi	r24, 0x00	; 0
     38e:	90 e0       	ldi	r25, 0x00	; 0
     390:	ac e8       	ldi	r26, 0x8C	; 140
     392:	b2 e4       	ldi	r27, 0x42	; 66
     394:	8d 83       	std	Y+5, r24	; 0x05
     396:	9e 83       	std	Y+6, r25	; 0x06
     398:	af 83       	std	Y+7, r26	; 0x07
     39a:	b8 87       	std	Y+8, r27	; 0x08
     39c:	20 e0       	ldi	r18, 0x00	; 0
     39e:	30 e0       	ldi	r19, 0x00	; 0
     3a0:	4a e7       	ldi	r20, 0x7A	; 122
     3a2:	53 e4       	ldi	r21, 0x43	; 67
     3a4:	6d 81       	ldd	r22, Y+5	; 0x05
     3a6:	7e 81       	ldd	r23, Y+6	; 0x06
     3a8:	8f 81       	ldd	r24, Y+7	; 0x07
     3aa:	98 85       	ldd	r25, Y+8	; 0x08
     3ac:	0e 94 fa 0e 	call	0x1df4	; 0x1df4 <__mulsf3>
     3b0:	dc 01       	movw	r26, r24
     3b2:	cb 01       	movw	r24, r22
     3b4:	89 87       	std	Y+9, r24	; 0x09
     3b6:	9a 87       	std	Y+10, r25	; 0x0a
     3b8:	ab 87       	std	Y+11, r26	; 0x0b
     3ba:	bc 87       	std	Y+12, r27	; 0x0c
     3bc:	20 e0       	ldi	r18, 0x00	; 0
     3be:	30 e0       	ldi	r19, 0x00	; 0
     3c0:	40 e8       	ldi	r20, 0x80	; 128
     3c2:	5f e3       	ldi	r21, 0x3F	; 63
     3c4:	69 85       	ldd	r22, Y+9	; 0x09
     3c6:	7a 85       	ldd	r23, Y+10	; 0x0a
     3c8:	8b 85       	ldd	r24, Y+11	; 0x0b
     3ca:	9c 85       	ldd	r25, Y+12	; 0x0c
     3cc:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <__cmpsf2>
     3d0:	88 23       	and	r24, r24
     3d2:	2c f4       	brge	.+10     	; 0x3de <nokia_lcd_init+0x1de>
     3d4:	81 e0       	ldi	r24, 0x01	; 1
     3d6:	90 e0       	ldi	r25, 0x00	; 0
     3d8:	9e 87       	std	Y+14, r25	; 0x0e
     3da:	8d 87       	std	Y+13, r24	; 0x0d
     3dc:	3f c0       	rjmp	.+126    	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
     3de:	20 e0       	ldi	r18, 0x00	; 0
     3e0:	3f ef       	ldi	r19, 0xFF	; 255
     3e2:	4f e7       	ldi	r20, 0x7F	; 127
     3e4:	57 e4       	ldi	r21, 0x47	; 71
     3e6:	69 85       	ldd	r22, Y+9	; 0x09
     3e8:	7a 85       	ldd	r23, Y+10	; 0x0a
     3ea:	8b 85       	ldd	r24, Y+11	; 0x0b
     3ec:	9c 85       	ldd	r25, Y+12	; 0x0c
     3ee:	0e 94 f6 0e 	call	0x1dec	; 0x1dec <__gesf2>
     3f2:	18 16       	cp	r1, r24
     3f4:	4c f5       	brge	.+82     	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
     3f6:	20 e0       	ldi	r18, 0x00	; 0
     3f8:	30 e0       	ldi	r19, 0x00	; 0
     3fa:	40 e2       	ldi	r20, 0x20	; 32
     3fc:	51 e4       	ldi	r21, 0x41	; 65
     3fe:	6d 81       	ldd	r22, Y+5	; 0x05
     400:	7e 81       	ldd	r23, Y+6	; 0x06
     402:	8f 81       	ldd	r24, Y+7	; 0x07
     404:	98 85       	ldd	r25, Y+8	; 0x08
     406:	0e 94 fa 0e 	call	0x1df4	; 0x1df4 <__mulsf3>
     40a:	dc 01       	movw	r26, r24
     40c:	cb 01       	movw	r24, r22
     40e:	bc 01       	movw	r22, r24
     410:	cd 01       	movw	r24, r26
     412:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <__fixunssfsi>
     416:	dc 01       	movw	r26, r24
     418:	cb 01       	movw	r24, r22
     41a:	9e 87       	std	Y+14, r25	; 0x0e
     41c:	8d 87       	std	Y+13, r24	; 0x0d
     41e:	0f c0       	rjmp	.+30     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
     420:	89 e1       	ldi	r24, 0x19	; 25
     422:	90 e0       	ldi	r25, 0x00	; 0
     424:	98 8b       	std	Y+16, r25	; 0x10
     426:	8f 87       	std	Y+15, r24	; 0x0f
     428:	8f 85       	ldd	r24, Y+15	; 0x0f
     42a:	98 89       	ldd	r25, Y+16	; 0x10
     42c:	01 97       	sbiw	r24, 0x01	; 1
     42e:	f1 f7       	brne	.-4      	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
     430:	98 8b       	std	Y+16, r25	; 0x10
     432:	8f 87       	std	Y+15, r24	; 0x0f
     434:	8d 85       	ldd	r24, Y+13	; 0x0d
     436:	9e 85       	ldd	r25, Y+14	; 0x0e
     438:	01 97       	sbiw	r24, 0x01	; 1
     43a:	9e 87       	std	Y+14, r25	; 0x0e
     43c:	8d 87       	std	Y+13, r24	; 0x0d
     43e:	8d 85       	ldd	r24, Y+13	; 0x0d
     440:	9e 85       	ldd	r25, Y+14	; 0x0e
     442:	89 2b       	or	r24, r25
     444:	69 f7       	brne	.-38     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
     446:	14 c0       	rjmp	.+40     	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
     448:	69 85       	ldd	r22, Y+9	; 0x09
     44a:	7a 85       	ldd	r23, Y+10	; 0x0a
     44c:	8b 85       	ldd	r24, Y+11	; 0x0b
     44e:	9c 85       	ldd	r25, Y+12	; 0x0c
     450:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <__fixunssfsi>
     454:	dc 01       	movw	r26, r24
     456:	cb 01       	movw	r24, r22
     458:	9e 87       	std	Y+14, r25	; 0x0e
     45a:	8d 87       	std	Y+13, r24	; 0x0d
     45c:	8d 85       	ldd	r24, Y+13	; 0x0d
     45e:	9e 85       	ldd	r25, Y+14	; 0x0e
     460:	9a 8b       	std	Y+18, r25	; 0x12
     462:	89 8b       	std	Y+17, r24	; 0x11
     464:	89 89       	ldd	r24, Y+17	; 0x11
     466:	9a 89       	ldd	r25, Y+18	; 0x12
     468:	01 97       	sbiw	r24, 0x01	; 1
     46a:	f1 f7       	brne	.-4      	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
     46c:	9a 8b       	std	Y+18, r25	; 0x12
     46e:	89 8b       	std	Y+17, r24	; 0x11
     470:	82 e2       	ldi	r24, 0x22	; 34
     472:	90 e0       	ldi	r25, 0x00	; 0
     474:	22 e2       	ldi	r18, 0x22	; 34
     476:	30 e0       	ldi	r19, 0x00	; 0
     478:	f9 01       	movw	r30, r18
     47a:	20 81       	ld	r18, Z
     47c:	24 60       	ori	r18, 0x04	; 4
     47e:	fc 01       	movw	r30, r24
     480:	20 83       	st	Z, r18
     482:	82 e2       	ldi	r24, 0x22	; 34
     484:	90 e0       	ldi	r25, 0x00	; 0
     486:	22 e2       	ldi	r18, 0x22	; 34
     488:	30 e0       	ldi	r19, 0x00	; 0
     48a:	f9 01       	movw	r30, r18
     48c:	20 81       	ld	r18, Z
     48e:	2d 7f       	andi	r18, 0xFD	; 253
     490:	fc 01       	movw	r30, r24
     492:	20 83       	st	Z, r18
     494:	81 e2       	ldi	r24, 0x21	; 33
     496:	98 de       	rcall	.-720    	; 0x1c8 <write_cmd>
     498:	83 e1       	ldi	r24, 0x13	; 19
     49a:	96 de       	rcall	.-724    	; 0x1c8 <write_cmd>
     49c:	86 e0       	ldi	r24, 0x06	; 6
     49e:	94 de       	rcall	.-728    	; 0x1c8 <write_cmd>
     4a0:	82 ec       	ldi	r24, 0xC2	; 194
     4a2:	92 de       	rcall	.-732    	; 0x1c8 <write_cmd>
     4a4:	80 e2       	ldi	r24, 0x20	; 32
     4a6:	90 de       	rcall	.-736    	; 0x1c8 <write_cmd>
     4a8:	89 e0       	ldi	r24, 0x09	; 9
     4aa:	8e de       	rcall	.-740    	; 0x1c8 <write_cmd>
     4ac:	80 e8       	ldi	r24, 0x80	; 128
     4ae:	8c de       	rcall	.-744    	; 0x1c8 <write_cmd>
     4b0:	80 e4       	ldi	r24, 0x40	; 64
     4b2:	8a de       	rcall	.-748    	; 0x1c8 <write_cmd>
     4b4:	00 e0       	ldi	r16, 0x00	; 0
     4b6:	10 e0       	ldi	r17, 0x00	; 0
     4b8:	04 c0       	rjmp	.+8      	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
     4ba:	80 e0       	ldi	r24, 0x00	; 0
     4bc:	93 de       	rcall	.-730    	; 0x1e4 <write_data>
     4be:	0f 5f       	subi	r16, 0xFF	; 255
     4c0:	1f 4f       	sbci	r17, 0xFF	; 255
     4c2:	08 3f       	cpi	r16, 0xF8	; 248
     4c4:	f1 e0       	ldi	r31, 0x01	; 1
     4c6:	1f 07       	cpc	r17, r31
     4c8:	c0 f3       	brcs	.-16     	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
     4ca:	88 e0       	ldi	r24, 0x08	; 8
     4cc:	7d de       	rcall	.-774    	; 0x1c8 <write_cmd>
     4ce:	8c e0       	ldi	r24, 0x0C	; 12
     4d0:	7b de       	rcall	.-778    	; 0x1c8 <write_cmd>
     4d2:	00 00       	nop
     4d4:	6c 96       	adiw	r28, 0x1c	; 28
     4d6:	0f b6       	in	r0, 0x3f	; 63
     4d8:	f8 94       	cli
     4da:	de bf       	out	0x3e, r29	; 62
     4dc:	0f be       	out	0x3f, r0	; 63
     4de:	cd bf       	out	0x3d, r28	; 61
     4e0:	df 91       	pop	r29
     4e2:	cf 91       	pop	r28
     4e4:	1f 91       	pop	r17
     4e6:	0f 91       	pop	r16
     4e8:	08 95       	ret

000004ea <nokia_lcd_clear>:
     4ea:	0f 93       	push	r16
     4ec:	1f 93       	push	r17
     4ee:	cf 93       	push	r28
     4f0:	df 93       	push	r29
     4f2:	cd b7       	in	r28, 0x3d	; 61
     4f4:	de b7       	in	r29, 0x3e	; 62
     4f6:	80 e8       	ldi	r24, 0x80	; 128
     4f8:	67 de       	rcall	.-818    	; 0x1c8 <write_cmd>
     4fa:	80 e4       	ldi	r24, 0x40	; 64
     4fc:	65 de       	rcall	.-822    	; 0x1c8 <write_cmd>
     4fe:	10 92 02 03 	sts	0x0302, r1	; 0x800302 <__data_end+0x1f8>
     502:	10 92 03 03 	sts	0x0303, r1	; 0x800303 <__data_end+0x1f9>
     506:	00 e0       	ldi	r16, 0x00	; 0
     508:	10 e0       	ldi	r17, 0x00	; 0
     50a:	07 c0       	rjmp	.+14     	; 0x51a <nokia_lcd_clear+0x30>
     50c:	c8 01       	movw	r24, r16
     50e:	86 5f       	subi	r24, 0xF6	; 246
     510:	9e 4f       	sbci	r25, 0xFE	; 254
     512:	fc 01       	movw	r30, r24
     514:	10 82       	st	Z, r1
     516:	0f 5f       	subi	r16, 0xFF	; 255
     518:	1f 4f       	sbci	r17, 0xFF	; 255
     51a:	08 3f       	cpi	r16, 0xF8	; 248
     51c:	f1 e0       	ldi	r31, 0x01	; 1
     51e:	1f 07       	cpc	r17, r31
     520:	a8 f3       	brcs	.-22     	; 0x50c <nokia_lcd_clear+0x22>
     522:	00 00       	nop
     524:	df 91       	pop	r29
     526:	cf 91       	pop	r28
     528:	1f 91       	pop	r17
     52a:	0f 91       	pop	r16
     52c:	08 95       	ret

0000052e <nokia_lcd_set_pixel>:
     52e:	cf 93       	push	r28
     530:	df 93       	push	r29
     532:	00 d0       	rcall	.+0      	; 0x534 <nokia_lcd_set_pixel+0x6>
     534:	00 d0       	rcall	.+0      	; 0x536 <nokia_lcd_set_pixel+0x8>
     536:	1f 92       	push	r1
     538:	cd b7       	in	r28, 0x3d	; 61
     53a:	de b7       	in	r29, 0x3e	; 62
     53c:	8b 83       	std	Y+3, r24	; 0x03
     53e:	6c 83       	std	Y+4, r22	; 0x04
     540:	4d 83       	std	Y+5, r20	; 0x05
     542:	8c 81       	ldd	r24, Y+4	; 0x04
     544:	86 95       	lsr	r24
     546:	86 95       	lsr	r24
     548:	86 95       	lsr	r24
     54a:	88 2f       	mov	r24, r24
     54c:	90 e0       	ldi	r25, 0x00	; 0
     54e:	44 e5       	ldi	r20, 0x54	; 84
     550:	48 9f       	mul	r20, r24
     552:	90 01       	movw	r18, r0
     554:	49 9f       	mul	r20, r25
     556:	30 0d       	add	r19, r0
     558:	11 24       	eor	r1, r1
     55a:	8b 81       	ldd	r24, Y+3	; 0x03
     55c:	88 2f       	mov	r24, r24
     55e:	90 e0       	ldi	r25, 0x00	; 0
     560:	82 0f       	add	r24, r18
     562:	93 1f       	adc	r25, r19
     564:	86 5f       	subi	r24, 0xF6	; 246
     566:	9e 4f       	sbci	r25, 0xFE	; 254
     568:	9a 83       	std	Y+2, r25	; 0x02
     56a:	89 83       	std	Y+1, r24	; 0x01
     56c:	8d 81       	ldd	r24, Y+5	; 0x05
     56e:	88 23       	and	r24, r24
     570:	c9 f0       	breq	.+50     	; 0x5a4 <nokia_lcd_set_pixel+0x76>
     572:	89 81       	ldd	r24, Y+1	; 0x01
     574:	9a 81       	ldd	r25, Y+2	; 0x02
     576:	fc 01       	movw	r30, r24
     578:	80 81       	ld	r24, Z
     57a:	48 2f       	mov	r20, r24
     57c:	8c 81       	ldd	r24, Y+4	; 0x04
     57e:	88 2f       	mov	r24, r24
     580:	90 e0       	ldi	r25, 0x00	; 0
     582:	9c 01       	movw	r18, r24
     584:	27 70       	andi	r18, 0x07	; 7
     586:	33 27       	eor	r19, r19
     588:	81 e0       	ldi	r24, 0x01	; 1
     58a:	90 e0       	ldi	r25, 0x00	; 0
     58c:	02 c0       	rjmp	.+4      	; 0x592 <nokia_lcd_set_pixel+0x64>
     58e:	88 0f       	add	r24, r24
     590:	99 1f       	adc	r25, r25
     592:	2a 95       	dec	r18
     594:	e2 f7       	brpl	.-8      	; 0x58e <nokia_lcd_set_pixel+0x60>
     596:	84 2b       	or	r24, r20
     598:	28 2f       	mov	r18, r24
     59a:	89 81       	ldd	r24, Y+1	; 0x01
     59c:	9a 81       	ldd	r25, Y+2	; 0x02
     59e:	fc 01       	movw	r30, r24
     5a0:	20 83       	st	Z, r18
     5a2:	19 c0       	rjmp	.+50     	; 0x5d6 <nokia_lcd_set_pixel+0xa8>
     5a4:	89 81       	ldd	r24, Y+1	; 0x01
     5a6:	9a 81       	ldd	r25, Y+2	; 0x02
     5a8:	fc 01       	movw	r30, r24
     5aa:	80 81       	ld	r24, Z
     5ac:	48 2f       	mov	r20, r24
     5ae:	8c 81       	ldd	r24, Y+4	; 0x04
     5b0:	88 2f       	mov	r24, r24
     5b2:	90 e0       	ldi	r25, 0x00	; 0
     5b4:	9c 01       	movw	r18, r24
     5b6:	27 70       	andi	r18, 0x07	; 7
     5b8:	33 27       	eor	r19, r19
     5ba:	81 e0       	ldi	r24, 0x01	; 1
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	02 c0       	rjmp	.+4      	; 0x5c4 <nokia_lcd_set_pixel+0x96>
     5c0:	88 0f       	add	r24, r24
     5c2:	99 1f       	adc	r25, r25
     5c4:	2a 95       	dec	r18
     5c6:	e2 f7       	brpl	.-8      	; 0x5c0 <nokia_lcd_set_pixel+0x92>
     5c8:	80 95       	com	r24
     5ca:	84 23       	and	r24, r20
     5cc:	28 2f       	mov	r18, r24
     5ce:	89 81       	ldd	r24, Y+1	; 0x01
     5d0:	9a 81       	ldd	r25, Y+2	; 0x02
     5d2:	fc 01       	movw	r30, r24
     5d4:	20 83       	st	Z, r18
     5d6:	00 00       	nop
     5d8:	0f 90       	pop	r0
     5da:	0f 90       	pop	r0
     5dc:	0f 90       	pop	r0
     5de:	0f 90       	pop	r0
     5e0:	0f 90       	pop	r0
     5e2:	df 91       	pop	r29
     5e4:	cf 91       	pop	r28
     5e6:	08 95       	ret

000005e8 <nokia_lcd_render>:
     5e8:	0f 93       	push	r16
     5ea:	1f 93       	push	r17
     5ec:	cf 93       	push	r28
     5ee:	df 93       	push	r29
     5f0:	cd b7       	in	r28, 0x3d	; 61
     5f2:	de b7       	in	r29, 0x3e	; 62
     5f4:	80 e8       	ldi	r24, 0x80	; 128
     5f6:	e8 dd       	rcall	.-1072   	; 0x1c8 <write_cmd>
     5f8:	80 e4       	ldi	r24, 0x40	; 64
     5fa:	e6 dd       	rcall	.-1076   	; 0x1c8 <write_cmd>
     5fc:	00 e0       	ldi	r16, 0x00	; 0
     5fe:	10 e0       	ldi	r17, 0x00	; 0
     600:	08 c0       	rjmp	.+16     	; 0x612 <nokia_lcd_render+0x2a>
     602:	c8 01       	movw	r24, r16
     604:	86 5f       	subi	r24, 0xF6	; 246
     606:	9e 4f       	sbci	r25, 0xFE	; 254
     608:	fc 01       	movw	r30, r24
     60a:	80 81       	ld	r24, Z
     60c:	eb dd       	rcall	.-1066   	; 0x1e4 <write_data>
     60e:	0f 5f       	subi	r16, 0xFF	; 255
     610:	1f 4f       	sbci	r17, 0xFF	; 255
     612:	08 3f       	cpi	r16, 0xF8	; 248
     614:	f1 e0       	ldi	r31, 0x01	; 1
     616:	1f 07       	cpc	r17, r31
     618:	a0 f3       	brcs	.-24     	; 0x602 <nokia_lcd_render+0x1a>
     61a:	00 00       	nop
     61c:	df 91       	pop	r29
     61e:	cf 91       	pop	r28
     620:	1f 91       	pop	r17
     622:	0f 91       	pop	r16
     624:	08 95       	ret

00000626 <TimerSet>:
     626:	cf 93       	push	r28
     628:	df 93       	push	r29
     62a:	00 d0       	rcall	.+0      	; 0x62c <TimerSet+0x6>
     62c:	00 d0       	rcall	.+0      	; 0x62e <TimerSet+0x8>
     62e:	cd b7       	in	r28, 0x3d	; 61
     630:	de b7       	in	r29, 0x3e	; 62
     632:	69 83       	std	Y+1, r22	; 0x01
     634:	7a 83       	std	Y+2, r23	; 0x02
     636:	8b 83       	std	Y+3, r24	; 0x03
     638:	9c 83       	std	Y+4, r25	; 0x04
     63a:	89 81       	ldd	r24, Y+1	; 0x01
     63c:	9a 81       	ldd	r25, Y+2	; 0x02
     63e:	ab 81       	ldd	r26, Y+3	; 0x03
     640:	bc 81       	ldd	r27, Y+4	; 0x04
     642:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <_avr_timer_M>
     646:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <_avr_timer_M+0x1>
     64a:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <_avr_timer_M+0x2>
     64e:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <_avr_timer_M+0x3>
     652:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <_avr_timer_M>
     656:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <_avr_timer_M+0x1>
     65a:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <_avr_timer_M+0x2>
     65e:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <_avr_timer_M+0x3>
     662:	80 93 05 03 	sts	0x0305, r24	; 0x800305 <_avr_timer_cntcurr>
     666:	90 93 06 03 	sts	0x0306, r25	; 0x800306 <_avr_timer_cntcurr+0x1>
     66a:	a0 93 07 03 	sts	0x0307, r26	; 0x800307 <_avr_timer_cntcurr+0x2>
     66e:	b0 93 08 03 	sts	0x0308, r27	; 0x800308 <_avr_timer_cntcurr+0x3>
     672:	00 00       	nop
     674:	0f 90       	pop	r0
     676:	0f 90       	pop	r0
     678:	0f 90       	pop	r0
     67a:	0f 90       	pop	r0
     67c:	df 91       	pop	r29
     67e:	cf 91       	pop	r28
     680:	08 95       	ret

00000682 <TimerOn>:
     682:	cf 93       	push	r28
     684:	df 93       	push	r29
     686:	cd b7       	in	r28, 0x3d	; 61
     688:	de b7       	in	r29, 0x3e	; 62
     68a:	81 e8       	ldi	r24, 0x81	; 129
     68c:	90 e0       	ldi	r25, 0x00	; 0
     68e:	2b e0       	ldi	r18, 0x0B	; 11
     690:	fc 01       	movw	r30, r24
     692:	20 83       	st	Z, r18
     694:	88 e8       	ldi	r24, 0x88	; 136
     696:	90 e0       	ldi	r25, 0x00	; 0
     698:	2d e7       	ldi	r18, 0x7D	; 125
     69a:	30 e0       	ldi	r19, 0x00	; 0
     69c:	fc 01       	movw	r30, r24
     69e:	31 83       	std	Z+1, r19	; 0x01
     6a0:	20 83       	st	Z, r18
     6a2:	8f e6       	ldi	r24, 0x6F	; 111
     6a4:	90 e0       	ldi	r25, 0x00	; 0
     6a6:	22 e0       	ldi	r18, 0x02	; 2
     6a8:	fc 01       	movw	r30, r24
     6aa:	20 83       	st	Z, r18
     6ac:	84 e8       	ldi	r24, 0x84	; 132
     6ae:	90 e0       	ldi	r25, 0x00	; 0
     6b0:	fc 01       	movw	r30, r24
     6b2:	11 82       	std	Z+1, r1	; 0x01
     6b4:	10 82       	st	Z, r1
     6b6:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <_avr_timer_M>
     6ba:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <_avr_timer_M+0x1>
     6be:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <_avr_timer_M+0x2>
     6c2:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <_avr_timer_M+0x3>
     6c6:	80 93 05 03 	sts	0x0305, r24	; 0x800305 <_avr_timer_cntcurr>
     6ca:	90 93 06 03 	sts	0x0306, r25	; 0x800306 <_avr_timer_cntcurr+0x1>
     6ce:	a0 93 07 03 	sts	0x0307, r26	; 0x800307 <_avr_timer_cntcurr+0x2>
     6d2:	b0 93 08 03 	sts	0x0308, r27	; 0x800308 <_avr_timer_cntcurr+0x3>
     6d6:	8f e5       	ldi	r24, 0x5F	; 95
     6d8:	90 e0       	ldi	r25, 0x00	; 0
     6da:	2f e5       	ldi	r18, 0x5F	; 95
     6dc:	30 e0       	ldi	r19, 0x00	; 0
     6de:	f9 01       	movw	r30, r18
     6e0:	20 81       	ld	r18, Z
     6e2:	20 68       	ori	r18, 0x80	; 128
     6e4:	fc 01       	movw	r30, r24
     6e6:	20 83       	st	Z, r18
     6e8:	00 00       	nop
     6ea:	df 91       	pop	r29
     6ec:	cf 91       	pop	r28
     6ee:	08 95       	ret

000006f0 <TimerISR>:
     6f0:	cf 93       	push	r28
     6f2:	df 93       	push	r29
     6f4:	cd b7       	in	r28, 0x3d	; 61
     6f6:	de b7       	in	r29, 0x3e	; 62
     6f8:	81 e0       	ldi	r24, 0x01	; 1
     6fa:	80 93 04 03 	sts	0x0304, r24	; 0x800304 <TimerFlag>
     6fe:	00 00       	nop
     700:	df 91       	pop	r29
     702:	cf 91       	pop	r28
     704:	08 95       	ret

00000706 <__vector_13>:
     706:	1f 92       	push	r1
     708:	0f 92       	push	r0
     70a:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     70e:	0f 92       	push	r0
     710:	11 24       	eor	r1, r1
     712:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
     716:	0f 92       	push	r0
     718:	2f 93       	push	r18
     71a:	3f 93       	push	r19
     71c:	4f 93       	push	r20
     71e:	5f 93       	push	r21
     720:	6f 93       	push	r22
     722:	7f 93       	push	r23
     724:	8f 93       	push	r24
     726:	9f 93       	push	r25
     728:	af 93       	push	r26
     72a:	bf 93       	push	r27
     72c:	ef 93       	push	r30
     72e:	ff 93       	push	r31
     730:	cf 93       	push	r28
     732:	df 93       	push	r29
     734:	cd b7       	in	r28, 0x3d	; 61
     736:	de b7       	in	r29, 0x3e	; 62
     738:	80 91 05 03 	lds	r24, 0x0305	; 0x800305 <_avr_timer_cntcurr>
     73c:	90 91 06 03 	lds	r25, 0x0306	; 0x800306 <_avr_timer_cntcurr+0x1>
     740:	a0 91 07 03 	lds	r26, 0x0307	; 0x800307 <_avr_timer_cntcurr+0x2>
     744:	b0 91 08 03 	lds	r27, 0x0308	; 0x800308 <_avr_timer_cntcurr+0x3>
     748:	01 97       	sbiw	r24, 0x01	; 1
     74a:	a1 09       	sbc	r26, r1
     74c:	b1 09       	sbc	r27, r1
     74e:	80 93 05 03 	sts	0x0305, r24	; 0x800305 <_avr_timer_cntcurr>
     752:	90 93 06 03 	sts	0x0306, r25	; 0x800306 <_avr_timer_cntcurr+0x1>
     756:	a0 93 07 03 	sts	0x0307, r26	; 0x800307 <_avr_timer_cntcurr+0x2>
     75a:	b0 93 08 03 	sts	0x0308, r27	; 0x800308 <_avr_timer_cntcurr+0x3>
     75e:	80 91 05 03 	lds	r24, 0x0305	; 0x800305 <_avr_timer_cntcurr>
     762:	90 91 06 03 	lds	r25, 0x0306	; 0x800306 <_avr_timer_cntcurr+0x1>
     766:	a0 91 07 03 	lds	r26, 0x0307	; 0x800307 <_avr_timer_cntcurr+0x2>
     76a:	b0 91 08 03 	lds	r27, 0x0308	; 0x800308 <_avr_timer_cntcurr+0x3>
     76e:	89 2b       	or	r24, r25
     770:	8a 2b       	or	r24, r26
     772:	8b 2b       	or	r24, r27
     774:	89 f4       	brne	.+34     	; 0x798 <__vector_13+0x92>
     776:	bc df       	rcall	.-136    	; 0x6f0 <TimerISR>
     778:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <_avr_timer_M>
     77c:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <_avr_timer_M+0x1>
     780:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <_avr_timer_M+0x2>
     784:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <_avr_timer_M+0x3>
     788:	80 93 05 03 	sts	0x0305, r24	; 0x800305 <_avr_timer_cntcurr>
     78c:	90 93 06 03 	sts	0x0306, r25	; 0x800306 <_avr_timer_cntcurr+0x1>
     790:	a0 93 07 03 	sts	0x0307, r26	; 0x800307 <_avr_timer_cntcurr+0x2>
     794:	b0 93 08 03 	sts	0x0308, r27	; 0x800308 <_avr_timer_cntcurr+0x3>
     798:	00 00       	nop
     79a:	df 91       	pop	r29
     79c:	cf 91       	pop	r28
     79e:	ff 91       	pop	r31
     7a0:	ef 91       	pop	r30
     7a2:	bf 91       	pop	r27
     7a4:	af 91       	pop	r26
     7a6:	9f 91       	pop	r25
     7a8:	8f 91       	pop	r24
     7aa:	7f 91       	pop	r23
     7ac:	6f 91       	pop	r22
     7ae:	5f 91       	pop	r21
     7b0:	4f 91       	pop	r20
     7b2:	3f 91       	pop	r19
     7b4:	2f 91       	pop	r18
     7b6:	0f 90       	pop	r0
     7b8:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
     7bc:	0f 90       	pop	r0
     7be:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     7c2:	0f 90       	pop	r0
     7c4:	1f 90       	pop	r1
     7c6:	18 95       	reti

000007c8 <store>:
     7c8:	cf 93       	push	r28
     7ca:	df 93       	push	r29
     7cc:	00 d0       	rcall	.+0      	; 0x7ce <store+0x6>
     7ce:	cd b7       	in	r28, 0x3d	; 61
     7d0:	de b7       	in	r29, 0x3e	; 62
     7d2:	89 83       	std	Y+1, r24	; 0x01
     7d4:	6a 83       	std	Y+2, r22	; 0x02
     7d6:	00 00       	nop
     7d8:	8f e3       	ldi	r24, 0x3F	; 63
     7da:	90 e0       	ldi	r25, 0x00	; 0
     7dc:	fc 01       	movw	r30, r24
     7de:	80 81       	ld	r24, Z
     7e0:	88 2f       	mov	r24, r24
     7e2:	90 e0       	ldi	r25, 0x00	; 0
     7e4:	84 70       	andi	r24, 0x04	; 4
     7e6:	99 27       	eor	r25, r25
     7e8:	89 2b       	or	r24, r25
     7ea:	b1 f7       	brne	.-20     	; 0x7d8 <store+0x10>
     7ec:	81 e4       	ldi	r24, 0x41	; 65
     7ee:	90 e0       	ldi	r25, 0x00	; 0
     7f0:	29 81       	ldd	r18, Y+1	; 0x01
     7f2:	22 2f       	mov	r18, r18
     7f4:	30 e0       	ldi	r19, 0x00	; 0
     7f6:	fc 01       	movw	r30, r24
     7f8:	31 83       	std	Z+1, r19	; 0x01
     7fa:	20 83       	st	Z, r18
     7fc:	80 e4       	ldi	r24, 0x40	; 64
     7fe:	90 e0       	ldi	r25, 0x00	; 0
     800:	2a 81       	ldd	r18, Y+2	; 0x02
     802:	fc 01       	movw	r30, r24
     804:	20 83       	st	Z, r18
     806:	8f e3       	ldi	r24, 0x3F	; 63
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	2f e3       	ldi	r18, 0x3F	; 63
     80c:	30 e0       	ldi	r19, 0x00	; 0
     80e:	f9 01       	movw	r30, r18
     810:	20 81       	ld	r18, Z
     812:	2f 70       	andi	r18, 0x0F	; 15
     814:	fc 01       	movw	r30, r24
     816:	20 83       	st	Z, r18
     818:	8f e3       	ldi	r24, 0x3F	; 63
     81a:	90 e0       	ldi	r25, 0x00	; 0
     81c:	2f e3       	ldi	r18, 0x3F	; 63
     81e:	30 e0       	ldi	r19, 0x00	; 0
     820:	f9 01       	movw	r30, r18
     822:	20 81       	ld	r18, Z
     824:	24 60       	ori	r18, 0x04	; 4
     826:	fc 01       	movw	r30, r24
     828:	20 83       	st	Z, r18
     82a:	8f e3       	ldi	r24, 0x3F	; 63
     82c:	90 e0       	ldi	r25, 0x00	; 0
     82e:	2f e3       	ldi	r18, 0x3F	; 63
     830:	30 e0       	ldi	r19, 0x00	; 0
     832:	f9 01       	movw	r30, r18
     834:	20 81       	ld	r18, Z
     836:	22 60       	ori	r18, 0x02	; 2
     838:	fc 01       	movw	r30, r24
     83a:	20 83       	st	Z, r18
     83c:	00 00       	nop
     83e:	0f 90       	pop	r0
     840:	0f 90       	pop	r0
     842:	df 91       	pop	r29
     844:	cf 91       	pop	r28
     846:	08 95       	ret

00000848 <load>:
     848:	cf 93       	push	r28
     84a:	df 93       	push	r29
     84c:	00 d0       	rcall	.+0      	; 0x84e <load+0x6>
     84e:	cd b7       	in	r28, 0x3d	; 61
     850:	de b7       	in	r29, 0x3e	; 62
     852:	9a 83       	std	Y+2, r25	; 0x02
     854:	89 83       	std	Y+1, r24	; 0x01
     856:	00 00       	nop
     858:	8f e3       	ldi	r24, 0x3F	; 63
     85a:	90 e0       	ldi	r25, 0x00	; 0
     85c:	fc 01       	movw	r30, r24
     85e:	80 81       	ld	r24, Z
     860:	88 2f       	mov	r24, r24
     862:	90 e0       	ldi	r25, 0x00	; 0
     864:	84 70       	andi	r24, 0x04	; 4
     866:	99 27       	eor	r25, r25
     868:	89 2b       	or	r24, r25
     86a:	b1 f7       	brne	.-20     	; 0x858 <load+0x10>
     86c:	81 e4       	ldi	r24, 0x41	; 65
     86e:	90 e0       	ldi	r25, 0x00	; 0
     870:	29 81       	ldd	r18, Y+1	; 0x01
     872:	3a 81       	ldd	r19, Y+2	; 0x02
     874:	fc 01       	movw	r30, r24
     876:	31 83       	std	Z+1, r19	; 0x01
     878:	20 83       	st	Z, r18
     87a:	8f e3       	ldi	r24, 0x3F	; 63
     87c:	90 e0       	ldi	r25, 0x00	; 0
     87e:	2f e3       	ldi	r18, 0x3F	; 63
     880:	30 e0       	ldi	r19, 0x00	; 0
     882:	f9 01       	movw	r30, r18
     884:	20 81       	ld	r18, Z
     886:	21 60       	ori	r18, 0x01	; 1
     888:	fc 01       	movw	r30, r24
     88a:	20 83       	st	Z, r18
     88c:	80 e4       	ldi	r24, 0x40	; 64
     88e:	90 e0       	ldi	r25, 0x00	; 0
     890:	fc 01       	movw	r30, r24
     892:	80 81       	ld	r24, Z
     894:	0f 90       	pop	r0
     896:	0f 90       	pop	r0
     898:	df 91       	pop	r29
     89a:	cf 91       	pop	r28
     89c:	08 95       	ret

0000089e <add>:
     89e:	cf 93       	push	r28
     8a0:	df 93       	push	r29
     8a2:	cd b7       	in	r28, 0x3d	; 61
     8a4:	de b7       	in	r29, 0x3e	; 62
     8a6:	28 97       	sbiw	r28, 0x08	; 8
     8a8:	0f b6       	in	r0, 0x3f	; 63
     8aa:	f8 94       	cli
     8ac:	de bf       	out	0x3e, r29	; 62
     8ae:	0f be       	out	0x3f, r0	; 63
     8b0:	cd bf       	out	0x3d, r28	; 61
     8b2:	9e 83       	std	Y+6, r25	; 0x06
     8b4:	8d 83       	std	Y+5, r24	; 0x05
     8b6:	78 87       	std	Y+8, r23	; 0x08
     8b8:	6f 83       	std	Y+7, r22	; 0x07
     8ba:	8d 81       	ldd	r24, Y+5	; 0x05
     8bc:	9e 81       	ldd	r25, Y+6	; 0x06
     8be:	fc 01       	movw	r30, r24
     8c0:	20 81       	ld	r18, Z
     8c2:	31 81       	ldd	r19, Z+1	; 0x01
     8c4:	8f 81       	ldd	r24, Y+7	; 0x07
     8c6:	98 85       	ldd	r25, Y+8	; 0x08
     8c8:	fc 01       	movw	r30, r24
     8ca:	80 81       	ld	r24, Z
     8cc:	91 81       	ldd	r25, Z+1	; 0x01
     8ce:	82 0f       	add	r24, r18
     8d0:	93 1f       	adc	r25, r19
     8d2:	9a 83       	std	Y+2, r25	; 0x02
     8d4:	89 83       	std	Y+1, r24	; 0x01
     8d6:	8d 81       	ldd	r24, Y+5	; 0x05
     8d8:	9e 81       	ldd	r25, Y+6	; 0x06
     8da:	fc 01       	movw	r30, r24
     8dc:	22 81       	ldd	r18, Z+2	; 0x02
     8de:	33 81       	ldd	r19, Z+3	; 0x03
     8e0:	8f 81       	ldd	r24, Y+7	; 0x07
     8e2:	98 85       	ldd	r25, Y+8	; 0x08
     8e4:	fc 01       	movw	r30, r24
     8e6:	82 81       	ldd	r24, Z+2	; 0x02
     8e8:	93 81       	ldd	r25, Z+3	; 0x03
     8ea:	82 0f       	add	r24, r18
     8ec:	93 1f       	adc	r25, r19
     8ee:	9c 83       	std	Y+4, r25	; 0x04
     8f0:	8b 83       	std	Y+3, r24	; 0x03
     8f2:	89 81       	ldd	r24, Y+1	; 0x01
     8f4:	9a 81       	ldd	r25, Y+2	; 0x02
     8f6:	ab 81       	ldd	r26, Y+3	; 0x03
     8f8:	bc 81       	ldd	r27, Y+4	; 0x04
     8fa:	bc 01       	movw	r22, r24
     8fc:	cd 01       	movw	r24, r26
     8fe:	28 96       	adiw	r28, 0x08	; 8
     900:	0f b6       	in	r0, 0x3f	; 63
     902:	f8 94       	cli
     904:	de bf       	out	0x3e, r29	; 62
     906:	0f be       	out	0x3f, r0	; 63
     908:	cd bf       	out	0x3d, r28	; 61
     90a:	df 91       	pop	r29
     90c:	cf 91       	pop	r28
     90e:	08 95       	ret

00000910 <pivotCCW>:
     910:	cf 93       	push	r28
     912:	df 93       	push	r29
     914:	00 d0       	rcall	.+0      	; 0x916 <pivotCCW+0x6>
     916:	00 d0       	rcall	.+0      	; 0x918 <pivotCCW+0x8>
     918:	cd b7       	in	r28, 0x3d	; 61
     91a:	de b7       	in	r29, 0x3e	; 62
     91c:	9c 83       	std	Y+4, r25	; 0x04
     91e:	8b 83       	std	Y+3, r24	; 0x03
     920:	8b 81       	ldd	r24, Y+3	; 0x03
     922:	9c 81       	ldd	r25, Y+4	; 0x04
     924:	fc 01       	movw	r30, r24
     926:	80 81       	ld	r24, Z
     928:	91 81       	ldd	r25, Z+1	; 0x01
     92a:	9a 83       	std	Y+2, r25	; 0x02
     92c:	89 83       	std	Y+1, r24	; 0x01
     92e:	8b 81       	ldd	r24, Y+3	; 0x03
     930:	9c 81       	ldd	r25, Y+4	; 0x04
     932:	fc 01       	movw	r30, r24
     934:	82 81       	ldd	r24, Z+2	; 0x02
     936:	93 81       	ldd	r25, Z+3	; 0x03
     938:	22 27       	eor	r18, r18
     93a:	33 27       	eor	r19, r19
     93c:	28 1b       	sub	r18, r24
     93e:	39 0b       	sbc	r19, r25
     940:	8b 81       	ldd	r24, Y+3	; 0x03
     942:	9c 81       	ldd	r25, Y+4	; 0x04
     944:	fc 01       	movw	r30, r24
     946:	31 83       	std	Z+1, r19	; 0x01
     948:	20 83       	st	Z, r18
     94a:	8b 81       	ldd	r24, Y+3	; 0x03
     94c:	9c 81       	ldd	r25, Y+4	; 0x04
     94e:	29 81       	ldd	r18, Y+1	; 0x01
     950:	3a 81       	ldd	r19, Y+2	; 0x02
     952:	fc 01       	movw	r30, r24
     954:	33 83       	std	Z+3, r19	; 0x03
     956:	22 83       	std	Z+2, r18	; 0x02
     958:	00 00       	nop
     95a:	0f 90       	pop	r0
     95c:	0f 90       	pop	r0
     95e:	0f 90       	pop	r0
     960:	0f 90       	pop	r0
     962:	df 91       	pop	r29
     964:	cf 91       	pop	r28
     966:	08 95       	ret

00000968 <pivotCW>:
     968:	cf 93       	push	r28
     96a:	df 93       	push	r29
     96c:	00 d0       	rcall	.+0      	; 0x96e <pivotCW+0x6>
     96e:	00 d0       	rcall	.+0      	; 0x970 <pivotCW+0x8>
     970:	cd b7       	in	r28, 0x3d	; 61
     972:	de b7       	in	r29, 0x3e	; 62
     974:	9c 83       	std	Y+4, r25	; 0x04
     976:	8b 83       	std	Y+3, r24	; 0x03
     978:	8b 81       	ldd	r24, Y+3	; 0x03
     97a:	9c 81       	ldd	r25, Y+4	; 0x04
     97c:	fc 01       	movw	r30, r24
     97e:	82 81       	ldd	r24, Z+2	; 0x02
     980:	93 81       	ldd	r25, Z+3	; 0x03
     982:	9a 83       	std	Y+2, r25	; 0x02
     984:	89 83       	std	Y+1, r24	; 0x01
     986:	8b 81       	ldd	r24, Y+3	; 0x03
     988:	9c 81       	ldd	r25, Y+4	; 0x04
     98a:	fc 01       	movw	r30, r24
     98c:	80 81       	ld	r24, Z
     98e:	91 81       	ldd	r25, Z+1	; 0x01
     990:	22 27       	eor	r18, r18
     992:	33 27       	eor	r19, r19
     994:	28 1b       	sub	r18, r24
     996:	39 0b       	sbc	r19, r25
     998:	8b 81       	ldd	r24, Y+3	; 0x03
     99a:	9c 81       	ldd	r25, Y+4	; 0x04
     99c:	fc 01       	movw	r30, r24
     99e:	33 83       	std	Z+3, r19	; 0x03
     9a0:	22 83       	std	Z+2, r18	; 0x02
     9a2:	8b 81       	ldd	r24, Y+3	; 0x03
     9a4:	9c 81       	ldd	r25, Y+4	; 0x04
     9a6:	29 81       	ldd	r18, Y+1	; 0x01
     9a8:	3a 81       	ldd	r19, Y+2	; 0x02
     9aa:	fc 01       	movw	r30, r24
     9ac:	31 83       	std	Z+1, r19	; 0x01
     9ae:	20 83       	st	Z, r18
     9b0:	00 00       	nop
     9b2:	0f 90       	pop	r0
     9b4:	0f 90       	pop	r0
     9b6:	0f 90       	pop	r0
     9b8:	0f 90       	pop	r0
     9ba:	df 91       	pop	r29
     9bc:	cf 91       	pop	r28
     9be:	08 95       	ret

000009c0 <L>:
     9c0:	cf 93       	push	r28
     9c2:	df 93       	push	r29
     9c4:	00 d0       	rcall	.+0      	; 0x9c6 <L+0x6>
     9c6:	00 d0       	rcall	.+0      	; 0x9c8 <L+0x8>
     9c8:	00 d0       	rcall	.+0      	; 0x9ca <L+0xa>
     9ca:	cd b7       	in	r28, 0x3d	; 61
     9cc:	de b7       	in	r29, 0x3e	; 62
     9ce:	9a 83       	std	Y+2, r25	; 0x02
     9d0:	89 83       	std	Y+1, r24	; 0x01
     9d2:	4b 83       	std	Y+3, r20	; 0x03
     9d4:	5c 83       	std	Y+4, r21	; 0x04
     9d6:	6d 83       	std	Y+5, r22	; 0x05
     9d8:	7e 83       	std	Y+6, r23	; 0x06
     9da:	29 81       	ldd	r18, Y+1	; 0x01
     9dc:	3a 81       	ldd	r19, Y+2	; 0x02
     9de:	8b 81       	ldd	r24, Y+3	; 0x03
     9e0:	9c 81       	ldd	r25, Y+4	; 0x04
     9e2:	ad 81       	ldd	r26, Y+5	; 0x05
     9e4:	be 81       	ldd	r27, Y+6	; 0x06
     9e6:	f9 01       	movw	r30, r18
     9e8:	80 83       	st	Z, r24
     9ea:	91 83       	std	Z+1, r25	; 0x01
     9ec:	a2 83       	std	Z+2, r26	; 0x02
     9ee:	b3 83       	std	Z+3, r27	; 0x03
     9f0:	89 81       	ldd	r24, Y+1	; 0x01
     9f2:	9a 81       	ldd	r25, Y+2	; 0x02
     9f4:	fc 01       	movw	r30, r24
     9f6:	15 82       	std	Z+5, r1	; 0x05
     9f8:	14 82       	std	Z+4, r1	; 0x04
     9fa:	89 81       	ldd	r24, Y+1	; 0x01
     9fc:	9a 81       	ldd	r25, Y+2	; 0x02
     9fe:	21 e0       	ldi	r18, 0x01	; 1
     a00:	30 e0       	ldi	r19, 0x00	; 0
     a02:	fc 01       	movw	r30, r24
     a04:	37 83       	std	Z+7, r19	; 0x07
     a06:	26 83       	std	Z+6, r18	; 0x06
     a08:	89 81       	ldd	r24, Y+1	; 0x01
     a0a:	9a 81       	ldd	r25, Y+2	; 0x02
     a0c:	fc 01       	movw	r30, r24
     a0e:	11 86       	std	Z+9, r1	; 0x09
     a10:	10 86       	std	Z+8, r1	; 0x08
     a12:	89 81       	ldd	r24, Y+1	; 0x01
     a14:	9a 81       	ldd	r25, Y+2	; 0x02
     a16:	fc 01       	movw	r30, r24
     a18:	13 86       	std	Z+11, r1	; 0x0b
     a1a:	12 86       	std	Z+10, r1	; 0x0a
     a1c:	89 81       	ldd	r24, Y+1	; 0x01
     a1e:	9a 81       	ldd	r25, Y+2	; 0x02
     a20:	fc 01       	movw	r30, r24
     a22:	15 86       	std	Z+13, r1	; 0x0d
     a24:	14 86       	std	Z+12, r1	; 0x0c
     a26:	89 81       	ldd	r24, Y+1	; 0x01
     a28:	9a 81       	ldd	r25, Y+2	; 0x02
     a2a:	2f ef       	ldi	r18, 0xFF	; 255
     a2c:	3f ef       	ldi	r19, 0xFF	; 255
     a2e:	fc 01       	movw	r30, r24
     a30:	37 87       	std	Z+15, r19	; 0x0f
     a32:	26 87       	std	Z+14, r18	; 0x0e
     a34:	89 81       	ldd	r24, Y+1	; 0x01
     a36:	9a 81       	ldd	r25, Y+2	; 0x02
     a38:	21 e0       	ldi	r18, 0x01	; 1
     a3a:	30 e0       	ldi	r19, 0x00	; 0
     a3c:	fc 01       	movw	r30, r24
     a3e:	31 8b       	std	Z+17, r19	; 0x11
     a40:	20 8b       	std	Z+16, r18	; 0x10
     a42:	89 81       	ldd	r24, Y+1	; 0x01
     a44:	9a 81       	ldd	r25, Y+2	; 0x02
     a46:	2f ef       	ldi	r18, 0xFF	; 255
     a48:	3f ef       	ldi	r19, 0xFF	; 255
     a4a:	fc 01       	movw	r30, r24
     a4c:	33 8b       	std	Z+19, r19	; 0x13
     a4e:	22 8b       	std	Z+18, r18	; 0x12
     a50:	89 81       	ldd	r24, Y+1	; 0x01
     a52:	9a 81       	ldd	r25, Y+2	; 0x02
     a54:	26 96       	adiw	r28, 0x06	; 6
     a56:	0f b6       	in	r0, 0x3f	; 63
     a58:	f8 94       	cli
     a5a:	de bf       	out	0x3e, r29	; 62
     a5c:	0f be       	out	0x3f, r0	; 63
     a5e:	cd bf       	out	0x3d, r28	; 61
     a60:	df 91       	pop	r29
     a62:	cf 91       	pop	r28
     a64:	08 95       	ret

00000a66 <Z>:
     a66:	cf 93       	push	r28
     a68:	df 93       	push	r29
     a6a:	00 d0       	rcall	.+0      	; 0xa6c <Z+0x6>
     a6c:	00 d0       	rcall	.+0      	; 0xa6e <Z+0x8>
     a6e:	00 d0       	rcall	.+0      	; 0xa70 <Z+0xa>
     a70:	cd b7       	in	r28, 0x3d	; 61
     a72:	de b7       	in	r29, 0x3e	; 62
     a74:	9a 83       	std	Y+2, r25	; 0x02
     a76:	89 83       	std	Y+1, r24	; 0x01
     a78:	4b 83       	std	Y+3, r20	; 0x03
     a7a:	5c 83       	std	Y+4, r21	; 0x04
     a7c:	6d 83       	std	Y+5, r22	; 0x05
     a7e:	7e 83       	std	Y+6, r23	; 0x06
     a80:	29 81       	ldd	r18, Y+1	; 0x01
     a82:	3a 81       	ldd	r19, Y+2	; 0x02
     a84:	8b 81       	ldd	r24, Y+3	; 0x03
     a86:	9c 81       	ldd	r25, Y+4	; 0x04
     a88:	ad 81       	ldd	r26, Y+5	; 0x05
     a8a:	be 81       	ldd	r27, Y+6	; 0x06
     a8c:	f9 01       	movw	r30, r18
     a8e:	80 83       	st	Z, r24
     a90:	91 83       	std	Z+1, r25	; 0x01
     a92:	a2 83       	std	Z+2, r26	; 0x02
     a94:	b3 83       	std	Z+3, r27	; 0x03
     a96:	89 81       	ldd	r24, Y+1	; 0x01
     a98:	9a 81       	ldd	r25, Y+2	; 0x02
     a9a:	2f ef       	ldi	r18, 0xFF	; 255
     a9c:	3f ef       	ldi	r19, 0xFF	; 255
     a9e:	fc 01       	movw	r30, r24
     aa0:	35 83       	std	Z+5, r19	; 0x05
     aa2:	24 83       	std	Z+4, r18	; 0x04
     aa4:	89 81       	ldd	r24, Y+1	; 0x01
     aa6:	9a 81       	ldd	r25, Y+2	; 0x02
     aa8:	fc 01       	movw	r30, r24
     aaa:	17 82       	std	Z+7, r1	; 0x07
     aac:	16 82       	std	Z+6, r1	; 0x06
     aae:	89 81       	ldd	r24, Y+1	; 0x01
     ab0:	9a 81       	ldd	r25, Y+2	; 0x02
     ab2:	fc 01       	movw	r30, r24
     ab4:	11 86       	std	Z+9, r1	; 0x09
     ab6:	10 86       	std	Z+8, r1	; 0x08
     ab8:	89 81       	ldd	r24, Y+1	; 0x01
     aba:	9a 81       	ldd	r25, Y+2	; 0x02
     abc:	fc 01       	movw	r30, r24
     abe:	13 86       	std	Z+11, r1	; 0x0b
     ac0:	12 86       	std	Z+10, r1	; 0x0a
     ac2:	89 81       	ldd	r24, Y+1	; 0x01
     ac4:	9a 81       	ldd	r25, Y+2	; 0x02
     ac6:	fc 01       	movw	r30, r24
     ac8:	15 86       	std	Z+13, r1	; 0x0d
     aca:	14 86       	std	Z+12, r1	; 0x0c
     acc:	89 81       	ldd	r24, Y+1	; 0x01
     ace:	9a 81       	ldd	r25, Y+2	; 0x02
     ad0:	21 e0       	ldi	r18, 0x01	; 1
     ad2:	30 e0       	ldi	r19, 0x00	; 0
     ad4:	fc 01       	movw	r30, r24
     ad6:	37 87       	std	Z+15, r19	; 0x0f
     ad8:	26 87       	std	Z+14, r18	; 0x0e
     ada:	89 81       	ldd	r24, Y+1	; 0x01
     adc:	9a 81       	ldd	r25, Y+2	; 0x02
     ade:	21 e0       	ldi	r18, 0x01	; 1
     ae0:	30 e0       	ldi	r19, 0x00	; 0
     ae2:	fc 01       	movw	r30, r24
     ae4:	31 8b       	std	Z+17, r19	; 0x11
     ae6:	20 8b       	std	Z+16, r18	; 0x10
     ae8:	89 81       	ldd	r24, Y+1	; 0x01
     aea:	9a 81       	ldd	r25, Y+2	; 0x02
     aec:	21 e0       	ldi	r18, 0x01	; 1
     aee:	30 e0       	ldi	r19, 0x00	; 0
     af0:	fc 01       	movw	r30, r24
     af2:	33 8b       	std	Z+19, r19	; 0x13
     af4:	22 8b       	std	Z+18, r18	; 0x12
     af6:	89 81       	ldd	r24, Y+1	; 0x01
     af8:	9a 81       	ldd	r25, Y+2	; 0x02
     afa:	26 96       	adiw	r28, 0x06	; 6
     afc:	0f b6       	in	r0, 0x3f	; 63
     afe:	f8 94       	cli
     b00:	de bf       	out	0x3e, r29	; 62
     b02:	0f be       	out	0x3f, r0	; 63
     b04:	cd bf       	out	0x3d, r28	; 61
     b06:	df 91       	pop	r29
     b08:	cf 91       	pop	r28
     b0a:	08 95       	ret

00000b0c <I>:
     b0c:	cf 93       	push	r28
     b0e:	df 93       	push	r29
     b10:	00 d0       	rcall	.+0      	; 0xb12 <I+0x6>
     b12:	00 d0       	rcall	.+0      	; 0xb14 <I+0x8>
     b14:	00 d0       	rcall	.+0      	; 0xb16 <I+0xa>
     b16:	cd b7       	in	r28, 0x3d	; 61
     b18:	de b7       	in	r29, 0x3e	; 62
     b1a:	9a 83       	std	Y+2, r25	; 0x02
     b1c:	89 83       	std	Y+1, r24	; 0x01
     b1e:	4b 83       	std	Y+3, r20	; 0x03
     b20:	5c 83       	std	Y+4, r21	; 0x04
     b22:	6d 83       	std	Y+5, r22	; 0x05
     b24:	7e 83       	std	Y+6, r23	; 0x06
     b26:	29 81       	ldd	r18, Y+1	; 0x01
     b28:	3a 81       	ldd	r19, Y+2	; 0x02
     b2a:	8b 81       	ldd	r24, Y+3	; 0x03
     b2c:	9c 81       	ldd	r25, Y+4	; 0x04
     b2e:	ad 81       	ldd	r26, Y+5	; 0x05
     b30:	be 81       	ldd	r27, Y+6	; 0x06
     b32:	f9 01       	movw	r30, r18
     b34:	80 83       	st	Z, r24
     b36:	91 83       	std	Z+1, r25	; 0x01
     b38:	a2 83       	std	Z+2, r26	; 0x02
     b3a:	b3 83       	std	Z+3, r27	; 0x03
     b3c:	89 81       	ldd	r24, Y+1	; 0x01
     b3e:	9a 81       	ldd	r25, Y+2	; 0x02
     b40:	fc 01       	movw	r30, r24
     b42:	15 82       	std	Z+5, r1	; 0x05
     b44:	14 82       	std	Z+4, r1	; 0x04
     b46:	89 81       	ldd	r24, Y+1	; 0x01
     b48:	9a 81       	ldd	r25, Y+2	; 0x02
     b4a:	2f ef       	ldi	r18, 0xFF	; 255
     b4c:	3f ef       	ldi	r19, 0xFF	; 255
     b4e:	fc 01       	movw	r30, r24
     b50:	37 83       	std	Z+7, r19	; 0x07
     b52:	26 83       	std	Z+6, r18	; 0x06
     b54:	89 81       	ldd	r24, Y+1	; 0x01
     b56:	9a 81       	ldd	r25, Y+2	; 0x02
     b58:	fc 01       	movw	r30, r24
     b5a:	11 86       	std	Z+9, r1	; 0x09
     b5c:	10 86       	std	Z+8, r1	; 0x08
     b5e:	89 81       	ldd	r24, Y+1	; 0x01
     b60:	9a 81       	ldd	r25, Y+2	; 0x02
     b62:	fc 01       	movw	r30, r24
     b64:	13 86       	std	Z+11, r1	; 0x0b
     b66:	12 86       	std	Z+10, r1	; 0x0a
     b68:	89 81       	ldd	r24, Y+1	; 0x01
     b6a:	9a 81       	ldd	r25, Y+2	; 0x02
     b6c:	fc 01       	movw	r30, r24
     b6e:	15 86       	std	Z+13, r1	; 0x0d
     b70:	14 86       	std	Z+12, r1	; 0x0c
     b72:	89 81       	ldd	r24, Y+1	; 0x01
     b74:	9a 81       	ldd	r25, Y+2	; 0x02
     b76:	21 e0       	ldi	r18, 0x01	; 1
     b78:	30 e0       	ldi	r19, 0x00	; 0
     b7a:	fc 01       	movw	r30, r24
     b7c:	37 87       	std	Z+15, r19	; 0x0f
     b7e:	26 87       	std	Z+14, r18	; 0x0e
     b80:	89 81       	ldd	r24, Y+1	; 0x01
     b82:	9a 81       	ldd	r25, Y+2	; 0x02
     b84:	fc 01       	movw	r30, r24
     b86:	11 8a       	std	Z+17, r1	; 0x11
     b88:	10 8a       	std	Z+16, r1	; 0x10
     b8a:	89 81       	ldd	r24, Y+1	; 0x01
     b8c:	9a 81       	ldd	r25, Y+2	; 0x02
     b8e:	22 e0       	ldi	r18, 0x02	; 2
     b90:	30 e0       	ldi	r19, 0x00	; 0
     b92:	fc 01       	movw	r30, r24
     b94:	33 8b       	std	Z+19, r19	; 0x13
     b96:	22 8b       	std	Z+18, r18	; 0x12
     b98:	89 81       	ldd	r24, Y+1	; 0x01
     b9a:	9a 81       	ldd	r25, Y+2	; 0x02
     b9c:	26 96       	adiw	r28, 0x06	; 6
     b9e:	0f b6       	in	r0, 0x3f	; 63
     ba0:	f8 94       	cli
     ba2:	de bf       	out	0x3e, r29	; 62
     ba4:	0f be       	out	0x3f, r0	; 63
     ba6:	cd bf       	out	0x3d, r28	; 61
     ba8:	df 91       	pop	r29
     baa:	cf 91       	pop	r28
     bac:	08 95       	ret

00000bae <O>:
     bae:	cf 93       	push	r28
     bb0:	df 93       	push	r29
     bb2:	00 d0       	rcall	.+0      	; 0xbb4 <O+0x6>
     bb4:	00 d0       	rcall	.+0      	; 0xbb6 <O+0x8>
     bb6:	00 d0       	rcall	.+0      	; 0xbb8 <O+0xa>
     bb8:	cd b7       	in	r28, 0x3d	; 61
     bba:	de b7       	in	r29, 0x3e	; 62
     bbc:	9a 83       	std	Y+2, r25	; 0x02
     bbe:	89 83       	std	Y+1, r24	; 0x01
     bc0:	4b 83       	std	Y+3, r20	; 0x03
     bc2:	5c 83       	std	Y+4, r21	; 0x04
     bc4:	6d 83       	std	Y+5, r22	; 0x05
     bc6:	7e 83       	std	Y+6, r23	; 0x06
     bc8:	29 81       	ldd	r18, Y+1	; 0x01
     bca:	3a 81       	ldd	r19, Y+2	; 0x02
     bcc:	8b 81       	ldd	r24, Y+3	; 0x03
     bce:	9c 81       	ldd	r25, Y+4	; 0x04
     bd0:	ad 81       	ldd	r26, Y+5	; 0x05
     bd2:	be 81       	ldd	r27, Y+6	; 0x06
     bd4:	f9 01       	movw	r30, r18
     bd6:	80 83       	st	Z, r24
     bd8:	91 83       	std	Z+1, r25	; 0x01
     bda:	a2 83       	std	Z+2, r26	; 0x02
     bdc:	b3 83       	std	Z+3, r27	; 0x03
     bde:	89 81       	ldd	r24, Y+1	; 0x01
     be0:	9a 81       	ldd	r25, Y+2	; 0x02
     be2:	fc 01       	movw	r30, r24
     be4:	15 82       	std	Z+5, r1	; 0x05
     be6:	14 82       	std	Z+4, r1	; 0x04
     be8:	89 81       	ldd	r24, Y+1	; 0x01
     bea:	9a 81       	ldd	r25, Y+2	; 0x02
     bec:	2f ef       	ldi	r18, 0xFF	; 255
     bee:	3f ef       	ldi	r19, 0xFF	; 255
     bf0:	fc 01       	movw	r30, r24
     bf2:	37 83       	std	Z+7, r19	; 0x07
     bf4:	26 83       	std	Z+6, r18	; 0x06
     bf6:	89 81       	ldd	r24, Y+1	; 0x01
     bf8:	9a 81       	ldd	r25, Y+2	; 0x02
     bfa:	fc 01       	movw	r30, r24
     bfc:	11 86       	std	Z+9, r1	; 0x09
     bfe:	10 86       	std	Z+8, r1	; 0x08
     c00:	89 81       	ldd	r24, Y+1	; 0x01
     c02:	9a 81       	ldd	r25, Y+2	; 0x02
     c04:	fc 01       	movw	r30, r24
     c06:	13 86       	std	Z+11, r1	; 0x0b
     c08:	12 86       	std	Z+10, r1	; 0x0a
     c0a:	89 81       	ldd	r24, Y+1	; 0x01
     c0c:	9a 81       	ldd	r25, Y+2	; 0x02
     c0e:	21 e0       	ldi	r18, 0x01	; 1
     c10:	30 e0       	ldi	r19, 0x00	; 0
     c12:	fc 01       	movw	r30, r24
     c14:	35 87       	std	Z+13, r19	; 0x0d
     c16:	24 87       	std	Z+12, r18	; 0x0c
     c18:	89 81       	ldd	r24, Y+1	; 0x01
     c1a:	9a 81       	ldd	r25, Y+2	; 0x02
     c1c:	fc 01       	movw	r30, r24
     c1e:	17 86       	std	Z+15, r1	; 0x0f
     c20:	16 86       	std	Z+14, r1	; 0x0e
     c22:	89 81       	ldd	r24, Y+1	; 0x01
     c24:	9a 81       	ldd	r25, Y+2	; 0x02
     c26:	21 e0       	ldi	r18, 0x01	; 1
     c28:	30 e0       	ldi	r19, 0x00	; 0
     c2a:	fc 01       	movw	r30, r24
     c2c:	31 8b       	std	Z+17, r19	; 0x11
     c2e:	20 8b       	std	Z+16, r18	; 0x10
     c30:	89 81       	ldd	r24, Y+1	; 0x01
     c32:	9a 81       	ldd	r25, Y+2	; 0x02
     c34:	2f ef       	ldi	r18, 0xFF	; 255
     c36:	3f ef       	ldi	r19, 0xFF	; 255
     c38:	fc 01       	movw	r30, r24
     c3a:	33 8b       	std	Z+19, r19	; 0x13
     c3c:	22 8b       	std	Z+18, r18	; 0x12
     c3e:	89 81       	ldd	r24, Y+1	; 0x01
     c40:	9a 81       	ldd	r25, Y+2	; 0x02
     c42:	26 96       	adiw	r28, 0x06	; 6
     c44:	0f b6       	in	r0, 0x3f	; 63
     c46:	f8 94       	cli
     c48:	de bf       	out	0x3e, r29	; 62
     c4a:	0f be       	out	0x3f, r0	; 63
     c4c:	cd bf       	out	0x3d, r28	; 61
     c4e:	df 91       	pop	r29
     c50:	cf 91       	pop	r28
     c52:	08 95       	ret

00000c54 <getTile>:
     c54:	cf 93       	push	r28
     c56:	df 93       	push	r29
     c58:	00 d0       	rcall	.+0      	; 0xc5a <getTile+0x6>
     c5a:	00 d0       	rcall	.+0      	; 0xc5c <getTile+0x8>
     c5c:	cd b7       	in	r28, 0x3d	; 61
     c5e:	de b7       	in	r29, 0x3e	; 62
     c60:	9a 83       	std	Y+2, r25	; 0x02
     c62:	89 83       	std	Y+1, r24	; 0x01
     c64:	7c 83       	std	Y+4, r23	; 0x04
     c66:	6b 83       	std	Y+3, r22	; 0x03
     c68:	8b 81       	ldd	r24, Y+3	; 0x03
     c6a:	9c 81       	ldd	r25, Y+4	; 0x04
     c6c:	01 96       	adiw	r24, 0x01	; 1
     c6e:	88 0f       	add	r24, r24
     c70:	99 1f       	adc	r25, r25
     c72:	88 0f       	add	r24, r24
     c74:	99 1f       	adc	r25, r25
     c76:	29 81       	ldd	r18, Y+1	; 0x01
     c78:	3a 81       	ldd	r19, Y+2	; 0x02
     c7a:	28 0f       	add	r18, r24
     c7c:	39 1f       	adc	r19, r25
     c7e:	89 81       	ldd	r24, Y+1	; 0x01
     c80:	9a 81       	ldd	r25, Y+2	; 0x02
     c82:	b9 01       	movw	r22, r18
     c84:	0c de       	rcall	.-1000   	; 0x89e <add>
     c86:	dc 01       	movw	r26, r24
     c88:	cb 01       	movw	r24, r22
     c8a:	bc 01       	movw	r22, r24
     c8c:	cd 01       	movw	r24, r26
     c8e:	0f 90       	pop	r0
     c90:	0f 90       	pop	r0
     c92:	0f 90       	pop	r0
     c94:	0f 90       	pop	r0
     c96:	df 91       	pop	r29
     c98:	cf 91       	pop	r28
     c9a:	08 95       	ret

00000c9c <down>:
     c9c:	cf 93       	push	r28
     c9e:	df 93       	push	r29
     ca0:	00 d0       	rcall	.+0      	; 0xca2 <down+0x6>
     ca2:	cd b7       	in	r28, 0x3d	; 61
     ca4:	de b7       	in	r29, 0x3e	; 62
     ca6:	9a 83       	std	Y+2, r25	; 0x02
     ca8:	89 83       	std	Y+1, r24	; 0x01
     caa:	89 81       	ldd	r24, Y+1	; 0x01
     cac:	9a 81       	ldd	r25, Y+2	; 0x02
     cae:	fc 01       	movw	r30, r24
     cb0:	82 81       	ldd	r24, Z+2	; 0x02
     cb2:	93 81       	ldd	r25, Z+3	; 0x03
     cb4:	01 97       	sbiw	r24, 0x01	; 1
     cb6:	9c 01       	movw	r18, r24
     cb8:	89 81       	ldd	r24, Y+1	; 0x01
     cba:	9a 81       	ldd	r25, Y+2	; 0x02
     cbc:	fc 01       	movw	r30, r24
     cbe:	33 83       	std	Z+3, r19	; 0x03
     cc0:	22 83       	std	Z+2, r18	; 0x02
     cc2:	00 00       	nop
     cc4:	0f 90       	pop	r0
     cc6:	0f 90       	pop	r0
     cc8:	df 91       	pop	r29
     cca:	cf 91       	pop	r28
     ccc:	08 95       	ret

00000cce <right>:
     cce:	cf 93       	push	r28
     cd0:	df 93       	push	r29
     cd2:	00 d0       	rcall	.+0      	; 0xcd4 <right+0x6>
     cd4:	cd b7       	in	r28, 0x3d	; 61
     cd6:	de b7       	in	r29, 0x3e	; 62
     cd8:	9a 83       	std	Y+2, r25	; 0x02
     cda:	89 83       	std	Y+1, r24	; 0x01
     cdc:	89 81       	ldd	r24, Y+1	; 0x01
     cde:	9a 81       	ldd	r25, Y+2	; 0x02
     ce0:	fc 01       	movw	r30, r24
     ce2:	80 81       	ld	r24, Z
     ce4:	91 81       	ldd	r25, Z+1	; 0x01
     ce6:	01 96       	adiw	r24, 0x01	; 1
     ce8:	9c 01       	movw	r18, r24
     cea:	89 81       	ldd	r24, Y+1	; 0x01
     cec:	9a 81       	ldd	r25, Y+2	; 0x02
     cee:	fc 01       	movw	r30, r24
     cf0:	31 83       	std	Z+1, r19	; 0x01
     cf2:	20 83       	st	Z, r18
     cf4:	00 00       	nop
     cf6:	0f 90       	pop	r0
     cf8:	0f 90       	pop	r0
     cfa:	df 91       	pop	r29
     cfc:	cf 91       	pop	r28
     cfe:	08 95       	ret

00000d00 <left>:
     d00:	cf 93       	push	r28
     d02:	df 93       	push	r29
     d04:	00 d0       	rcall	.+0      	; 0xd06 <left+0x6>
     d06:	cd b7       	in	r28, 0x3d	; 61
     d08:	de b7       	in	r29, 0x3e	; 62
     d0a:	9a 83       	std	Y+2, r25	; 0x02
     d0c:	89 83       	std	Y+1, r24	; 0x01
     d0e:	89 81       	ldd	r24, Y+1	; 0x01
     d10:	9a 81       	ldd	r25, Y+2	; 0x02
     d12:	fc 01       	movw	r30, r24
     d14:	80 81       	ld	r24, Z
     d16:	91 81       	ldd	r25, Z+1	; 0x01
     d18:	01 97       	sbiw	r24, 0x01	; 1
     d1a:	9c 01       	movw	r18, r24
     d1c:	89 81       	ldd	r24, Y+1	; 0x01
     d1e:	9a 81       	ldd	r25, Y+2	; 0x02
     d20:	fc 01       	movw	r30, r24
     d22:	31 83       	std	Z+1, r19	; 0x01
     d24:	20 83       	st	Z, r18
     d26:	00 00       	nop
     d28:	0f 90       	pop	r0
     d2a:	0f 90       	pop	r0
     d2c:	df 91       	pop	r29
     d2e:	cf 91       	pop	r28
     d30:	08 95       	ret

00000d32 <mirror>:
     d32:	cf 93       	push	r28
     d34:	df 93       	push	r29
     d36:	00 d0       	rcall	.+0      	; 0xd38 <mirror+0x6>
     d38:	00 d0       	rcall	.+0      	; 0xd3a <mirror+0x8>
     d3a:	cd b7       	in	r28, 0x3d	; 61
     d3c:	de b7       	in	r29, 0x3e	; 62
     d3e:	9c 83       	std	Y+4, r25	; 0x04
     d40:	8b 83       	std	Y+3, r24	; 0x03
     d42:	1a 82       	std	Y+2, r1	; 0x02
     d44:	19 82       	std	Y+1, r1	; 0x01
     d46:	25 c0       	rjmp	.+74     	; 0xd92 <mirror+0x60>
     d48:	2b 81       	ldd	r18, Y+3	; 0x03
     d4a:	3c 81       	ldd	r19, Y+4	; 0x04
     d4c:	89 81       	ldd	r24, Y+1	; 0x01
     d4e:	9a 81       	ldd	r25, Y+2	; 0x02
     d50:	01 96       	adiw	r24, 0x01	; 1
     d52:	88 0f       	add	r24, r24
     d54:	99 1f       	adc	r25, r25
     d56:	88 0f       	add	r24, r24
     d58:	99 1f       	adc	r25, r25
     d5a:	82 0f       	add	r24, r18
     d5c:	93 1f       	adc	r25, r19
     d5e:	fc 01       	movw	r30, r24
     d60:	80 81       	ld	r24, Z
     d62:	91 81       	ldd	r25, Z+1	; 0x01
     d64:	22 27       	eor	r18, r18
     d66:	33 27       	eor	r19, r19
     d68:	28 1b       	sub	r18, r24
     d6a:	39 0b       	sbc	r19, r25
     d6c:	4b 81       	ldd	r20, Y+3	; 0x03
     d6e:	5c 81       	ldd	r21, Y+4	; 0x04
     d70:	89 81       	ldd	r24, Y+1	; 0x01
     d72:	9a 81       	ldd	r25, Y+2	; 0x02
     d74:	01 96       	adiw	r24, 0x01	; 1
     d76:	88 0f       	add	r24, r24
     d78:	99 1f       	adc	r25, r25
     d7a:	88 0f       	add	r24, r24
     d7c:	99 1f       	adc	r25, r25
     d7e:	84 0f       	add	r24, r20
     d80:	95 1f       	adc	r25, r21
     d82:	fc 01       	movw	r30, r24
     d84:	31 83       	std	Z+1, r19	; 0x01
     d86:	20 83       	st	Z, r18
     d88:	89 81       	ldd	r24, Y+1	; 0x01
     d8a:	9a 81       	ldd	r25, Y+2	; 0x02
     d8c:	01 96       	adiw	r24, 0x01	; 1
     d8e:	9a 83       	std	Y+2, r25	; 0x02
     d90:	89 83       	std	Y+1, r24	; 0x01
     d92:	89 81       	ldd	r24, Y+1	; 0x01
     d94:	9a 81       	ldd	r25, Y+2	; 0x02
     d96:	04 97       	sbiw	r24, 0x04	; 4
     d98:	b8 f2       	brcs	.-82     	; 0xd48 <mirror+0x16>
     d9a:	00 00       	nop
     d9c:	0f 90       	pop	r0
     d9e:	0f 90       	pop	r0
     da0:	0f 90       	pop	r0
     da2:	0f 90       	pop	r0
     da4:	df 91       	pop	r29
     da6:	cf 91       	pop	r28
     da8:	08 95       	ret

00000daa <turnCCW>:
     daa:	cf 93       	push	r28
     dac:	df 93       	push	r29
     dae:	00 d0       	rcall	.+0      	; 0xdb0 <turnCCW+0x6>
     db0:	00 d0       	rcall	.+0      	; 0xdb2 <turnCCW+0x8>
     db2:	cd b7       	in	r28, 0x3d	; 61
     db4:	de b7       	in	r29, 0x3e	; 62
     db6:	9c 83       	std	Y+4, r25	; 0x04
     db8:	8b 83       	std	Y+3, r24	; 0x03
     dba:	1a 82       	std	Y+2, r1	; 0x02
     dbc:	19 82       	std	Y+1, r1	; 0x01
     dbe:	11 c0       	rjmp	.+34     	; 0xde2 <turnCCW+0x38>
     dc0:	89 81       	ldd	r24, Y+1	; 0x01
     dc2:	9a 81       	ldd	r25, Y+2	; 0x02
     dc4:	01 96       	adiw	r24, 0x01	; 1
     dc6:	88 0f       	add	r24, r24
     dc8:	99 1f       	adc	r25, r25
     dca:	88 0f       	add	r24, r24
     dcc:	99 1f       	adc	r25, r25
     dce:	2b 81       	ldd	r18, Y+3	; 0x03
     dd0:	3c 81       	ldd	r19, Y+4	; 0x04
     dd2:	82 0f       	add	r24, r18
     dd4:	93 1f       	adc	r25, r19
     dd6:	9c dd       	rcall	.-1224   	; 0x910 <pivotCCW>
     dd8:	89 81       	ldd	r24, Y+1	; 0x01
     dda:	9a 81       	ldd	r25, Y+2	; 0x02
     ddc:	01 96       	adiw	r24, 0x01	; 1
     dde:	9a 83       	std	Y+2, r25	; 0x02
     de0:	89 83       	std	Y+1, r24	; 0x01
     de2:	89 81       	ldd	r24, Y+1	; 0x01
     de4:	9a 81       	ldd	r25, Y+2	; 0x02
     de6:	04 97       	sbiw	r24, 0x04	; 4
     de8:	58 f3       	brcs	.-42     	; 0xdc0 <turnCCW+0x16>
     dea:	00 00       	nop
     dec:	0f 90       	pop	r0
     dee:	0f 90       	pop	r0
     df0:	0f 90       	pop	r0
     df2:	0f 90       	pop	r0
     df4:	df 91       	pop	r29
     df6:	cf 91       	pop	r28
     df8:	08 95       	ret

00000dfa <turnCW>:
     dfa:	cf 93       	push	r28
     dfc:	df 93       	push	r29
     dfe:	00 d0       	rcall	.+0      	; 0xe00 <turnCW+0x6>
     e00:	00 d0       	rcall	.+0      	; 0xe02 <turnCW+0x8>
     e02:	cd b7       	in	r28, 0x3d	; 61
     e04:	de b7       	in	r29, 0x3e	; 62
     e06:	9c 83       	std	Y+4, r25	; 0x04
     e08:	8b 83       	std	Y+3, r24	; 0x03
     e0a:	1a 82       	std	Y+2, r1	; 0x02
     e0c:	19 82       	std	Y+1, r1	; 0x01
     e0e:	11 c0       	rjmp	.+34     	; 0xe32 <turnCW+0x38>
     e10:	89 81       	ldd	r24, Y+1	; 0x01
     e12:	9a 81       	ldd	r25, Y+2	; 0x02
     e14:	01 96       	adiw	r24, 0x01	; 1
     e16:	88 0f       	add	r24, r24
     e18:	99 1f       	adc	r25, r25
     e1a:	88 0f       	add	r24, r24
     e1c:	99 1f       	adc	r25, r25
     e1e:	2b 81       	ldd	r18, Y+3	; 0x03
     e20:	3c 81       	ldd	r19, Y+4	; 0x04
     e22:	82 0f       	add	r24, r18
     e24:	93 1f       	adc	r25, r19
     e26:	a0 dd       	rcall	.-1216   	; 0x968 <pivotCW>
     e28:	89 81       	ldd	r24, Y+1	; 0x01
     e2a:	9a 81       	ldd	r25, Y+2	; 0x02
     e2c:	01 96       	adiw	r24, 0x01	; 1
     e2e:	9a 83       	std	Y+2, r25	; 0x02
     e30:	89 83       	std	Y+1, r24	; 0x01
     e32:	89 81       	ldd	r24, Y+1	; 0x01
     e34:	9a 81       	ldd	r25, Y+2	; 0x02
     e36:	04 97       	sbiw	r24, 0x04	; 4
     e38:	58 f3       	brcs	.-42     	; 0xe10 <turnCW+0x16>
     e3a:	00 00       	nop
     e3c:	0f 90       	pop	r0
     e3e:	0f 90       	pop	r0
     e40:	0f 90       	pop	r0
     e42:	0f 90       	pop	r0
     e44:	df 91       	pop	r29
     e46:	cf 91       	pop	r28
     e48:	08 95       	ret

00000e4a <CreateTetra>:
     e4a:	cf 93       	push	r28
     e4c:	df 93       	push	r29
     e4e:	cd b7       	in	r28, 0x3d	; 61
     e50:	de b7       	in	r29, 0x3e	; 62
     e52:	af 97       	sbiw	r28, 0x2f	; 47
     e54:	0f b6       	in	r0, 0x3f	; 63
     e56:	f8 94       	cli
     e58:	de bf       	out	0x3e, r29	; 62
     e5a:	0f be       	out	0x3f, r0	; 63
     e5c:	cd bf       	out	0x3d, r28	; 61
     e5e:	9b 8f       	std	Y+27, r25	; 0x1b
     e60:	8a 8f       	std	Y+26, r24	; 0x1a
     e62:	0e 94 fc 0f 	call	0x1ff8	; 0x1ff8 <rand>
     e66:	87 70       	andi	r24, 0x07	; 7
     e68:	90 78       	andi	r25, 0x80	; 128
     e6a:	99 23       	and	r25, r25
     e6c:	24 f4       	brge	.+8      	; 0xe76 <CreateTetra+0x2c>
     e6e:	01 97       	sbiw	r24, 0x01	; 1
     e70:	88 6f       	ori	r24, 0xF8	; 248
     e72:	9f 6f       	ori	r25, 0xFF	; 255
     e74:	01 96       	adiw	r24, 0x01	; 1
     e76:	8e 5f       	subi	r24, 0xFE	; 254
     e78:	89 83       	std	Y+1, r24	; 0x01
     e7a:	89 81       	ldd	r24, Y+1	; 0x01
     e7c:	88 2f       	mov	r24, r24
     e7e:	90 e0       	ldi	r25, 0x00	; 0
     e80:	9b 83       	std	Y+3, r25	; 0x03
     e82:	8a 83       	std	Y+2, r24	; 0x02
     e84:	87 e1       	ldi	r24, 0x17	; 23
     e86:	90 e0       	ldi	r25, 0x00	; 0
     e88:	9d 83       	std	Y+5, r25	; 0x05
     e8a:	8c 83       	std	Y+4, r24	; 0x04
     e8c:	0e 94 fc 0f 	call	0x1ff8	; 0x1ff8 <rand>
     e90:	83 70       	andi	r24, 0x03	; 3
     e92:	90 78       	andi	r25, 0x80	; 128
     e94:	99 23       	and	r25, r25
     e96:	24 f4       	brge	.+8      	; 0xea0 <CreateTetra+0x56>
     e98:	01 97       	sbiw	r24, 0x01	; 1
     e9a:	8c 6f       	ori	r24, 0xFC	; 252
     e9c:	9f 6f       	ori	r25, 0xFF	; 255
     e9e:	01 96       	adiw	r24, 0x01	; 1
     ea0:	81 30       	cpi	r24, 0x01	; 1
     ea2:	91 05       	cpc	r25, r1
     ea4:	d9 f0       	breq	.+54     	; 0xedc <CreateTetra+0x92>
     ea6:	82 30       	cpi	r24, 0x02	; 2
     ea8:	91 05       	cpc	r25, r1
     eaa:	69 f1       	breq	.+90     	; 0xf06 <CreateTetra+0xbc>
     eac:	89 2b       	or	r24, r25
     eae:	09 f0       	breq	.+2      	; 0xeb2 <CreateTetra+0x68>
     eb0:	3f c0       	rjmp	.+126    	; 0xf30 <CreateTetra+0xe6>
     eb2:	9e 01       	movw	r18, r28
     eb4:	24 5e       	subi	r18, 0xE4	; 228
     eb6:	3f 4f       	sbci	r19, 0xFF	; 255
     eb8:	8a 81       	ldd	r24, Y+2	; 0x02
     eba:	9b 81       	ldd	r25, Y+3	; 0x03
     ebc:	ac 81       	ldd	r26, Y+4	; 0x04
     ebe:	bd 81       	ldd	r27, Y+5	; 0x05
     ec0:	ac 01       	movw	r20, r24
     ec2:	bd 01       	movw	r22, r26
     ec4:	c9 01       	movw	r24, r18
     ec6:	7c dd       	rcall	.-1288   	; 0x9c0 <L>
     ec8:	84 e1       	ldi	r24, 0x14	; 20
     eca:	fe 01       	movw	r30, r28
     ecc:	7c 96       	adiw	r30, 0x1c	; 28
     ece:	de 01       	movw	r26, r28
     ed0:	16 96       	adiw	r26, 0x06	; 6
     ed2:	01 90       	ld	r0, Z+
     ed4:	0d 92       	st	X+, r0
     ed6:	8a 95       	dec	r24
     ed8:	e1 f7       	brne	.-8      	; 0xed2 <CreateTetra+0x88>
     eda:	3f c0       	rjmp	.+126    	; 0xf5a <CreateTetra+0x110>
     edc:	9e 01       	movw	r18, r28
     ede:	24 5e       	subi	r18, 0xE4	; 228
     ee0:	3f 4f       	sbci	r19, 0xFF	; 255
     ee2:	8a 81       	ldd	r24, Y+2	; 0x02
     ee4:	9b 81       	ldd	r25, Y+3	; 0x03
     ee6:	ac 81       	ldd	r26, Y+4	; 0x04
     ee8:	bd 81       	ldd	r27, Y+5	; 0x05
     eea:	ac 01       	movw	r20, r24
     eec:	bd 01       	movw	r22, r26
     eee:	c9 01       	movw	r24, r18
     ef0:	ba dd       	rcall	.-1164   	; 0xa66 <Z>
     ef2:	84 e1       	ldi	r24, 0x14	; 20
     ef4:	fe 01       	movw	r30, r28
     ef6:	7c 96       	adiw	r30, 0x1c	; 28
     ef8:	de 01       	movw	r26, r28
     efa:	16 96       	adiw	r26, 0x06	; 6
     efc:	01 90       	ld	r0, Z+
     efe:	0d 92       	st	X+, r0
     f00:	8a 95       	dec	r24
     f02:	e1 f7       	brne	.-8      	; 0xefc <CreateTetra+0xb2>
     f04:	2a c0       	rjmp	.+84     	; 0xf5a <CreateTetra+0x110>
     f06:	9e 01       	movw	r18, r28
     f08:	24 5e       	subi	r18, 0xE4	; 228
     f0a:	3f 4f       	sbci	r19, 0xFF	; 255
     f0c:	8a 81       	ldd	r24, Y+2	; 0x02
     f0e:	9b 81       	ldd	r25, Y+3	; 0x03
     f10:	ac 81       	ldd	r26, Y+4	; 0x04
     f12:	bd 81       	ldd	r27, Y+5	; 0x05
     f14:	ac 01       	movw	r20, r24
     f16:	bd 01       	movw	r22, r26
     f18:	c9 01       	movw	r24, r18
     f1a:	f8 dd       	rcall	.-1040   	; 0xb0c <I>
     f1c:	84 e1       	ldi	r24, 0x14	; 20
     f1e:	fe 01       	movw	r30, r28
     f20:	7c 96       	adiw	r30, 0x1c	; 28
     f22:	de 01       	movw	r26, r28
     f24:	16 96       	adiw	r26, 0x06	; 6
     f26:	01 90       	ld	r0, Z+
     f28:	0d 92       	st	X+, r0
     f2a:	8a 95       	dec	r24
     f2c:	e1 f7       	brne	.-8      	; 0xf26 <CreateTetra+0xdc>
     f2e:	15 c0       	rjmp	.+42     	; 0xf5a <CreateTetra+0x110>
     f30:	9e 01       	movw	r18, r28
     f32:	24 5e       	subi	r18, 0xE4	; 228
     f34:	3f 4f       	sbci	r19, 0xFF	; 255
     f36:	8a 81       	ldd	r24, Y+2	; 0x02
     f38:	9b 81       	ldd	r25, Y+3	; 0x03
     f3a:	ac 81       	ldd	r26, Y+4	; 0x04
     f3c:	bd 81       	ldd	r27, Y+5	; 0x05
     f3e:	ac 01       	movw	r20, r24
     f40:	bd 01       	movw	r22, r26
     f42:	c9 01       	movw	r24, r18
     f44:	34 de       	rcall	.-920    	; 0xbae <O>
     f46:	84 e1       	ldi	r24, 0x14	; 20
     f48:	fe 01       	movw	r30, r28
     f4a:	7c 96       	adiw	r30, 0x1c	; 28
     f4c:	de 01       	movw	r26, r28
     f4e:	16 96       	adiw	r26, 0x06	; 6
     f50:	01 90       	ld	r0, Z+
     f52:	0d 92       	st	X+, r0
     f54:	8a 95       	dec	r24
     f56:	e1 f7       	brne	.-8      	; 0xf50 <CreateTetra+0x106>
     f58:	00 00       	nop
     f5a:	0e 94 fc 0f 	call	0x1ff8	; 0x1ff8 <rand>
     f5e:	23 e0       	ldi	r18, 0x03	; 3
     f60:	30 e0       	ldi	r19, 0x00	; 0
     f62:	b9 01       	movw	r22, r18
     f64:	d2 d7       	rcall	.+4004   	; 0x1f0a <__divmodhi4>
     f66:	00 97       	sbiw	r24, 0x00	; 0
     f68:	19 f0       	breq	.+6      	; 0xf70 <CreateTetra+0x126>
     f6a:	01 97       	sbiw	r24, 0x01	; 1
     f6c:	29 f0       	breq	.+10     	; 0xf78 <CreateTetra+0x12e>
     f6e:	08 c0       	rjmp	.+16     	; 0xf80 <CreateTetra+0x136>
     f70:	ce 01       	movw	r24, r28
     f72:	06 96       	adiw	r24, 0x06	; 6
     f74:	1a df       	rcall	.-460    	; 0xdaa <turnCCW>
     f76:	04 c0       	rjmp	.+8      	; 0xf80 <CreateTetra+0x136>
     f78:	ce 01       	movw	r24, r28
     f7a:	06 96       	adiw	r24, 0x06	; 6
     f7c:	3e df       	rcall	.-388    	; 0xdfa <turnCW>
     f7e:	00 00       	nop
     f80:	0e 94 fc 0f 	call	0x1ff8	; 0x1ff8 <rand>
     f84:	81 70       	andi	r24, 0x01	; 1
     f86:	99 27       	eor	r25, r25
     f88:	89 2b       	or	r24, r25
     f8a:	19 f0       	breq	.+6      	; 0xf92 <CreateTetra+0x148>
     f8c:	ce 01       	movw	r24, r28
     f8e:	06 96       	adiw	r24, 0x06	; 6
     f90:	d0 de       	rcall	.-608    	; 0xd32 <mirror>
     f92:	8a 8d       	ldd	r24, Y+26	; 0x1a
     f94:	9b 8d       	ldd	r25, Y+27	; 0x1b
     f96:	24 e1       	ldi	r18, 0x14	; 20
     f98:	fe 01       	movw	r30, r28
     f9a:	36 96       	adiw	r30, 0x06	; 6
     f9c:	dc 01       	movw	r26, r24
     f9e:	01 90       	ld	r0, Z+
     fa0:	0d 92       	st	X+, r0
     fa2:	2a 95       	dec	r18
     fa4:	e1 f7       	brne	.-8      	; 0xf9e <CreateTetra+0x154>
     fa6:	8a 8d       	ldd	r24, Y+26	; 0x1a
     fa8:	9b 8d       	ldd	r25, Y+27	; 0x1b
     faa:	af 96       	adiw	r28, 0x2f	; 47
     fac:	0f b6       	in	r0, 0x3f	; 63
     fae:	f8 94       	cli
     fb0:	de bf       	out	0x3e, r29	; 62
     fb2:	0f be       	out	0x3f, r0	; 63
     fb4:	cd bf       	out	0x3d, r28	; 61
     fb6:	df 91       	pop	r29
     fb8:	cf 91       	pop	r28
     fba:	08 95       	ret

00000fbc <getPoint>:
     fbc:	cf 93       	push	r28
     fbe:	df 93       	push	r29
     fc0:	00 d0       	rcall	.+0      	; 0xfc2 <getPoint+0x6>
     fc2:	00 d0       	rcall	.+0      	; 0xfc4 <getPoint+0x8>
     fc4:	cd b7       	in	r28, 0x3d	; 61
     fc6:	de b7       	in	r29, 0x3e	; 62
     fc8:	9a 83       	std	Y+2, r25	; 0x02
     fca:	89 83       	std	Y+1, r24	; 0x01
     fcc:	7c 83       	std	Y+4, r23	; 0x04
     fce:	6b 83       	std	Y+3, r22	; 0x03
     fd0:	8b 81       	ldd	r24, Y+3	; 0x03
     fd2:	9c 81       	ldd	r25, Y+4	; 0x04
     fd4:	fc 01       	movw	r30, r24
     fd6:	60 81       	ld	r22, Z
     fd8:	71 81       	ldd	r23, Z+1	; 0x01
     fda:	8b 81       	ldd	r24, Y+3	; 0x03
     fdc:	9c 81       	ldd	r25, Y+4	; 0x04
     fde:	fc 01       	movw	r30, r24
     fe0:	82 81       	ldd	r24, Z+2	; 0x02
     fe2:	93 81       	ldd	r25, Z+3	; 0x03
     fe4:	49 81       	ldd	r20, Y+1	; 0x01
     fe6:	5a 81       	ldd	r21, Y+2	; 0x02
     fe8:	e5 e1       	ldi	r30, 0x15	; 21
     fea:	e6 9f       	mul	r30, r22
     fec:	90 01       	movw	r18, r0
     fee:	e7 9f       	mul	r30, r23
     ff0:	30 0d       	add	r19, r0
     ff2:	11 24       	eor	r1, r1
     ff4:	24 0f       	add	r18, r20
     ff6:	35 1f       	adc	r19, r21
     ff8:	82 0f       	add	r24, r18
     ffa:	93 1f       	adc	r25, r19
     ffc:	fc 01       	movw	r30, r24
     ffe:	80 81       	ld	r24, Z
    1000:	0f 90       	pop	r0
    1002:	0f 90       	pop	r0
    1004:	0f 90       	pop	r0
    1006:	0f 90       	pop	r0
    1008:	df 91       	pop	r29
    100a:	cf 91       	pop	r28
    100c:	08 95       	ret

0000100e <clearRow>:
    100e:	cf 93       	push	r28
    1010:	df 93       	push	r29
    1012:	00 d0       	rcall	.+0      	; 0x1014 <clearRow+0x6>
    1014:	00 d0       	rcall	.+0      	; 0x1016 <clearRow+0x8>
    1016:	00 d0       	rcall	.+0      	; 0x1018 <clearRow+0xa>
    1018:	cd b7       	in	r28, 0x3d	; 61
    101a:	de b7       	in	r29, 0x3e	; 62
    101c:	9c 83       	std	Y+4, r25	; 0x04
    101e:	8b 83       	std	Y+3, r24	; 0x03
    1020:	7e 83       	std	Y+6, r23	; 0x06
    1022:	6d 83       	std	Y+5, r22	; 0x05
    1024:	1a 82       	std	Y+2, r1	; 0x02
    1026:	19 82       	std	Y+1, r1	; 0x01
    1028:	17 c0       	rjmp	.+46     	; 0x1058 <clearRow+0x4a>
    102a:	2b 81       	ldd	r18, Y+3	; 0x03
    102c:	3c 81       	ldd	r19, Y+4	; 0x04
    102e:	49 81       	ldd	r20, Y+1	; 0x01
    1030:	5a 81       	ldd	r21, Y+2	; 0x02
    1032:	65 e1       	ldi	r22, 0x15	; 21
    1034:	64 9f       	mul	r22, r20
    1036:	c0 01       	movw	r24, r0
    1038:	65 9f       	mul	r22, r21
    103a:	90 0d       	add	r25, r0
    103c:	11 24       	eor	r1, r1
    103e:	28 0f       	add	r18, r24
    1040:	39 1f       	adc	r19, r25
    1042:	8d 81       	ldd	r24, Y+5	; 0x05
    1044:	9e 81       	ldd	r25, Y+6	; 0x06
    1046:	82 0f       	add	r24, r18
    1048:	93 1f       	adc	r25, r19
    104a:	fc 01       	movw	r30, r24
    104c:	10 82       	st	Z, r1
    104e:	89 81       	ldd	r24, Y+1	; 0x01
    1050:	9a 81       	ldd	r25, Y+2	; 0x02
    1052:	01 96       	adiw	r24, 0x01	; 1
    1054:	9a 83       	std	Y+2, r25	; 0x02
    1056:	89 83       	std	Y+1, r24	; 0x01
    1058:	89 81       	ldd	r24, Y+1	; 0x01
    105a:	9a 81       	ldd	r25, Y+2	; 0x02
    105c:	0c 97       	sbiw	r24, 0x0c	; 12
    105e:	2c f3       	brlt	.-54     	; 0x102a <clearRow+0x1c>
    1060:	00 00       	nop
    1062:	26 96       	adiw	r28, 0x06	; 6
    1064:	0f b6       	in	r0, 0x3f	; 63
    1066:	f8 94       	cli
    1068:	de bf       	out	0x3e, r29	; 62
    106a:	0f be       	out	0x3f, r0	; 63
    106c:	cd bf       	out	0x3d, r28	; 61
    106e:	df 91       	pop	r29
    1070:	cf 91       	pop	r28
    1072:	08 95       	ret

00001074 <fillRow>:
    1074:	cf 93       	push	r28
    1076:	df 93       	push	r29
    1078:	00 d0       	rcall	.+0      	; 0x107a <fillRow+0x6>
    107a:	00 d0       	rcall	.+0      	; 0x107c <fillRow+0x8>
    107c:	00 d0       	rcall	.+0      	; 0x107e <fillRow+0xa>
    107e:	cd b7       	in	r28, 0x3d	; 61
    1080:	de b7       	in	r29, 0x3e	; 62
    1082:	9c 83       	std	Y+4, r25	; 0x04
    1084:	8b 83       	std	Y+3, r24	; 0x03
    1086:	7e 83       	std	Y+6, r23	; 0x06
    1088:	6d 83       	std	Y+5, r22	; 0x05
    108a:	1a 82       	std	Y+2, r1	; 0x02
    108c:	19 82       	std	Y+1, r1	; 0x01
    108e:	18 c0       	rjmp	.+48     	; 0x10c0 <fillRow+0x4c>
    1090:	2b 81       	ldd	r18, Y+3	; 0x03
    1092:	3c 81       	ldd	r19, Y+4	; 0x04
    1094:	49 81       	ldd	r20, Y+1	; 0x01
    1096:	5a 81       	ldd	r21, Y+2	; 0x02
    1098:	65 e1       	ldi	r22, 0x15	; 21
    109a:	64 9f       	mul	r22, r20
    109c:	c0 01       	movw	r24, r0
    109e:	65 9f       	mul	r22, r21
    10a0:	90 0d       	add	r25, r0
    10a2:	11 24       	eor	r1, r1
    10a4:	28 0f       	add	r18, r24
    10a6:	39 1f       	adc	r19, r25
    10a8:	8d 81       	ldd	r24, Y+5	; 0x05
    10aa:	9e 81       	ldd	r25, Y+6	; 0x06
    10ac:	82 0f       	add	r24, r18
    10ae:	93 1f       	adc	r25, r19
    10b0:	21 e0       	ldi	r18, 0x01	; 1
    10b2:	fc 01       	movw	r30, r24
    10b4:	20 83       	st	Z, r18
    10b6:	89 81       	ldd	r24, Y+1	; 0x01
    10b8:	9a 81       	ldd	r25, Y+2	; 0x02
    10ba:	01 96       	adiw	r24, 0x01	; 1
    10bc:	9a 83       	std	Y+2, r25	; 0x02
    10be:	89 83       	std	Y+1, r24	; 0x01
    10c0:	89 81       	ldd	r24, Y+1	; 0x01
    10c2:	9a 81       	ldd	r25, Y+2	; 0x02
    10c4:	0c 97       	sbiw	r24, 0x0c	; 12
    10c6:	24 f3       	brlt	.-56     	; 0x1090 <fillRow+0x1c>
    10c8:	00 00       	nop
    10ca:	26 96       	adiw	r28, 0x06	; 6
    10cc:	0f b6       	in	r0, 0x3f	; 63
    10ce:	f8 94       	cli
    10d0:	de bf       	out	0x3e, r29	; 62
    10d2:	0f be       	out	0x3f, r0	; 63
    10d4:	cd bf       	out	0x3d, r28	; 61
    10d6:	df 91       	pop	r29
    10d8:	cf 91       	pop	r28
    10da:	08 95       	ret

000010dc <descendRow>:
    10dc:	cf 93       	push	r28
    10de:	df 93       	push	r29
    10e0:	cd b7       	in	r28, 0x3d	; 61
    10e2:	de b7       	in	r29, 0x3e	; 62
    10e4:	28 97       	sbiw	r28, 0x08	; 8
    10e6:	0f b6       	in	r0, 0x3f	; 63
    10e8:	f8 94       	cli
    10ea:	de bf       	out	0x3e, r29	; 62
    10ec:	0f be       	out	0x3f, r0	; 63
    10ee:	cd bf       	out	0x3d, r28	; 61
    10f0:	9e 83       	std	Y+6, r25	; 0x06
    10f2:	8d 83       	std	Y+5, r24	; 0x05
    10f4:	78 87       	std	Y+8, r23	; 0x08
    10f6:	6f 83       	std	Y+7, r22	; 0x07
    10f8:	8f 81       	ldd	r24, Y+7	; 0x07
    10fa:	98 85       	ldd	r25, Y+8	; 0x08
    10fc:	9a 83       	std	Y+2, r25	; 0x02
    10fe:	89 83       	std	Y+1, r24	; 0x01
    1100:	36 c0       	rjmp	.+108    	; 0x116e <descendRow+0x92>
    1102:	1c 82       	std	Y+4, r1	; 0x04
    1104:	1b 82       	std	Y+3, r1	; 0x03
    1106:	2a c0       	rjmp	.+84     	; 0x115c <descendRow+0x80>
    1108:	89 81       	ldd	r24, Y+1	; 0x01
    110a:	9a 81       	ldd	r25, Y+2	; 0x02
    110c:	01 96       	adiw	r24, 0x01	; 1
    110e:	4d 81       	ldd	r20, Y+5	; 0x05
    1110:	5e 81       	ldd	r21, Y+6	; 0x06
    1112:	6b 81       	ldd	r22, Y+3	; 0x03
    1114:	7c 81       	ldd	r23, Y+4	; 0x04
    1116:	e5 e1       	ldi	r30, 0x15	; 21
    1118:	e6 9f       	mul	r30, r22
    111a:	90 01       	movw	r18, r0
    111c:	e7 9f       	mul	r30, r23
    111e:	30 0d       	add	r19, r0
    1120:	11 24       	eor	r1, r1
    1122:	24 0f       	add	r18, r20
    1124:	35 1f       	adc	r19, r21
    1126:	82 0f       	add	r24, r18
    1128:	93 1f       	adc	r25, r19
    112a:	fc 01       	movw	r30, r24
    112c:	60 81       	ld	r22, Z
    112e:	2d 81       	ldd	r18, Y+5	; 0x05
    1130:	3e 81       	ldd	r19, Y+6	; 0x06
    1132:	4b 81       	ldd	r20, Y+3	; 0x03
    1134:	5c 81       	ldd	r21, Y+4	; 0x04
    1136:	75 e1       	ldi	r23, 0x15	; 21
    1138:	74 9f       	mul	r23, r20
    113a:	c0 01       	movw	r24, r0
    113c:	75 9f       	mul	r23, r21
    113e:	90 0d       	add	r25, r0
    1140:	11 24       	eor	r1, r1
    1142:	28 0f       	add	r18, r24
    1144:	39 1f       	adc	r19, r25
    1146:	89 81       	ldd	r24, Y+1	; 0x01
    1148:	9a 81       	ldd	r25, Y+2	; 0x02
    114a:	82 0f       	add	r24, r18
    114c:	93 1f       	adc	r25, r19
    114e:	fc 01       	movw	r30, r24
    1150:	60 83       	st	Z, r22
    1152:	8b 81       	ldd	r24, Y+3	; 0x03
    1154:	9c 81       	ldd	r25, Y+4	; 0x04
    1156:	01 96       	adiw	r24, 0x01	; 1
    1158:	9c 83       	std	Y+4, r25	; 0x04
    115a:	8b 83       	std	Y+3, r24	; 0x03
    115c:	8b 81       	ldd	r24, Y+3	; 0x03
    115e:	9c 81       	ldd	r25, Y+4	; 0x04
    1160:	0c 97       	sbiw	r24, 0x0c	; 12
    1162:	94 f2       	brlt	.-92     	; 0x1108 <descendRow+0x2c>
    1164:	89 81       	ldd	r24, Y+1	; 0x01
    1166:	9a 81       	ldd	r25, Y+2	; 0x02
    1168:	01 96       	adiw	r24, 0x01	; 1
    116a:	9a 83       	std	Y+2, r25	; 0x02
    116c:	89 83       	std	Y+1, r24	; 0x01
    116e:	89 81       	ldd	r24, Y+1	; 0x01
    1170:	9a 81       	ldd	r25, Y+2	; 0x02
    1172:	01 96       	adiw	r24, 0x01	; 1
    1174:	45 97       	sbiw	r24, 0x15	; 21
    1176:	2c f2       	brlt	.-118    	; 0x1102 <descendRow+0x26>
    1178:	8d 81       	ldd	r24, Y+5	; 0x05
    117a:	9e 81       	ldd	r25, Y+6	; 0x06
    117c:	64 e1       	ldi	r22, 0x14	; 20
    117e:	70 e0       	ldi	r23, 0x00	; 0
    1180:	46 df       	rcall	.-372    	; 0x100e <clearRow>
    1182:	00 00       	nop
    1184:	28 96       	adiw	r28, 0x08	; 8
    1186:	0f b6       	in	r0, 0x3f	; 63
    1188:	f8 94       	cli
    118a:	de bf       	out	0x3e, r29	; 62
    118c:	0f be       	out	0x3f, r0	; 63
    118e:	cd bf       	out	0x3d, r28	; 61
    1190:	df 91       	pop	r29
    1192:	cf 91       	pop	r28
    1194:	08 95       	ret

00001196 <rowFull>:
    1196:	cf 93       	push	r28
    1198:	df 93       	push	r29
    119a:	00 d0       	rcall	.+0      	; 0x119c <rowFull+0x6>
    119c:	00 d0       	rcall	.+0      	; 0x119e <rowFull+0x8>
    119e:	00 d0       	rcall	.+0      	; 0x11a0 <rowFull+0xa>
    11a0:	cd b7       	in	r28, 0x3d	; 61
    11a2:	de b7       	in	r29, 0x3e	; 62
    11a4:	9c 83       	std	Y+4, r25	; 0x04
    11a6:	8b 83       	std	Y+3, r24	; 0x03
    11a8:	7e 83       	std	Y+6, r23	; 0x06
    11aa:	6d 83       	std	Y+5, r22	; 0x05
    11ac:	1a 82       	std	Y+2, r1	; 0x02
    11ae:	19 82       	std	Y+1, r1	; 0x01
    11b0:	1b c0       	rjmp	.+54     	; 0x11e8 <rowFull+0x52>
    11b2:	2b 81       	ldd	r18, Y+3	; 0x03
    11b4:	3c 81       	ldd	r19, Y+4	; 0x04
    11b6:	49 81       	ldd	r20, Y+1	; 0x01
    11b8:	5a 81       	ldd	r21, Y+2	; 0x02
    11ba:	65 e1       	ldi	r22, 0x15	; 21
    11bc:	64 9f       	mul	r22, r20
    11be:	c0 01       	movw	r24, r0
    11c0:	65 9f       	mul	r22, r21
    11c2:	90 0d       	add	r25, r0
    11c4:	11 24       	eor	r1, r1
    11c6:	28 0f       	add	r18, r24
    11c8:	39 1f       	adc	r19, r25
    11ca:	8d 81       	ldd	r24, Y+5	; 0x05
    11cc:	9e 81       	ldd	r25, Y+6	; 0x06
    11ce:	82 0f       	add	r24, r18
    11d0:	93 1f       	adc	r25, r19
    11d2:	fc 01       	movw	r30, r24
    11d4:	80 81       	ld	r24, Z
    11d6:	88 23       	and	r24, r24
    11d8:	11 f4       	brne	.+4      	; 0x11de <rowFull+0x48>
    11da:	80 e0       	ldi	r24, 0x00	; 0
    11dc:	0a c0       	rjmp	.+20     	; 0x11f2 <rowFull+0x5c>
    11de:	89 81       	ldd	r24, Y+1	; 0x01
    11e0:	9a 81       	ldd	r25, Y+2	; 0x02
    11e2:	01 96       	adiw	r24, 0x01	; 1
    11e4:	9a 83       	std	Y+2, r25	; 0x02
    11e6:	89 83       	std	Y+1, r24	; 0x01
    11e8:	89 81       	ldd	r24, Y+1	; 0x01
    11ea:	9a 81       	ldd	r25, Y+2	; 0x02
    11ec:	0c 97       	sbiw	r24, 0x0c	; 12
    11ee:	0c f3       	brlt	.-62     	; 0x11b2 <rowFull+0x1c>
    11f0:	81 e0       	ldi	r24, 0x01	; 1
    11f2:	26 96       	adiw	r28, 0x06	; 6
    11f4:	0f b6       	in	r0, 0x3f	; 63
    11f6:	f8 94       	cli
    11f8:	de bf       	out	0x3e, r29	; 62
    11fa:	0f be       	out	0x3f, r0	; 63
    11fc:	cd bf       	out	0x3d, r28	; 61
    11fe:	df 91       	pop	r29
    1200:	cf 91       	pop	r28
    1202:	08 95       	ret

00001204 <inBoundsPoint>:
    1204:	cf 93       	push	r28
    1206:	df 93       	push	r29
    1208:	00 d0       	rcall	.+0      	; 0x120a <inBoundsPoint+0x6>
    120a:	00 d0       	rcall	.+0      	; 0x120c <inBoundsPoint+0x8>
    120c:	cd b7       	in	r28, 0x3d	; 61
    120e:	de b7       	in	r29, 0x3e	; 62
    1210:	9a 83       	std	Y+2, r25	; 0x02
    1212:	89 83       	std	Y+1, r24	; 0x01
    1214:	7c 83       	std	Y+4, r23	; 0x04
    1216:	6b 83       	std	Y+3, r22	; 0x03
    1218:	8b 81       	ldd	r24, Y+3	; 0x03
    121a:	9c 81       	ldd	r25, Y+4	; 0x04
    121c:	fc 01       	movw	r30, r24
    121e:	80 81       	ld	r24, Z
    1220:	91 81       	ldd	r25, Z+1	; 0x01
    1222:	99 23       	and	r25, r25
    1224:	c4 f0       	brlt	.+48     	; 0x1256 <inBoundsPoint+0x52>
    1226:	8b 81       	ldd	r24, Y+3	; 0x03
    1228:	9c 81       	ldd	r25, Y+4	; 0x04
    122a:	fc 01       	movw	r30, r24
    122c:	80 81       	ld	r24, Z
    122e:	91 81       	ldd	r25, Z+1	; 0x01
    1230:	0c 97       	sbiw	r24, 0x0c	; 12
    1232:	8c f4       	brge	.+34     	; 0x1256 <inBoundsPoint+0x52>
    1234:	8b 81       	ldd	r24, Y+3	; 0x03
    1236:	9c 81       	ldd	r25, Y+4	; 0x04
    1238:	fc 01       	movw	r30, r24
    123a:	82 81       	ldd	r24, Z+2	; 0x02
    123c:	93 81       	ldd	r25, Z+3	; 0x03
    123e:	99 23       	and	r25, r25
    1240:	54 f0       	brlt	.+20     	; 0x1256 <inBoundsPoint+0x52>
    1242:	8b 81       	ldd	r24, Y+3	; 0x03
    1244:	9c 81       	ldd	r25, Y+4	; 0x04
    1246:	fc 01       	movw	r30, r24
    1248:	82 81       	ldd	r24, Z+2	; 0x02
    124a:	93 81       	ldd	r25, Z+3	; 0x03
    124c:	45 97       	sbiw	r24, 0x15	; 21
    124e:	1c f4       	brge	.+6      	; 0x1256 <inBoundsPoint+0x52>
    1250:	81 e0       	ldi	r24, 0x01	; 1
    1252:	90 e0       	ldi	r25, 0x00	; 0
    1254:	02 c0       	rjmp	.+4      	; 0x125a <inBoundsPoint+0x56>
    1256:	80 e0       	ldi	r24, 0x00	; 0
    1258:	90 e0       	ldi	r25, 0x00	; 0
    125a:	0f 90       	pop	r0
    125c:	0f 90       	pop	r0
    125e:	0f 90       	pop	r0
    1260:	0f 90       	pop	r0
    1262:	df 91       	pop	r29
    1264:	cf 91       	pop	r28
    1266:	08 95       	ret

00001268 <inBoundsOpen>:
    1268:	cf 93       	push	r28
    126a:	df 93       	push	r29
    126c:	cd b7       	in	r28, 0x3d	; 61
    126e:	de b7       	in	r29, 0x3e	; 62
    1270:	2a 97       	sbiw	r28, 0x0a	; 10
    1272:	0f b6       	in	r0, 0x3f	; 63
    1274:	f8 94       	cli
    1276:	de bf       	out	0x3e, r29	; 62
    1278:	0f be       	out	0x3f, r0	; 63
    127a:	cd bf       	out	0x3d, r28	; 61
    127c:	98 87       	std	Y+8, r25	; 0x08
    127e:	8f 83       	std	Y+7, r24	; 0x07
    1280:	7a 87       	std	Y+10, r23	; 0x0a
    1282:	69 87       	std	Y+9, r22	; 0x09
    1284:	1a 82       	std	Y+2, r1	; 0x02
    1286:	19 82       	std	Y+1, r1	; 0x01
    1288:	25 c0       	rjmp	.+74     	; 0x12d4 <inBoundsOpen+0x6c>
    128a:	29 81       	ldd	r18, Y+1	; 0x01
    128c:	3a 81       	ldd	r19, Y+2	; 0x02
    128e:	89 85       	ldd	r24, Y+9	; 0x09
    1290:	9a 85       	ldd	r25, Y+10	; 0x0a
    1292:	b9 01       	movw	r22, r18
    1294:	df dc       	rcall	.-1602   	; 0xc54 <getTile>
    1296:	dc 01       	movw	r26, r24
    1298:	cb 01       	movw	r24, r22
    129a:	8b 83       	std	Y+3, r24	; 0x03
    129c:	9c 83       	std	Y+4, r25	; 0x04
    129e:	ad 83       	std	Y+5, r26	; 0x05
    12a0:	be 83       	std	Y+6, r27	; 0x06
    12a2:	9e 01       	movw	r18, r28
    12a4:	2d 5f       	subi	r18, 0xFD	; 253
    12a6:	3f 4f       	sbci	r19, 0xFF	; 255
    12a8:	8f 81       	ldd	r24, Y+7	; 0x07
    12aa:	98 85       	ldd	r25, Y+8	; 0x08
    12ac:	b9 01       	movw	r22, r18
    12ae:	aa df       	rcall	.-172    	; 0x1204 <inBoundsPoint>
    12b0:	88 23       	and	r24, r24
    12b2:	49 f0       	breq	.+18     	; 0x12c6 <inBoundsOpen+0x5e>
    12b4:	9e 01       	movw	r18, r28
    12b6:	2d 5f       	subi	r18, 0xFD	; 253
    12b8:	3f 4f       	sbci	r19, 0xFF	; 255
    12ba:	8f 81       	ldd	r24, Y+7	; 0x07
    12bc:	98 85       	ldd	r25, Y+8	; 0x08
    12be:	b9 01       	movw	r22, r18
    12c0:	7d de       	rcall	.-774    	; 0xfbc <getPoint>
    12c2:	88 23       	and	r24, r24
    12c4:	11 f0       	breq	.+4      	; 0x12ca <inBoundsOpen+0x62>
    12c6:	80 e0       	ldi	r24, 0x00	; 0
    12c8:	0a c0       	rjmp	.+20     	; 0x12de <inBoundsOpen+0x76>
    12ca:	89 81       	ldd	r24, Y+1	; 0x01
    12cc:	9a 81       	ldd	r25, Y+2	; 0x02
    12ce:	01 96       	adiw	r24, 0x01	; 1
    12d0:	9a 83       	std	Y+2, r25	; 0x02
    12d2:	89 83       	std	Y+1, r24	; 0x01
    12d4:	89 81       	ldd	r24, Y+1	; 0x01
    12d6:	9a 81       	ldd	r25, Y+2	; 0x02
    12d8:	04 97       	sbiw	r24, 0x04	; 4
    12da:	b8 f2       	brcs	.-82     	; 0x128a <inBoundsOpen+0x22>
    12dc:	81 e0       	ldi	r24, 0x01	; 1
    12de:	2a 96       	adiw	r28, 0x0a	; 10
    12e0:	0f b6       	in	r0, 0x3f	; 63
    12e2:	f8 94       	cli
    12e4:	de bf       	out	0x3e, r29	; 62
    12e6:	0f be       	out	0x3f, r0	; 63
    12e8:	cd bf       	out	0x3d, r28	; 61
    12ea:	df 91       	pop	r29
    12ec:	cf 91       	pop	r28
    12ee:	08 95       	ret

000012f0 <land>:
    12f0:	cf 93       	push	r28
    12f2:	df 93       	push	r29
    12f4:	cd b7       	in	r28, 0x3d	; 61
    12f6:	de b7       	in	r29, 0x3e	; 62
    12f8:	2a 97       	sbiw	r28, 0x0a	; 10
    12fa:	0f b6       	in	r0, 0x3f	; 63
    12fc:	f8 94       	cli
    12fe:	de bf       	out	0x3e, r29	; 62
    1300:	0f be       	out	0x3f, r0	; 63
    1302:	cd bf       	out	0x3d, r28	; 61
    1304:	98 87       	std	Y+8, r25	; 0x08
    1306:	8f 83       	std	Y+7, r24	; 0x07
    1308:	7a 87       	std	Y+10, r23	; 0x0a
    130a:	69 87       	std	Y+9, r22	; 0x09
    130c:	1a 82       	std	Y+2, r1	; 0x02
    130e:	19 82       	std	Y+1, r1	; 0x01
    1310:	31 c0       	rjmp	.+98     	; 0x1374 <land+0x84>
    1312:	29 81       	ldd	r18, Y+1	; 0x01
    1314:	3a 81       	ldd	r19, Y+2	; 0x02
    1316:	89 85       	ldd	r24, Y+9	; 0x09
    1318:	9a 85       	ldd	r25, Y+10	; 0x0a
    131a:	b9 01       	movw	r22, r18
    131c:	9b dc       	rcall	.-1738   	; 0xc54 <getTile>
    131e:	dc 01       	movw	r26, r24
    1320:	cb 01       	movw	r24, r22
    1322:	8b 83       	std	Y+3, r24	; 0x03
    1324:	9c 83       	std	Y+4, r25	; 0x04
    1326:	ad 83       	std	Y+5, r26	; 0x05
    1328:	be 83       	std	Y+6, r27	; 0x06
    132a:	8d 81       	ldd	r24, Y+5	; 0x05
    132c:	9e 81       	ldd	r25, Y+6	; 0x06
    132e:	18 16       	cp	r1, r24
    1330:	19 06       	cpc	r1, r25
    1332:	14 f0       	brlt	.+4      	; 0x1338 <land+0x48>
    1334:	81 e0       	ldi	r24, 0x01	; 1
    1336:	23 c0       	rjmp	.+70     	; 0x137e <land+0x8e>
    1338:	8d 81       	ldd	r24, Y+5	; 0x05
    133a:	9e 81       	ldd	r25, Y+6	; 0x06
    133c:	01 97       	sbiw	r24, 0x01	; 1
    133e:	9e 83       	std	Y+6, r25	; 0x06
    1340:	8d 83       	std	Y+5, r24	; 0x05
    1342:	9e 01       	movw	r18, r28
    1344:	2d 5f       	subi	r18, 0xFD	; 253
    1346:	3f 4f       	sbci	r19, 0xFF	; 255
    1348:	8f 81       	ldd	r24, Y+7	; 0x07
    134a:	98 85       	ldd	r25, Y+8	; 0x08
    134c:	b9 01       	movw	r22, r18
    134e:	5a df       	rcall	.-332    	; 0x1204 <inBoundsPoint>
    1350:	88 23       	and	r24, r24
    1352:	59 f0       	breq	.+22     	; 0x136a <land+0x7a>
    1354:	9e 01       	movw	r18, r28
    1356:	2d 5f       	subi	r18, 0xFD	; 253
    1358:	3f 4f       	sbci	r19, 0xFF	; 255
    135a:	8f 81       	ldd	r24, Y+7	; 0x07
    135c:	98 85       	ldd	r25, Y+8	; 0x08
    135e:	b9 01       	movw	r22, r18
    1360:	2d de       	rcall	.-934    	; 0xfbc <getPoint>
    1362:	88 23       	and	r24, r24
    1364:	11 f0       	breq	.+4      	; 0x136a <land+0x7a>
    1366:	81 e0       	ldi	r24, 0x01	; 1
    1368:	0a c0       	rjmp	.+20     	; 0x137e <land+0x8e>
    136a:	89 81       	ldd	r24, Y+1	; 0x01
    136c:	9a 81       	ldd	r25, Y+2	; 0x02
    136e:	01 96       	adiw	r24, 0x01	; 1
    1370:	9a 83       	std	Y+2, r25	; 0x02
    1372:	89 83       	std	Y+1, r24	; 0x01
    1374:	89 81       	ldd	r24, Y+1	; 0x01
    1376:	9a 81       	ldd	r25, Y+2	; 0x02
    1378:	04 97       	sbiw	r24, 0x04	; 4
    137a:	58 f2       	brcs	.-106    	; 0x1312 <land+0x22>
    137c:	80 e0       	ldi	r24, 0x00	; 0
    137e:	2a 96       	adiw	r28, 0x0a	; 10
    1380:	0f b6       	in	r0, 0x3f	; 63
    1382:	f8 94       	cli
    1384:	de bf       	out	0x3e, r29	; 62
    1386:	0f be       	out	0x3f, r0	; 63
    1388:	cd bf       	out	0x3d, r28	; 61
    138a:	df 91       	pop	r29
    138c:	cf 91       	pop	r28
    138e:	08 95       	ret

00001390 <tryMirror>:
    1390:	cf 93       	push	r28
    1392:	df 93       	push	r29
    1394:	00 d0       	rcall	.+0      	; 0x1396 <tryMirror+0x6>
    1396:	00 d0       	rcall	.+0      	; 0x1398 <tryMirror+0x8>
    1398:	cd b7       	in	r28, 0x3d	; 61
    139a:	de b7       	in	r29, 0x3e	; 62
    139c:	9a 83       	std	Y+2, r25	; 0x02
    139e:	89 83       	std	Y+1, r24	; 0x01
    13a0:	7c 83       	std	Y+4, r23	; 0x04
    13a2:	6b 83       	std	Y+3, r22	; 0x03
    13a4:	8b 81       	ldd	r24, Y+3	; 0x03
    13a6:	9c 81       	ldd	r25, Y+4	; 0x04
    13a8:	c4 dc       	rcall	.-1656   	; 0xd32 <mirror>
    13aa:	2b 81       	ldd	r18, Y+3	; 0x03
    13ac:	3c 81       	ldd	r19, Y+4	; 0x04
    13ae:	89 81       	ldd	r24, Y+1	; 0x01
    13b0:	9a 81       	ldd	r25, Y+2	; 0x02
    13b2:	b9 01       	movw	r22, r18
    13b4:	59 df       	rcall	.-334    	; 0x1268 <inBoundsOpen>
    13b6:	88 23       	and	r24, r24
    13b8:	21 f4       	brne	.+8      	; 0x13c2 <tryMirror+0x32>
    13ba:	8b 81       	ldd	r24, Y+3	; 0x03
    13bc:	9c 81       	ldd	r25, Y+4	; 0x04
    13be:	b9 dc       	rcall	.-1678   	; 0xd32 <mirror>
    13c0:	01 c0       	rjmp	.+2      	; 0x13c4 <tryMirror+0x34>
    13c2:	00 00       	nop
    13c4:	0f 90       	pop	r0
    13c6:	0f 90       	pop	r0
    13c8:	0f 90       	pop	r0
    13ca:	0f 90       	pop	r0
    13cc:	df 91       	pop	r29
    13ce:	cf 91       	pop	r28
    13d0:	08 95       	ret

000013d2 <tryTurnCCW>:
    13d2:	cf 93       	push	r28
    13d4:	df 93       	push	r29
    13d6:	00 d0       	rcall	.+0      	; 0x13d8 <tryTurnCCW+0x6>
    13d8:	00 d0       	rcall	.+0      	; 0x13da <tryTurnCCW+0x8>
    13da:	cd b7       	in	r28, 0x3d	; 61
    13dc:	de b7       	in	r29, 0x3e	; 62
    13de:	9a 83       	std	Y+2, r25	; 0x02
    13e0:	89 83       	std	Y+1, r24	; 0x01
    13e2:	7c 83       	std	Y+4, r23	; 0x04
    13e4:	6b 83       	std	Y+3, r22	; 0x03
    13e6:	8b 81       	ldd	r24, Y+3	; 0x03
    13e8:	9c 81       	ldd	r25, Y+4	; 0x04
    13ea:	df dc       	rcall	.-1602   	; 0xdaa <turnCCW>
    13ec:	2b 81       	ldd	r18, Y+3	; 0x03
    13ee:	3c 81       	ldd	r19, Y+4	; 0x04
    13f0:	89 81       	ldd	r24, Y+1	; 0x01
    13f2:	9a 81       	ldd	r25, Y+2	; 0x02
    13f4:	b9 01       	movw	r22, r18
    13f6:	38 df       	rcall	.-400    	; 0x1268 <inBoundsOpen>
    13f8:	88 23       	and	r24, r24
    13fa:	21 f4       	brne	.+8      	; 0x1404 <tryTurnCCW+0x32>
    13fc:	8b 81       	ldd	r24, Y+3	; 0x03
    13fe:	9c 81       	ldd	r25, Y+4	; 0x04
    1400:	fc dc       	rcall	.-1544   	; 0xdfa <turnCW>
    1402:	01 c0       	rjmp	.+2      	; 0x1406 <tryTurnCCW+0x34>
    1404:	00 00       	nop
    1406:	0f 90       	pop	r0
    1408:	0f 90       	pop	r0
    140a:	0f 90       	pop	r0
    140c:	0f 90       	pop	r0
    140e:	df 91       	pop	r29
    1410:	cf 91       	pop	r28
    1412:	08 95       	ret

00001414 <tryTurnCW>:
    1414:	cf 93       	push	r28
    1416:	df 93       	push	r29
    1418:	00 d0       	rcall	.+0      	; 0x141a <tryTurnCW+0x6>
    141a:	00 d0       	rcall	.+0      	; 0x141c <tryTurnCW+0x8>
    141c:	cd b7       	in	r28, 0x3d	; 61
    141e:	de b7       	in	r29, 0x3e	; 62
    1420:	9a 83       	std	Y+2, r25	; 0x02
    1422:	89 83       	std	Y+1, r24	; 0x01
    1424:	7c 83       	std	Y+4, r23	; 0x04
    1426:	6b 83       	std	Y+3, r22	; 0x03
    1428:	8b 81       	ldd	r24, Y+3	; 0x03
    142a:	9c 81       	ldd	r25, Y+4	; 0x04
    142c:	e6 dc       	rcall	.-1588   	; 0xdfa <turnCW>
    142e:	2b 81       	ldd	r18, Y+3	; 0x03
    1430:	3c 81       	ldd	r19, Y+4	; 0x04
    1432:	89 81       	ldd	r24, Y+1	; 0x01
    1434:	9a 81       	ldd	r25, Y+2	; 0x02
    1436:	b9 01       	movw	r22, r18
    1438:	17 df       	rcall	.-466    	; 0x1268 <inBoundsOpen>
    143a:	88 23       	and	r24, r24
    143c:	21 f4       	brne	.+8      	; 0x1446 <tryTurnCW+0x32>
    143e:	8b 81       	ldd	r24, Y+3	; 0x03
    1440:	9c 81       	ldd	r25, Y+4	; 0x04
    1442:	b3 dc       	rcall	.-1690   	; 0xdaa <turnCCW>
    1444:	01 c0       	rjmp	.+2      	; 0x1448 <tryTurnCW+0x34>
    1446:	00 00       	nop
    1448:	0f 90       	pop	r0
    144a:	0f 90       	pop	r0
    144c:	0f 90       	pop	r0
    144e:	0f 90       	pop	r0
    1450:	df 91       	pop	r29
    1452:	cf 91       	pop	r28
    1454:	08 95       	ret

00001456 <tryShiftRight>:
    1456:	cf 93       	push	r28
    1458:	df 93       	push	r29
    145a:	00 d0       	rcall	.+0      	; 0x145c <tryShiftRight+0x6>
    145c:	00 d0       	rcall	.+0      	; 0x145e <tryShiftRight+0x8>
    145e:	cd b7       	in	r28, 0x3d	; 61
    1460:	de b7       	in	r29, 0x3e	; 62
    1462:	9a 83       	std	Y+2, r25	; 0x02
    1464:	89 83       	std	Y+1, r24	; 0x01
    1466:	7c 83       	std	Y+4, r23	; 0x04
    1468:	6b 83       	std	Y+3, r22	; 0x03
    146a:	8b 81       	ldd	r24, Y+3	; 0x03
    146c:	9c 81       	ldd	r25, Y+4	; 0x04
    146e:	2f dc       	rcall	.-1954   	; 0xcce <right>
    1470:	2b 81       	ldd	r18, Y+3	; 0x03
    1472:	3c 81       	ldd	r19, Y+4	; 0x04
    1474:	89 81       	ldd	r24, Y+1	; 0x01
    1476:	9a 81       	ldd	r25, Y+2	; 0x02
    1478:	b9 01       	movw	r22, r18
    147a:	f6 de       	rcall	.-532    	; 0x1268 <inBoundsOpen>
    147c:	88 23       	and	r24, r24
    147e:	21 f4       	brne	.+8      	; 0x1488 <tryShiftRight+0x32>
    1480:	8b 81       	ldd	r24, Y+3	; 0x03
    1482:	9c 81       	ldd	r25, Y+4	; 0x04
    1484:	3d dc       	rcall	.-1926   	; 0xd00 <left>
    1486:	01 c0       	rjmp	.+2      	; 0x148a <tryShiftRight+0x34>
    1488:	00 00       	nop
    148a:	0f 90       	pop	r0
    148c:	0f 90       	pop	r0
    148e:	0f 90       	pop	r0
    1490:	0f 90       	pop	r0
    1492:	df 91       	pop	r29
    1494:	cf 91       	pop	r28
    1496:	08 95       	ret

00001498 <tryShiftLeft>:
    1498:	cf 93       	push	r28
    149a:	df 93       	push	r29
    149c:	00 d0       	rcall	.+0      	; 0x149e <tryShiftLeft+0x6>
    149e:	00 d0       	rcall	.+0      	; 0x14a0 <tryShiftLeft+0x8>
    14a0:	cd b7       	in	r28, 0x3d	; 61
    14a2:	de b7       	in	r29, 0x3e	; 62
    14a4:	9a 83       	std	Y+2, r25	; 0x02
    14a6:	89 83       	std	Y+1, r24	; 0x01
    14a8:	7c 83       	std	Y+4, r23	; 0x04
    14aa:	6b 83       	std	Y+3, r22	; 0x03
    14ac:	8b 81       	ldd	r24, Y+3	; 0x03
    14ae:	9c 81       	ldd	r25, Y+4	; 0x04
    14b0:	27 dc       	rcall	.-1970   	; 0xd00 <left>
    14b2:	2b 81       	ldd	r18, Y+3	; 0x03
    14b4:	3c 81       	ldd	r19, Y+4	; 0x04
    14b6:	89 81       	ldd	r24, Y+1	; 0x01
    14b8:	9a 81       	ldd	r25, Y+2	; 0x02
    14ba:	b9 01       	movw	r22, r18
    14bc:	d5 de       	rcall	.-598    	; 0x1268 <inBoundsOpen>
    14be:	88 23       	and	r24, r24
    14c0:	21 f4       	brne	.+8      	; 0x14ca <tryShiftLeft+0x32>
    14c2:	8b 81       	ldd	r24, Y+3	; 0x03
    14c4:	9c 81       	ldd	r25, Y+4	; 0x04
    14c6:	03 dc       	rcall	.-2042   	; 0xcce <right>
    14c8:	01 c0       	rjmp	.+2      	; 0x14cc <tryShiftLeft+0x34>
    14ca:	00 00       	nop
    14cc:	0f 90       	pop	r0
    14ce:	0f 90       	pop	r0
    14d0:	0f 90       	pop	r0
    14d2:	0f 90       	pop	r0
    14d4:	df 91       	pop	r29
    14d6:	cf 91       	pop	r28
    14d8:	08 95       	ret

000014da <place>:
    14da:	cf 93       	push	r28
    14dc:	df 93       	push	r29
    14de:	cd b7       	in	r28, 0x3d	; 61
    14e0:	de b7       	in	r29, 0x3e	; 62
    14e2:	2a 97       	sbiw	r28, 0x0a	; 10
    14e4:	0f b6       	in	r0, 0x3f	; 63
    14e6:	f8 94       	cli
    14e8:	de bf       	out	0x3e, r29	; 62
    14ea:	0f be       	out	0x3f, r0	; 63
    14ec:	cd bf       	out	0x3d, r28	; 61
    14ee:	98 87       	std	Y+8, r25	; 0x08
    14f0:	8f 83       	std	Y+7, r24	; 0x07
    14f2:	7a 87       	std	Y+10, r23	; 0x0a
    14f4:	69 87       	std	Y+9, r22	; 0x09
    14f6:	1a 82       	std	Y+2, r1	; 0x02
    14f8:	19 82       	std	Y+1, r1	; 0x01
    14fa:	2d c0       	rjmp	.+90     	; 0x1556 <place+0x7c>
    14fc:	29 81       	ldd	r18, Y+1	; 0x01
    14fe:	3a 81       	ldd	r19, Y+2	; 0x02
    1500:	89 85       	ldd	r24, Y+9	; 0x09
    1502:	9a 85       	ldd	r25, Y+10	; 0x0a
    1504:	b9 01       	movw	r22, r18
    1506:	a6 db       	rcall	.-2228   	; 0xc54 <getTile>
    1508:	dc 01       	movw	r26, r24
    150a:	cb 01       	movw	r24, r22
    150c:	8b 83       	std	Y+3, r24	; 0x03
    150e:	9c 83       	std	Y+4, r25	; 0x04
    1510:	ad 83       	std	Y+5, r26	; 0x05
    1512:	be 83       	std	Y+6, r27	; 0x06
    1514:	9e 01       	movw	r18, r28
    1516:	2d 5f       	subi	r18, 0xFD	; 253
    1518:	3f 4f       	sbci	r19, 0xFF	; 255
    151a:	8f 81       	ldd	r24, Y+7	; 0x07
    151c:	98 85       	ldd	r25, Y+8	; 0x08
    151e:	b9 01       	movw	r22, r18
    1520:	71 de       	rcall	.-798    	; 0x1204 <inBoundsPoint>
    1522:	88 23       	and	r24, r24
    1524:	99 f0       	breq	.+38     	; 0x154c <place+0x72>
    1526:	6b 81       	ldd	r22, Y+3	; 0x03
    1528:	7c 81       	ldd	r23, Y+4	; 0x04
    152a:	8d 81       	ldd	r24, Y+5	; 0x05
    152c:	9e 81       	ldd	r25, Y+6	; 0x06
    152e:	4f 81       	ldd	r20, Y+7	; 0x07
    1530:	58 85       	ldd	r21, Y+8	; 0x08
    1532:	e5 e1       	ldi	r30, 0x15	; 21
    1534:	e6 9f       	mul	r30, r22
    1536:	90 01       	movw	r18, r0
    1538:	e7 9f       	mul	r30, r23
    153a:	30 0d       	add	r19, r0
    153c:	11 24       	eor	r1, r1
    153e:	24 0f       	add	r18, r20
    1540:	35 1f       	adc	r19, r21
    1542:	82 0f       	add	r24, r18
    1544:	93 1f       	adc	r25, r19
    1546:	21 e0       	ldi	r18, 0x01	; 1
    1548:	fc 01       	movw	r30, r24
    154a:	20 83       	st	Z, r18
    154c:	89 81       	ldd	r24, Y+1	; 0x01
    154e:	9a 81       	ldd	r25, Y+2	; 0x02
    1550:	01 96       	adiw	r24, 0x01	; 1
    1552:	9a 83       	std	Y+2, r25	; 0x02
    1554:	89 83       	std	Y+1, r24	; 0x01
    1556:	89 81       	ldd	r24, Y+1	; 0x01
    1558:	9a 81       	ldd	r25, Y+2	; 0x02
    155a:	04 97       	sbiw	r24, 0x04	; 4
    155c:	78 f2       	brcs	.-98     	; 0x14fc <place+0x22>
    155e:	00 00       	nop
    1560:	2a 96       	adiw	r28, 0x0a	; 10
    1562:	0f b6       	in	r0, 0x3f	; 63
    1564:	f8 94       	cli
    1566:	de bf       	out	0x3e, r29	; 62
    1568:	0f be       	out	0x3f, r0	; 63
    156a:	cd bf       	out	0x3d, r28	; 61
    156c:	df 91       	pop	r29
    156e:	cf 91       	pop	r28
    1570:	08 95       	ret

00001572 <setScreenState>:
unsigned char score;
typedef enum ScreenState { Title, Game, FinalScore } ScreenState;
typedef enum GameState { Init, Play, PlayInterval, RowClear, GameOver, GameOverFlash } GameState;
ScreenState screenState;
void setScreenState(ScreenState next) {
    1572:	cf 93       	push	r28
    1574:	df 93       	push	r29
    1576:	00 d0       	rcall	.+0      	; 0x1578 <setScreenState+0x6>
    1578:	1f 92       	push	r1
    157a:	cd b7       	in	r28, 0x3d	; 61
    157c:	de b7       	in	r29, 0x3e	; 62
    157e:	8b 83       	std	Y+3, r24	; 0x03
	screenState = next;
    1580:	8b 81       	ldd	r24, Y+3	; 0x03
    1582:	80 93 22 04 	sts	0x0422, r24	; 0x800422 <screenState>
	unsigned int a = 0;
    1586:	1a 82       	std	Y+2, r1	; 0x02
    1588:	19 82       	std	Y+1, r1	; 0x01
	switch(next) {
    158a:	8b 81       	ldd	r24, Y+3	; 0x03
    158c:	88 2f       	mov	r24, r24
    158e:	90 e0       	ldi	r25, 0x00	; 0
    1590:	81 30       	cpi	r24, 0x01	; 1
    1592:	91 05       	cpc	r25, r1
    1594:	61 f0       	breq	.+24     	; 0x15ae <setScreenState+0x3c>
    1596:	82 30       	cpi	r24, 0x02	; 2
    1598:	91 05       	cpc	r25, r1
    159a:	61 f0       	breq	.+24     	; 0x15b4 <setScreenState+0x42>
    159c:	89 2b       	or	r24, r25
    159e:	09 f0       	breq	.+2      	; 0x15a2 <setScreenState+0x30>
				store(0, score);
			}
			break;
	}

};
    15a0:	17 c0       	rjmp	.+46     	; 0x15d0 <setScreenState+0x5e>
void setScreenState(ScreenState next) {
	screenState = next;
	unsigned int a = 0;
	switch(next) {
		case Title:
			score = load(a);
    15a2:	89 81       	ldd	r24, Y+1	; 0x01
    15a4:	9a 81       	ldd	r25, Y+2	; 0x02
    15a6:	50 d9       	rcall	.-3424   	; 0x848 <load>
    15a8:	80 93 23 04 	sts	0x0423, r24	; 0x800423 <score>
			break;
    15ac:	11 c0       	rjmp	.+34     	; 0x15d0 <setScreenState+0x5e>
		case Game:
			screenState = Init;
    15ae:	10 92 22 04 	sts	0x0422, r1	; 0x800422 <screenState>
			break;
    15b2:	0e c0       	rjmp	.+28     	; 0x15d0 <setScreenState+0x5e>
		case FinalScore:
			if(score > load(a)) {
    15b4:	89 81       	ldd	r24, Y+1	; 0x01
    15b6:	9a 81       	ldd	r25, Y+2	; 0x02
    15b8:	47 d9       	rcall	.-3442   	; 0x848 <load>
    15ba:	98 2f       	mov	r25, r24
    15bc:	80 91 23 04 	lds	r24, 0x0423	; 0x800423 <score>
    15c0:	98 17       	cp	r25, r24
    15c2:	28 f4       	brcc	.+10     	; 0x15ce <setScreenState+0x5c>
				store(0, score);
    15c4:	80 91 23 04 	lds	r24, 0x0423	; 0x800423 <score>
    15c8:	68 2f       	mov	r22, r24
    15ca:	80 e0       	ldi	r24, 0x00	; 0
    15cc:	fd d8       	rcall	.-3590   	; 0x7c8 <store>
			}
			break;
    15ce:	00 00       	nop
	}

};
    15d0:	00 00       	nop
    15d2:	0f 90       	pop	r0
    15d4:	0f 90       	pop	r0
    15d6:	0f 90       	pop	r0
    15d8:	df 91       	pop	r29
    15da:	cf 91       	pop	r28
    15dc:	08 95       	ret

000015de <drawTile>:
//Draws a world tile as a 4x4 block on a vertical screen
void drawTile(short x, short y, short fill) {
    15de:	cf 93       	push	r28
    15e0:	df 93       	push	r29
    15e2:	cd b7       	in	r28, 0x3d	; 61
    15e4:	de b7       	in	r29, 0x3e	; 62
    15e6:	2a 97       	sbiw	r28, 0x0a	; 10
    15e8:	0f b6       	in	r0, 0x3f	; 63
    15ea:	f8 94       	cli
    15ec:	de bf       	out	0x3e, r29	; 62
    15ee:	0f be       	out	0x3f, r0	; 63
    15f0:	cd bf       	out	0x3d, r28	; 61
    15f2:	9e 83       	std	Y+6, r25	; 0x06
    15f4:	8d 83       	std	Y+5, r24	; 0x05
    15f6:	78 87       	std	Y+8, r23	; 0x08
    15f8:	6f 83       	std	Y+7, r22	; 0x07
    15fa:	5a 87       	std	Y+10, r21	; 0x0a
    15fc:	49 87       	std	Y+9, r20	; 0x09
	for(short xi = 0; xi < 4; xi++) {
    15fe:	1a 82       	std	Y+2, r1	; 0x02
    1600:	19 82       	std	Y+1, r1	; 0x01
    1602:	23 c0       	rjmp	.+70     	; 0x164a <drawTile+0x6c>
		for(short yi = 0; yi < 4; yi++) {
    1604:	1c 82       	std	Y+4, r1	; 0x04
    1606:	1b 82       	std	Y+3, r1	; 0x03
    1608:	17 c0       	rjmp	.+46     	; 0x1638 <drawTile+0x5a>
			nokia_lcd_set_pixel(y*4 + yi, x*4 + xi, fill);
    160a:	39 85       	ldd	r19, Y+9	; 0x09
    160c:	8d 81       	ldd	r24, Y+5	; 0x05
    160e:	98 2f       	mov	r25, r24
    1610:	99 0f       	add	r25, r25
    1612:	99 0f       	add	r25, r25
    1614:	89 81       	ldd	r24, Y+1	; 0x01
    1616:	29 2f       	mov	r18, r25
    1618:	28 0f       	add	r18, r24
    161a:	8f 81       	ldd	r24, Y+7	; 0x07
    161c:	98 2f       	mov	r25, r24
    161e:	99 0f       	add	r25, r25
    1620:	99 0f       	add	r25, r25
    1622:	8b 81       	ldd	r24, Y+3	; 0x03
    1624:	89 0f       	add	r24, r25
    1626:	43 2f       	mov	r20, r19
    1628:	62 2f       	mov	r22, r18
    162a:	0e 94 97 02 	call	0x52e	; 0x52e <nokia_lcd_set_pixel>

};
//Draws a world tile as a 4x4 block on a vertical screen
void drawTile(short x, short y, short fill) {
	for(short xi = 0; xi < 4; xi++) {
		for(short yi = 0; yi < 4; yi++) {
    162e:	8b 81       	ldd	r24, Y+3	; 0x03
    1630:	9c 81       	ldd	r25, Y+4	; 0x04
    1632:	01 96       	adiw	r24, 0x01	; 1
    1634:	9c 83       	std	Y+4, r25	; 0x04
    1636:	8b 83       	std	Y+3, r24	; 0x03
    1638:	8b 81       	ldd	r24, Y+3	; 0x03
    163a:	9c 81       	ldd	r25, Y+4	; 0x04
    163c:	04 97       	sbiw	r24, 0x04	; 4
    163e:	2c f3       	brlt	.-54     	; 0x160a <drawTile+0x2c>
	}

};
//Draws a world tile as a 4x4 block on a vertical screen
void drawTile(short x, short y, short fill) {
	for(short xi = 0; xi < 4; xi++) {
    1640:	89 81       	ldd	r24, Y+1	; 0x01
    1642:	9a 81       	ldd	r25, Y+2	; 0x02
    1644:	01 96       	adiw	r24, 0x01	; 1
    1646:	9a 83       	std	Y+2, r25	; 0x02
    1648:	89 83       	std	Y+1, r24	; 0x01
    164a:	89 81       	ldd	r24, Y+1	; 0x01
    164c:	9a 81       	ldd	r25, Y+2	; 0x02
    164e:	04 97       	sbiw	r24, 0x04	; 4
    1650:	cc f2       	brlt	.-78     	; 0x1604 <drawTile+0x26>
		for(short yi = 0; yi < 4; yi++) {
			nokia_lcd_set_pixel(y*4 + yi, x*4 + xi, fill);
		}
	}
}
    1652:	00 00       	nop
    1654:	2a 96       	adiw	r28, 0x0a	; 10
    1656:	0f b6       	in	r0, 0x3f	; 63
    1658:	f8 94       	cli
    165a:	de bf       	out	0x3e, r29	; 62
    165c:	0f be       	out	0x3f, r0	; 63
    165e:	cd bf       	out	0x3d, r28	; 61
    1660:	df 91       	pop	r29
    1662:	cf 91       	pop	r28
    1664:	08 95       	ret

00001666 <UpdateGame>:
void UpdateGame() {
    1666:	cf 93       	push	r28
    1668:	df 93       	push	r29
    166a:	cd b7       	in	r28, 0x3d	; 61
    166c:	de b7       	in	r29, 0x3e	; 62
    166e:	c1 55       	subi	r28, 0x51	; 81
    1670:	d1 09       	sbc	r29, r1
    1672:	0f b6       	in	r0, 0x3f	; 63
    1674:	f8 94       	cli
    1676:	de bf       	out	0x3e, r29	; 62
    1678:	0f be       	out	0x3f, r0	; 63
    167a:	cd bf       	out	0x3d, r28	; 61
	const short standardInterval = 10;
    167c:	8a e0       	ldi	r24, 0x0A	; 10
    167e:	90 e0       	ldi	r25, 0x00	; 0
    1680:	9c 8f       	std	Y+28, r25	; 0x1c
    1682:	8b 8f       	std	Y+27, r24	; 0x1b

	static short time = 0;

	//static char pressed_prev = 0;

	if(--time > 0) {
    1684:	80 91 09 03 	lds	r24, 0x0309	; 0x800309 <time.2270>
    1688:	90 91 0a 03 	lds	r25, 0x030A	; 0x80030a <time.2270+0x1>
    168c:	01 97       	sbiw	r24, 0x01	; 1
    168e:	90 93 0a 03 	sts	0x030A, r25	; 0x80030a <time.2270+0x1>
    1692:	80 93 09 03 	sts	0x0309, r24	; 0x800309 <time.2270>
    1696:	80 91 09 03 	lds	r24, 0x0309	; 0x800309 <time.2270>
    169a:	90 91 0a 03 	lds	r25, 0x030A	; 0x80030a <time.2270+0x1>
    169e:	18 16       	cp	r1, r24
    16a0:	19 06       	cpc	r1, r25
    16a2:	0c f4       	brge	.+2      	; 0x16a6 <UpdateGame+0x40>
    16a4:	f8 c2       	rjmp	.+1520   	; 0x1c96 <UpdateGame+0x630>
		return;
	}
	switch(state) {
    16a6:	80 91 0b 03 	lds	r24, 0x030B	; 0x80030b <state.2265>
    16aa:	88 2f       	mov	r24, r24
    16ac:	90 e0       	ldi	r25, 0x00	; 0
    16ae:	82 30       	cpi	r24, 0x02	; 2
    16b0:	91 05       	cpc	r25, r1
    16b2:	09 f4       	brne	.+2      	; 0x16b6 <UpdateGame+0x50>
    16b4:	06 c1       	rjmp	.+524    	; 0x18c2 <UpdateGame+0x25c>
    16b6:	83 30       	cpi	r24, 0x03	; 3
    16b8:	91 05       	cpc	r25, r1
    16ba:	2c f4       	brge	.+10     	; 0x16c6 <UpdateGame+0x60>
    16bc:	00 97       	sbiw	r24, 0x00	; 0
    16be:	79 f0       	breq	.+30     	; 0x16de <UpdateGame+0x78>
    16c0:	01 97       	sbiw	r24, 0x01	; 1
    16c2:	29 f1       	breq	.+74     	; 0x170e <UpdateGame+0xa8>
    16c4:	a1 c1       	rjmp	.+834    	; 0x1a08 <UpdateGame+0x3a2>
    16c6:	84 30       	cpi	r24, 0x04	; 4
    16c8:	91 05       	cpc	r25, r1
    16ca:	09 f4       	brne	.+2      	; 0x16ce <UpdateGame+0x68>
    16cc:	6d c1       	rjmp	.+730    	; 0x19a8 <UpdateGame+0x342>
    16ce:	84 30       	cpi	r24, 0x04	; 4
    16d0:	91 05       	cpc	r25, r1
    16d2:	0c f4       	brge	.+2      	; 0x16d6 <UpdateGame+0x70>
    16d4:	00 c1       	rjmp	.+512    	; 0x18d6 <UpdateGame+0x270>
    16d6:	05 97       	sbiw	r24, 0x05	; 5
    16d8:	09 f4       	brne	.+2      	; 0x16dc <UpdateGame+0x76>
    16da:	8c c1       	rjmp	.+792    	; 0x19f4 <UpdateGame+0x38e>
    16dc:	95 c1       	rjmp	.+810    	; 0x1a08 <UpdateGame+0x3a2>
	case Init:
		t = CreateTetra();
    16de:	ce 01       	movw	r24, r28
    16e0:	ce 96       	adiw	r24, 0x3e	; 62
    16e2:	b3 db       	rcall	.-2202   	; 0xe4a <CreateTetra>
    16e4:	84 e1       	ldi	r24, 0x14	; 20
    16e6:	fe 01       	movw	r30, r28
    16e8:	fe 96       	adiw	r30, 0x3e	; 62
    16ea:	ac e0       	ldi	r26, 0x0C	; 12
    16ec:	b3 e0       	ldi	r27, 0x03	; 3
    16ee:	01 90       	ld	r0, Z+
    16f0:	0d 92       	st	X+, r0
    16f2:	8a 95       	dec	r24
    16f4:	e1 f7       	brne	.-8      	; 0x16ee <UpdateGame+0x88>
		score = 0;
    16f6:	10 92 23 04 	sts	0x0423, r1	; 0x800423 <score>
		time = standardInterval;
    16fa:	8b 8d       	ldd	r24, Y+27	; 0x1b
    16fc:	9c 8d       	ldd	r25, Y+28	; 0x1c
    16fe:	90 93 0a 03 	sts	0x030A, r25	; 0x80030a <time.2270+0x1>
    1702:	80 93 09 03 	sts	0x0309, r24	; 0x800309 <time.2270>
		state = Play;
    1706:	81 e0       	ldi	r24, 0x01	; 1
    1708:	80 93 0b 03 	sts	0x030B, r24	; 0x80030b <state.2265>
		break;
    170c:	7d c1       	rjmp	.+762    	; 0x1a08 <UpdateGame+0x3a2>
	case Play: {
		//remove(&g, &t);			//Remove so that we can move

		char pressed = ~PIN_BUTTONS;
    170e:	89 e2       	ldi	r24, 0x29	; 41
    1710:	90 e0       	ldi	r25, 0x00	; 0
    1712:	fc 01       	movw	r30, r24
    1714:	80 81       	ld	r24, Z
    1716:	80 95       	com	r24
    1718:	8d 8f       	std	Y+29, r24	; 0x1d
		//char justPressed = pressed & ~pressed_prev;
		switch(pressed) {
    171a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    171c:	88 2f       	mov	r24, r24
    171e:	90 e0       	ldi	r25, 0x00	; 0
    1720:	09 2e       	mov	r0, r25
    1722:	00 0c       	add	r0, r0
    1724:	aa 0b       	sbc	r26, r26
    1726:	bb 0b       	sbc	r27, r27
    1728:	41 e0       	ldi	r20, 0x01	; 1
    172a:	50 e0       	ldi	r21, 0x00	; 0
    172c:	26 e0       	ldi	r18, 0x06	; 6
    172e:	30 e0       	ldi	r19, 0x00	; 0
    1730:	84 1b       	sub	r24, r20
    1732:	95 0b       	sbc	r25, r21
    1734:	28 17       	cp	r18, r24
    1736:	39 07       	cpc	r19, r25
    1738:	70 f1       	brcs	.+92     	; 0x1796 <UpdateGame+0x130>
    173a:	8a 5b       	subi	r24, 0xBA	; 186
    173c:	9f 4f       	sbci	r25, 0xFF	; 255
    173e:	fc 01       	movw	r30, r24
    1740:	f7 c3       	rjmp	.+2030   	; 0x1f30 <__tablejump2__>
		case 1:	//Right
			tryShiftRight(&g, &t);
    1742:	6c e0       	ldi	r22, 0x0C	; 12
    1744:	73 e0       	ldi	r23, 0x03	; 3
    1746:	80 e2       	ldi	r24, 0x20	; 32
    1748:	93 e0       	ldi	r25, 0x03	; 3
    174a:	85 de       	rcall	.-758    	; 0x1456 <tryShiftRight>
			break;
    174c:	24 c0       	rjmp	.+72     	; 0x1796 <UpdateGame+0x130>
		case 2:	//Middle
			tryMirror(&g, &t);
    174e:	6c e0       	ldi	r22, 0x0C	; 12
    1750:	73 e0       	ldi	r23, 0x03	; 3
    1752:	80 e2       	ldi	r24, 0x20	; 32
    1754:	93 e0       	ldi	r25, 0x03	; 3
    1756:	1c de       	rcall	.-968    	; 0x1390 <tryMirror>
			break;
    1758:	1e c0       	rjmp	.+60     	; 0x1796 <UpdateGame+0x130>
		case 3:	//Middle + Right
			tryTurnCW(&g, &t);
    175a:	6c e0       	ldi	r22, 0x0C	; 12
    175c:	73 e0       	ldi	r23, 0x03	; 3
    175e:	80 e2       	ldi	r24, 0x20	; 32
    1760:	93 e0       	ldi	r25, 0x03	; 3
    1762:	58 de       	rcall	.-848    	; 0x1414 <tryTurnCW>
			break;
		case 4:	//Left
			tryShiftLeft(&g, &t);
    1764:	18 c0       	rjmp	.+48     	; 0x1796 <UpdateGame+0x130>
    1766:	6c e0       	ldi	r22, 0x0C	; 12
    1768:	73 e0       	ldi	r23, 0x03	; 3
    176a:	80 e2       	ldi	r24, 0x20	; 32
    176c:	93 e0       	ldi	r25, 0x03	; 3
			break;
    176e:	94 de       	rcall	.-728    	; 0x1498 <tryShiftLeft>
		case 5:	//Left + Right
			while(!land(&g, &t)) {
				down(&t);
    1770:	12 c0       	rjmp	.+36     	; 0x1796 <UpdateGame+0x130>
    1772:	8c e0       	ldi	r24, 0x0C	; 12
    1774:	93 e0       	ldi	r25, 0x03	; 3
			break;
		case 4:	//Left
			tryShiftLeft(&g, &t);
			break;
		case 5:	//Left + Right
			while(!land(&g, &t)) {
    1776:	92 da       	rcall	.-2780   	; 0xc9c <down>
    1778:	6c e0       	ldi	r22, 0x0C	; 12
    177a:	73 e0       	ldi	r23, 0x03	; 3
    177c:	80 e2       	ldi	r24, 0x20	; 32
    177e:	93 e0       	ldi	r25, 0x03	; 3
    1780:	b7 dd       	rcall	.-1170   	; 0x12f0 <land>
    1782:	88 23       	and	r24, r24
				down(&t);
			}
			break;
    1784:	b1 f3       	breq	.-20     	; 0x1772 <UpdateGame+0x10c>
		case 6:	//Left + Middle
			tryTurnCCW(&g, &t);
    1786:	07 c0       	rjmp	.+14     	; 0x1796 <UpdateGame+0x130>
    1788:	6c e0       	ldi	r22, 0x0C	; 12
    178a:	73 e0       	ldi	r23, 0x03	; 3
    178c:	80 e2       	ldi	r24, 0x20	; 32
    178e:	93 e0       	ldi	r25, 0x03	; 3
			break;
    1790:	20 de       	rcall	.-960    	; 0x13d2 <tryTurnCCW>
		case 7:	//Left + Middle + Right
			break;
    1792:	01 c0       	rjmp	.+2      	; 0x1796 <UpdateGame+0x130>
		}
		//pressed_prev = pressed;
		if(land(&g, &t)) {		//See if we stop falling here
    1794:	00 00       	nop
    1796:	6c e0       	ldi	r22, 0x0C	; 12
    1798:	73 e0       	ldi	r23, 0x03	; 3
    179a:	80 e2       	ldi	r24, 0x20	; 32
    179c:	93 e0       	ldi	r25, 0x03	; 3
    179e:	a8 dd       	rcall	.-1200   	; 0x12f0 <land>
    17a0:	88 23       	and	r24, r24
    17a2:	09 f4       	brne	.+2      	; 0x17a6 <UpdateGame+0x140>
			if(inBoundsOpen(&g, &t)) {	//We landed in the screen
    17a4:	78 c0       	rjmp	.+240    	; 0x1896 <UpdateGame+0x230>
    17a6:	6c e0       	ldi	r22, 0x0C	; 12
    17a8:	73 e0       	ldi	r23, 0x03	; 3
    17aa:	80 e2       	ldi	r24, 0x20	; 32
    17ac:	93 e0       	ldi	r25, 0x03	; 3
    17ae:	5c dd       	rcall	.-1352   	; 0x1268 <inBoundsOpen>
    17b0:	88 23       	and	r24, r24
    17b2:	09 f4       	brne	.+2      	; 0x17b6 <UpdateGame+0x150>
				place(&g, &t);	//Place in grid
    17b4:	62 c0       	rjmp	.+196    	; 0x187a <UpdateGame+0x214>
    17b6:	6c e0       	ldi	r22, 0x0C	; 12
    17b8:	73 e0       	ldi	r23, 0x03	; 3
    17ba:	80 e2       	ldi	r24, 0x20	; 32
    17bc:	93 e0       	ldi	r25, 0x03	; 3
				state = PlayInterval;
    17be:	8d de       	rcall	.-742    	; 0x14da <place>
    17c0:	82 e0       	ldi	r24, 0x02	; 2
    17c2:	80 93 0b 03 	sts	0x030B, r24	; 0x80030b <state.2265>
				//Check for rows to clear
				for(unsigned short y = 0; y < HEIGHT; y++) {
    17c6:	1a 82       	std	Y+2, r1	; 0x02
    17c8:	19 82       	std	Y+1, r1	; 0x01
					if(rowFull(&g, y)) {
    17ca:	21 c0       	rjmp	.+66     	; 0x180e <UpdateGame+0x1a8>
    17cc:	89 81       	ldd	r24, Y+1	; 0x01
    17ce:	9a 81       	ldd	r25, Y+2	; 0x02
    17d0:	bc 01       	movw	r22, r24
    17d2:	80 e2       	ldi	r24, 0x20	; 32
    17d4:	93 e0       	ldi	r25, 0x03	; 3
    17d6:	df dc       	rcall	.-1602   	; 0x1196 <rowFull>
    17d8:	88 23       	and	r24, r24
    17da:	a1 f0       	breq	.+40     	; 0x1804 <UpdateGame+0x19e>
						rowCleared = y;
    17dc:	89 81       	ldd	r24, Y+1	; 0x01
    17de:	9a 81       	ldd	r25, Y+2	; 0x02
    17e0:	90 93 1d 04 	sts	0x041D, r25	; 0x80041d <rowCleared.2266+0x1>
    17e4:	80 93 1c 04 	sts	0x041C, r24	; 0x80041c <rowCleared.2266>
						rowState = 6;
    17e8:	86 e0       	ldi	r24, 0x06	; 6
    17ea:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <rowState.2267>
						state = RowClear;
    17ee:	83 e0       	ldi	r24, 0x03	; 3
    17f0:	80 93 0b 03 	sts	0x030B, r24	; 0x80030b <state.2265>
						score += 1 + y;
    17f4:	99 81       	ldd	r25, Y+1	; 0x01
    17f6:	80 91 23 04 	lds	r24, 0x0423	; 0x800423 <score>
    17fa:	89 0f       	add	r24, r25
    17fc:	8f 5f       	subi	r24, 0xFF	; 255
    17fe:	80 93 23 04 	sts	0x0423, r24	; 0x800423 <score>
						break;
    1802:	09 c0       	rjmp	.+18     	; 0x1816 <UpdateGame+0x1b0>
		if(land(&g, &t)) {		//See if we stop falling here
			if(inBoundsOpen(&g, &t)) {	//We landed in the screen
				place(&g, &t);	//Place in grid
				state = PlayInterval;
				//Check for rows to clear
				for(unsigned short y = 0; y < HEIGHT; y++) {
    1804:	89 81       	ldd	r24, Y+1	; 0x01
    1806:	9a 81       	ldd	r25, Y+2	; 0x02
    1808:	01 96       	adiw	r24, 0x01	; 1
    180a:	9a 83       	std	Y+2, r25	; 0x02
    180c:	89 83       	std	Y+1, r24	; 0x01
    180e:	89 81       	ldd	r24, Y+1	; 0x01
    1810:	9a 81       	ldd	r25, Y+2	; 0x02
    1812:	45 97       	sbiw	r24, 0x15	; 21
    1814:	d8 f2       	brcs	.-74     	; 0x17cc <UpdateGame+0x166>
						state = RowClear;
						score += 1 + y;
						break;
					}
				}
				placed++;
    1816:	80 91 1e 04 	lds	r24, 0x041E	; 0x80041e <placed.2268>
    181a:	90 91 1f 04 	lds	r25, 0x041F	; 0x80041f <placed.2268+0x1>
    181e:	01 96       	adiw	r24, 0x01	; 1
    1820:	90 93 1f 04 	sts	0x041F, r25	; 0x80041f <placed.2268+0x1>
    1824:	80 93 1e 04 	sts	0x041E, r24	; 0x80041e <placed.2268>
				fall = 0;
    1828:	10 92 21 04 	sts	0x0421, r1	; 0x800421 <fall.2269+0x1>
    182c:	10 92 20 04 	sts	0x0420, r1	; 0x800420 <fall.2269>
				t = CreateTetra();
    1830:	ce 01       	movw	r24, r28
    1832:	ce 96       	adiw	r24, 0x3e	; 62
    1834:	0a db       	rcall	.-2540   	; 0xe4a <CreateTetra>
    1836:	84 e1       	ldi	r24, 0x14	; 20
    1838:	fe 01       	movw	r30, r28
    183a:	fe 96       	adiw	r30, 0x3e	; 62
    183c:	ac e0       	ldi	r26, 0x0C	; 12
    183e:	b3 e0       	ldi	r27, 0x03	; 3
    1840:	01 90       	ld	r0, Z+
    1842:	0d 92       	st	X+, r0
    1844:	8a 95       	dec	r24
    1846:	e1 f7       	brne	.-8      	; 0x1840 <UpdateGame+0x1da>
				if(state != RowClear) {
    1848:	80 91 0b 03 	lds	r24, 0x030B	; 0x80030b <state.2265>
    184c:	83 30       	cpi	r24, 0x03	; 3
    184e:	71 f0       	breq	.+28     	; 0x186c <UpdateGame+0x206>
					time = standardInterval * 5;
    1850:	2b 8d       	ldd	r18, Y+27	; 0x1b
    1852:	3c 8d       	ldd	r19, Y+28	; 0x1c
    1854:	c9 01       	movw	r24, r18
    1856:	88 0f       	add	r24, r24
    1858:	99 1f       	adc	r25, r25
    185a:	88 0f       	add	r24, r24
    185c:	99 1f       	adc	r25, r25
    185e:	82 0f       	add	r24, r18
    1860:	93 1f       	adc	r25, r19
    1862:	90 93 0a 03 	sts	0x030A, r25	; 0x80030a <time.2270+0x1>
    1866:	80 93 09 03 	sts	0x0309, r24	; 0x800309 <time.2270>
			//place(&g, &t);
			fall++;
			time = standardInterval;
			state = PlayInterval;
		}
		break;
    186a:	ce c0       	rjmp	.+412    	; 0x1a08 <UpdateGame+0x3a2>
				fall = 0;
				t = CreateTetra();
				if(state != RowClear) {
					time = standardInterval * 5;
				} else {
					time = standardInterval;
    186c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    186e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1870:	90 93 0a 03 	sts	0x030A, r25	; 0x80030a <time.2270+0x1>
    1874:	80 93 09 03 	sts	0x0309, r24	; 0x800309 <time.2270>
			//place(&g, &t);
			fall++;
			time = standardInterval;
			state = PlayInterval;
		}
		break;
    1878:	c7 c0       	rjmp	.+398    	; 0x1a08 <UpdateGame+0x3a2>
					time = standardInterval;
				}
			} else {
				//We landed above the top of the screen
				//Game over
				state = GameOver;
    187a:	84 e0       	ldi	r24, 0x04	; 4
    187c:	80 93 0b 03 	sts	0x030B, r24	; 0x80030b <state.2265>
				rowCleared = 0;
    1880:	10 92 1d 04 	sts	0x041D, r1	; 0x80041d <rowCleared.2266+0x1>
    1884:	10 92 1c 04 	sts	0x041C, r1	; 0x80041c <rowCleared.2266>
				time = standardInterval;
    1888:	8b 8d       	ldd	r24, Y+27	; 0x1b
    188a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    188c:	90 93 0a 03 	sts	0x030A, r25	; 0x80030a <time.2270+0x1>
    1890:	80 93 09 03 	sts	0x0309, r24	; 0x800309 <time.2270>
			}
		} else {
			down(&t);
    1894:	b9 c0       	rjmp	.+370    	; 0x1a08 <UpdateGame+0x3a2>
    1896:	8c e0       	ldi	r24, 0x0C	; 12
    1898:	93 e0       	ldi	r25, 0x03	; 3
    189a:	00 da       	rcall	.-3072   	; 0xc9c <down>
			//place(&g, &t);
			fall++;
    189c:	80 91 20 04 	lds	r24, 0x0420	; 0x800420 <fall.2269>
    18a0:	90 91 21 04 	lds	r25, 0x0421	; 0x800421 <fall.2269+0x1>
    18a4:	01 96       	adiw	r24, 0x01	; 1
    18a6:	90 93 21 04 	sts	0x0421, r25	; 0x800421 <fall.2269+0x1>
    18aa:	80 93 20 04 	sts	0x0420, r24	; 0x800420 <fall.2269>
			time = standardInterval;
    18ae:	8b 8d       	ldd	r24, Y+27	; 0x1b
    18b0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    18b2:	90 93 0a 03 	sts	0x030A, r25	; 0x80030a <time.2270+0x1>
    18b6:	80 93 09 03 	sts	0x0309, r24	; 0x800309 <time.2270>
			state = PlayInterval;
    18ba:	82 e0       	ldi	r24, 0x02	; 2
    18bc:	80 93 0b 03 	sts	0x030B, r24	; 0x80030b <state.2265>
		}
		break;
    18c0:	a3 c0       	rjmp	.+326    	; 0x1a08 <UpdateGame+0x3a2>
	} case PlayInterval:
		time = standardInterval;
    18c2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    18c4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    18c6:	90 93 0a 03 	sts	0x030A, r25	; 0x80030a <time.2270+0x1>
    18ca:	80 93 09 03 	sts	0x0309, r24	; 0x800309 <time.2270>
		state = Play;
    18ce:	81 e0       	ldi	r24, 0x01	; 1
    18d0:	80 93 0b 03 	sts	0x030B, r24	; 0x80030b <state.2265>
		break;
    18d4:	99 c0       	rjmp	.+306    	; 0x1a08 <UpdateGame+0x3a2>
	case RowClear:
		if(--rowState%2 == 1) {
    18d6:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <rowState.2267>
    18da:	81 50       	subi	r24, 0x01	; 1
    18dc:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <rowState.2267>
    18e0:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <rowState.2267>
    18e4:	81 70       	andi	r24, 0x01	; 1
    18e6:	88 23       	and	r24, r24
			clearRow(&g, rowCleared);
    18e8:	49 f0       	breq	.+18     	; 0x18fc <UpdateGame+0x296>
    18ea:	80 91 1c 04 	lds	r24, 0x041C	; 0x80041c <rowCleared.2266>
    18ee:	90 91 1d 04 	lds	r25, 0x041D	; 0x80041d <rowCleared.2266+0x1>
    18f2:	bc 01       	movw	r22, r24
    18f4:	80 e2       	ldi	r24, 0x20	; 32
    18f6:	93 e0       	ldi	r25, 0x03	; 3
    18f8:	8a db       	rcall	.-2284   	; 0x100e <clearRow>
		} else {
			fillRow(&g, rowCleared);
    18fa:	08 c0       	rjmp	.+16     	; 0x190c <UpdateGame+0x2a6>
    18fc:	80 91 1c 04 	lds	r24, 0x041C	; 0x80041c <rowCleared.2266>
    1900:	90 91 1d 04 	lds	r25, 0x041D	; 0x80041d <rowCleared.2266+0x1>
    1904:	bc 01       	movw	r22, r24
    1906:	80 e2       	ldi	r24, 0x20	; 32
    1908:	93 e0       	ldi	r25, 0x03	; 3
    190a:	b4 db       	rcall	.-2200   	; 0x1074 <fillRow>
		}
		if(rowState > 0) {
    190c:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <rowState.2267>
    1910:	88 23       	and	r24, r24
			time = standardInterval;
    1912:	39 f0       	breq	.+14     	; 0x1922 <UpdateGame+0x2bc>
    1914:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1916:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1918:	90 93 0a 03 	sts	0x030A, r25	; 0x80030a <time.2270+0x1>
    191c:	80 93 09 03 	sts	0x0309, r24	; 0x800309 <time.2270>
		} else {
			descendRow(&g, rowCleared);
    1920:	73 c0       	rjmp	.+230    	; 0x1a08 <UpdateGame+0x3a2>
    1922:	80 91 1c 04 	lds	r24, 0x041C	; 0x80041c <rowCleared.2266>
    1926:	90 91 1d 04 	lds	r25, 0x041D	; 0x80041d <rowCleared.2266+0x1>
    192a:	bc 01       	movw	r22, r24
    192c:	80 e2       	ldi	r24, 0x20	; 32
    192e:	93 e0       	ldi	r25, 0x03	; 3

			state = Play;
    1930:	d5 db       	rcall	.-2134   	; 0x10dc <descendRow>
    1932:	81 e0       	ldi	r24, 0x01	; 1
    1934:	80 93 0b 03 	sts	0x030B, r24	; 0x80030b <state.2265>
			for(unsigned short y = 0; y < HEIGHT; y++) {
    1938:	1c 82       	std	Y+4, r1	; 0x04
    193a:	1b 82       	std	Y+3, r1	; 0x03
				if(rowFull(&g, y)) {
    193c:	1a c0       	rjmp	.+52     	; 0x1972 <UpdateGame+0x30c>
    193e:	8b 81       	ldd	r24, Y+3	; 0x03
    1940:	9c 81       	ldd	r25, Y+4	; 0x04
    1942:	bc 01       	movw	r22, r24
    1944:	80 e2       	ldi	r24, 0x20	; 32
    1946:	93 e0       	ldi	r25, 0x03	; 3
    1948:	26 dc       	rcall	.-1972   	; 0x1196 <rowFull>
    194a:	88 23       	and	r24, r24
    194c:	69 f0       	breq	.+26     	; 0x1968 <UpdateGame+0x302>
					rowCleared = y;
    194e:	8b 81       	ldd	r24, Y+3	; 0x03
    1950:	9c 81       	ldd	r25, Y+4	; 0x04
    1952:	90 93 1d 04 	sts	0x041D, r25	; 0x80041d <rowCleared.2266+0x1>
    1956:	80 93 1c 04 	sts	0x041C, r24	; 0x80041c <rowCleared.2266>
					rowState = 6;
    195a:	86 e0       	ldi	r24, 0x06	; 6
    195c:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <rowState.2267>
					state = RowClear;
    1960:	83 e0       	ldi	r24, 0x03	; 3
    1962:	80 93 0b 03 	sts	0x030B, r24	; 0x80030b <state.2265>
					break;
    1966:	09 c0       	rjmp	.+18     	; 0x197a <UpdateGame+0x314>
			time = standardInterval;
		} else {
			descendRow(&g, rowCleared);

			state = Play;
			for(unsigned short y = 0; y < HEIGHT; y++) {
    1968:	8b 81       	ldd	r24, Y+3	; 0x03
    196a:	9c 81       	ldd	r25, Y+4	; 0x04
    196c:	01 96       	adiw	r24, 0x01	; 1
    196e:	9c 83       	std	Y+4, r25	; 0x04
    1970:	8b 83       	std	Y+3, r24	; 0x03
    1972:	8b 81       	ldd	r24, Y+3	; 0x03
    1974:	9c 81       	ldd	r25, Y+4	; 0x04
    1976:	45 97       	sbiw	r24, 0x15	; 21
    1978:	10 f3       	brcs	.-60     	; 0x193e <UpdateGame+0x2d8>
					rowState = 6;
					state = RowClear;
					break;
				}
			}
			if(state != RowClear) {
    197a:	80 91 0b 03 	lds	r24, 0x030B	; 0x80030b <state.2265>
    197e:	83 30       	cpi	r24, 0x03	; 3
    1980:	61 f0       	breq	.+24     	; 0x199a <UpdateGame+0x334>
				time = standardInterval * 3;
    1982:	2b 8d       	ldd	r18, Y+27	; 0x1b
    1984:	3c 8d       	ldd	r19, Y+28	; 0x1c
    1986:	c9 01       	movw	r24, r18
    1988:	88 0f       	add	r24, r24
    198a:	99 1f       	adc	r25, r25
    198c:	82 0f       	add	r24, r18
    198e:	93 1f       	adc	r25, r19
    1990:	90 93 0a 03 	sts	0x030A, r25	; 0x80030a <time.2270+0x1>
    1994:	80 93 09 03 	sts	0x0309, r24	; 0x800309 <time.2270>
			} else {
				time = standardInterval;
    1998:	37 c0       	rjmp	.+110    	; 0x1a08 <UpdateGame+0x3a2>
    199a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    199c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    199e:	90 93 0a 03 	sts	0x030A, r25	; 0x80030a <time.2270+0x1>
			}
		}
		break;
    19a2:	80 93 09 03 	sts	0x0309, r24	; 0x800309 <time.2270>
	case GameOver:
		if(rowCleared < HEIGHT) {
    19a6:	30 c0       	rjmp	.+96     	; 0x1a08 <UpdateGame+0x3a2>
    19a8:	80 91 1c 04 	lds	r24, 0x041C	; 0x80041c <rowCleared.2266>
    19ac:	90 91 1d 04 	lds	r25, 0x041D	; 0x80041d <rowCleared.2266+0x1>
			clearRow(&g, 0);
    19b0:	45 97       	sbiw	r24, 0x15	; 21
    19b2:	ec f4       	brge	.+58     	; 0x19ee <UpdateGame+0x388>
    19b4:	60 e0       	ldi	r22, 0x00	; 0
    19b6:	70 e0       	ldi	r23, 0x00	; 0
    19b8:	80 e2       	ldi	r24, 0x20	; 32
    19ba:	93 e0       	ldi	r25, 0x03	; 3
			descendRow(&g, 0);
    19bc:	28 db       	rcall	.-2480   	; 0x100e <clearRow>
    19be:	60 e0       	ldi	r22, 0x00	; 0
    19c0:	70 e0       	ldi	r23, 0x00	; 0
    19c2:	80 e2       	ldi	r24, 0x20	; 32
    19c4:	93 e0       	ldi	r25, 0x03	; 3
			rowCleared++;
    19c6:	8a db       	rcall	.-2284   	; 0x10dc <descendRow>
    19c8:	80 91 1c 04 	lds	r24, 0x041C	; 0x80041c <rowCleared.2266>
    19cc:	90 91 1d 04 	lds	r25, 0x041D	; 0x80041d <rowCleared.2266+0x1>
    19d0:	01 96       	adiw	r24, 0x01	; 1
    19d2:	90 93 1d 04 	sts	0x041D, r25	; 0x80041d <rowCleared.2266+0x1>
    19d6:	80 93 1c 04 	sts	0x041C, r24	; 0x80041c <rowCleared.2266>
			time = standardInterval;
    19da:	8b 8d       	ldd	r24, Y+27	; 0x1b
    19dc:	9c 8d       	ldd	r25, Y+28	; 0x1c
    19de:	90 93 0a 03 	sts	0x030A, r25	; 0x80030a <time.2270+0x1>
    19e2:	80 93 09 03 	sts	0x0309, r24	; 0x800309 <time.2270>
			state = GameOverFlash;
    19e6:	85 e0       	ldi	r24, 0x05	; 5
    19e8:	80 93 0b 03 	sts	0x030B, r24	; 0x80030b <state.2265>
		} else {
			setScreenState(FinalScore);
    19ec:	0d c0       	rjmp	.+26     	; 0x1a08 <UpdateGame+0x3a2>
    19ee:	82 e0       	ldi	r24, 0x02	; 2
    19f0:	c0 dd       	rcall	.-1152   	; 0x1572 <setScreenState>
		}
		break;
    19f2:	0a c0       	rjmp	.+20     	; 0x1a08 <UpdateGame+0x3a2>
	case GameOverFlash:
		time = standardInterval;
    19f4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    19f6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    19f8:	90 93 0a 03 	sts	0x030A, r25	; 0x80030a <time.2270+0x1>
    19fc:	80 93 09 03 	sts	0x0309, r24	; 0x800309 <time.2270>
		state = GameOver;
    1a00:	84 e0       	ldi	r24, 0x04	; 4
    1a02:	80 93 0b 03 	sts	0x030B, r24	; 0x80030b <state.2265>
		break;
	}
	nokia_lcd_clear();
    1a06:	00 00       	nop
    1a08:	0e 94 75 02 	call	0x4ea	; 0x4ea <nokia_lcd_clear>
	if(state == GameOverFlash) {
    1a0c:	80 91 0b 03 	lds	r24, 0x030B	; 0x80030b <state.2265>
    1a10:	85 30       	cpi	r24, 0x05	; 5
		//Black screen
		for(short x = 0; x < WIDTH; x++) {
    1a12:	09 f5       	brne	.+66     	; 0x1a56 <UpdateGame+0x3f0>
    1a14:	1e 82       	std	Y+6, r1	; 0x06
    1a16:	1d 82       	std	Y+5, r1	; 0x05
			for(short y = 0; y < HEIGHT; y++) {
    1a18:	19 c0       	rjmp	.+50     	; 0x1a4c <UpdateGame+0x3e6>
    1a1a:	18 86       	std	Y+8, r1	; 0x08
    1a1c:	1f 82       	std	Y+7, r1	; 0x07
				drawTile(x, y, 1);
    1a1e:	0d c0       	rjmp	.+26     	; 0x1a3a <UpdateGame+0x3d4>
    1a20:	2f 81       	ldd	r18, Y+7	; 0x07
    1a22:	38 85       	ldd	r19, Y+8	; 0x08
    1a24:	8d 81       	ldd	r24, Y+5	; 0x05
    1a26:	9e 81       	ldd	r25, Y+6	; 0x06
    1a28:	41 e0       	ldi	r20, 0x01	; 1
    1a2a:	50 e0       	ldi	r21, 0x00	; 0
    1a2c:	b9 01       	movw	r22, r18
    1a2e:	d7 dd       	rcall	.-1106   	; 0x15de <drawTile>
	}
	nokia_lcd_clear();
	if(state == GameOverFlash) {
		//Black screen
		for(short x = 0; x < WIDTH; x++) {
			for(short y = 0; y < HEIGHT; y++) {
    1a30:	8f 81       	ldd	r24, Y+7	; 0x07
    1a32:	98 85       	ldd	r25, Y+8	; 0x08
    1a34:	01 96       	adiw	r24, 0x01	; 1
    1a36:	98 87       	std	Y+8, r25	; 0x08
    1a38:	8f 83       	std	Y+7, r24	; 0x07
    1a3a:	8f 81       	ldd	r24, Y+7	; 0x07
    1a3c:	98 85       	ldd	r25, Y+8	; 0x08
    1a3e:	45 97       	sbiw	r24, 0x15	; 21
    1a40:	7c f3       	brlt	.-34     	; 0x1a20 <UpdateGame+0x3ba>
		break;
	}
	nokia_lcd_clear();
	if(state == GameOverFlash) {
		//Black screen
		for(short x = 0; x < WIDTH; x++) {
    1a42:	8d 81       	ldd	r24, Y+5	; 0x05
    1a44:	9e 81       	ldd	r25, Y+6	; 0x06
    1a46:	01 96       	adiw	r24, 0x01	; 1
    1a48:	9e 83       	std	Y+6, r25	; 0x06
    1a4a:	8d 83       	std	Y+5, r24	; 0x05
    1a4c:	8d 81       	ldd	r24, Y+5	; 0x05
    1a4e:	9e 81       	ldd	r25, Y+6	; 0x06
    1a50:	0c 97       	sbiw	r24, 0x0c	; 12
    1a52:	1c f3       	brlt	.-58     	; 0x1a1a <UpdateGame+0x3b4>
    1a54:	1d c1       	rjmp	.+570    	; 0x1c90 <UpdateGame+0x62a>
			for(short y = 0; y < HEIGHT; y++) {
				drawTile(x, y, 1);
			}
		}
	} else if(state == Play) {
    1a56:	80 91 0b 03 	lds	r24, 0x030B	; 0x80030b <state.2265>
    1a5a:	81 30       	cpi	r24, 0x01	; 1
    1a5c:	09 f0       	breq	.+2      	; 0x1a60 <UpdateGame+0x3fa>
    1a5e:	8e c0       	rjmp	.+284    	; 0x1b7c <UpdateGame+0x516>
		for(short x = 0; x < WIDTH; x++) {
    1a60:	1a 86       	std	Y+10, r1	; 0x0a
    1a62:	19 86       	std	Y+9, r1	; 0x09
    1a64:	29 c0       	rjmp	.+82     	; 0x1ab8 <UpdateGame+0x452>
			for(short y = 0; y < HEIGHT; y++) {
    1a66:	1c 86       	std	Y+12, r1	; 0x0c
    1a68:	1b 86       	std	Y+11, r1	; 0x0b
    1a6a:	1d c0       	rjmp	.+58     	; 0x1aa6 <UpdateGame+0x440>
				drawTile(x, y, g.tiles[x][y]);
    1a6c:	89 85       	ldd	r24, Y+9	; 0x09
    1a6e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a70:	45 e1       	ldi	r20, 0x15	; 21
    1a72:	48 9f       	mul	r20, r24
    1a74:	90 01       	movw	r18, r0
    1a76:	49 9f       	mul	r20, r25
    1a78:	30 0d       	add	r19, r0
    1a7a:	11 24       	eor	r1, r1
    1a7c:	8b 85       	ldd	r24, Y+11	; 0x0b
    1a7e:	9c 85       	ldd	r25, Y+12	; 0x0c
    1a80:	82 0f       	add	r24, r18
    1a82:	93 1f       	adc	r25, r19
    1a84:	80 5e       	subi	r24, 0xE0	; 224
    1a86:	9c 4f       	sbci	r25, 0xFC	; 252
    1a88:	fc 01       	movw	r30, r24
    1a8a:	80 81       	ld	r24, Z
    1a8c:	48 2f       	mov	r20, r24
    1a8e:	50 e0       	ldi	r21, 0x00	; 0
    1a90:	2b 85       	ldd	r18, Y+11	; 0x0b
    1a92:	3c 85       	ldd	r19, Y+12	; 0x0c
    1a94:	89 85       	ldd	r24, Y+9	; 0x09
    1a96:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a98:	b9 01       	movw	r22, r18
    1a9a:	a1 dd       	rcall	.-1214   	; 0x15de <drawTile>
				drawTile(x, y, 1);
			}
		}
	} else if(state == Play) {
		for(short x = 0; x < WIDTH; x++) {
			for(short y = 0; y < HEIGHT; y++) {
    1a9c:	8b 85       	ldd	r24, Y+11	; 0x0b
    1a9e:	9c 85       	ldd	r25, Y+12	; 0x0c
    1aa0:	01 96       	adiw	r24, 0x01	; 1
    1aa2:	9c 87       	std	Y+12, r25	; 0x0c
    1aa4:	8b 87       	std	Y+11, r24	; 0x0b
    1aa6:	8b 85       	ldd	r24, Y+11	; 0x0b
    1aa8:	9c 85       	ldd	r25, Y+12	; 0x0c
    1aaa:	45 97       	sbiw	r24, 0x15	; 21
			for(short y = 0; y < HEIGHT; y++) {
				drawTile(x, y, 1);
			}
		}
	} else if(state == Play) {
		for(short x = 0; x < WIDTH; x++) {
    1aac:	fc f2       	brlt	.-66     	; 0x1a6c <UpdateGame+0x406>
    1aae:	89 85       	ldd	r24, Y+9	; 0x09
    1ab0:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ab2:	01 96       	adiw	r24, 0x01	; 1
    1ab4:	9a 87       	std	Y+10, r25	; 0x0a
    1ab6:	89 87       	std	Y+9, r24	; 0x09
    1ab8:	89 85       	ldd	r24, Y+9	; 0x09
    1aba:	9a 85       	ldd	r25, Y+10	; 0x0a
    1abc:	0c 97       	sbiw	r24, 0x0c	; 12
			for(short y = 0; y < HEIGHT; y++) {
				drawTile(x, y, g.tiles[x][y]);
			}
		}
		for(short i = 0; i < 4; i++) {
    1abe:	9c f2       	brlt	.-90     	; 0x1a66 <UpdateGame+0x400>
    1ac0:	1e 86       	std	Y+14, r1	; 0x0e
			Point p = getTile(&t, i);
    1ac2:	1d 86       	std	Y+13, r1	; 0x0d
    1ac4:	1d c0       	rjmp	.+58     	; 0x1b00 <UpdateGame+0x49a>
    1ac6:	8d 85       	ldd	r24, Y+13	; 0x0d
    1ac8:	9e 85       	ldd	r25, Y+14	; 0x0e
    1aca:	bc 01       	movw	r22, r24
    1acc:	8c e0       	ldi	r24, 0x0C	; 12
    1ace:	93 e0       	ldi	r25, 0x03	; 3
    1ad0:	c1 d8       	rcall	.-3710   	; 0xc54 <getTile>
    1ad2:	dc 01       	movw	r26, r24
    1ad4:	cb 01       	movw	r24, r22
    1ad6:	8a ab       	std	Y+50, r24	; 0x32
    1ad8:	9b ab       	std	Y+51, r25	; 0x33
    1ada:	ac ab       	std	Y+52, r26	; 0x34
			if(p.y < HEIGHT) {
    1adc:	bd ab       	std	Y+53, r27	; 0x35
    1ade:	8c a9       	ldd	r24, Y+52	; 0x34
    1ae0:	9d a9       	ldd	r25, Y+53	; 0x35
    1ae2:	45 97       	sbiw	r24, 0x15	; 21
				drawTile(p.x, p.y, 1);
    1ae4:	44 f4       	brge	.+16     	; 0x1af6 <UpdateGame+0x490>
    1ae6:	2c a9       	ldd	r18, Y+52	; 0x34
    1ae8:	3d a9       	ldd	r19, Y+53	; 0x35
    1aea:	8a a9       	ldd	r24, Y+50	; 0x32
    1aec:	9b a9       	ldd	r25, Y+51	; 0x33
    1aee:	41 e0       	ldi	r20, 0x01	; 1
    1af0:	50 e0       	ldi	r21, 0x00	; 0
    1af2:	b9 01       	movw	r22, r18
		for(short x = 0; x < WIDTH; x++) {
			for(short y = 0; y < HEIGHT; y++) {
				drawTile(x, y, g.tiles[x][y]);
			}
		}
		for(short i = 0; i < 4; i++) {
    1af4:	74 dd       	rcall	.-1304   	; 0x15de <drawTile>
    1af6:	8d 85       	ldd	r24, Y+13	; 0x0d
    1af8:	9e 85       	ldd	r25, Y+14	; 0x0e
    1afa:	01 96       	adiw	r24, 0x01	; 1
    1afc:	9e 87       	std	Y+14, r25	; 0x0e
    1afe:	8d 87       	std	Y+13, r24	; 0x0d
    1b00:	8d 85       	ldd	r24, Y+13	; 0x0d
    1b02:	9e 85       	ldd	r25, Y+14	; 0x0e
			Point p = getTile(&t, i);
			if(p.y < HEIGHT) {
				drawTile(p.x, p.y, 1);
			}
		}
		Tetra landed = t;
    1b04:	04 97       	sbiw	r24, 0x04	; 4
    1b06:	fc f2       	brlt	.-66     	; 0x1ac6 <UpdateGame+0x460>
    1b08:	84 e1       	ldi	r24, 0x14	; 20
    1b0a:	ec e0       	ldi	r30, 0x0C	; 12
    1b0c:	f3 e0       	ldi	r31, 0x03	; 3
    1b0e:	de 01       	movw	r26, r28
    1b10:	5e 96       	adiw	r26, 0x1e	; 30
    1b12:	01 90       	ld	r0, Z+
		while(!land(&g, &landed)) {
    1b14:	0d 92       	st	X+, r0
			down(&landed);
    1b16:	8a 95       	dec	r24
    1b18:	e1 f7       	brne	.-8      	; 0x1b12 <UpdateGame+0x4ac>
    1b1a:	03 c0       	rjmp	.+6      	; 0x1b22 <UpdateGame+0x4bc>
    1b1c:	ce 01       	movw	r24, r28
			if(p.y < HEIGHT) {
				drawTile(p.x, p.y, 1);
			}
		}
		Tetra landed = t;
		while(!land(&g, &landed)) {
    1b1e:	4e 96       	adiw	r24, 0x1e	; 30
    1b20:	bd d8       	rcall	.-3718   	; 0xc9c <down>
    1b22:	ce 01       	movw	r24, r28
    1b24:	4e 96       	adiw	r24, 0x1e	; 30
    1b26:	bc 01       	movw	r22, r24
    1b28:	80 e2       	ldi	r24, 0x20	; 32
    1b2a:	93 e0       	ldi	r25, 0x03	; 3
    1b2c:	e1 db       	rcall	.-2110   	; 0x12f0 <land>
			down(&landed);
		}
		for(short i = 0; i < 4; i++) {
    1b2e:	88 23       	and	r24, r24
    1b30:	a9 f3       	breq	.-22     	; 0x1b1c <UpdateGame+0x4b6>
    1b32:	18 8a       	std	Y+16, r1	; 0x10
			Point p = getTile(&landed, i);
    1b34:	1f 86       	std	Y+15, r1	; 0x0f
    1b36:	1d c0       	rjmp	.+58     	; 0x1b72 <UpdateGame+0x50c>
    1b38:	2f 85       	ldd	r18, Y+15	; 0x0f
    1b3a:	38 89       	ldd	r19, Y+16	; 0x10
    1b3c:	ce 01       	movw	r24, r28
    1b3e:	4e 96       	adiw	r24, 0x1e	; 30
    1b40:	b9 01       	movw	r22, r18
    1b42:	88 d8       	rcall	.-3824   	; 0xc54 <getTile>
    1b44:	dc 01       	movw	r26, r24
    1b46:	cb 01       	movw	r24, r22
    1b48:	8e ab       	std	Y+54, r24	; 0x36
    1b4a:	9f ab       	std	Y+55, r25	; 0x37
    1b4c:	a8 af       	std	Y+56, r26	; 0x38
			if(p.y < HEIGHT) {
    1b4e:	b9 af       	std	Y+57, r27	; 0x39
    1b50:	88 ad       	ldd	r24, Y+56	; 0x38
    1b52:	99 ad       	ldd	r25, Y+57	; 0x39
    1b54:	45 97       	sbiw	r24, 0x15	; 21
				drawTile(p.x, p.y, 1);
    1b56:	44 f4       	brge	.+16     	; 0x1b68 <UpdateGame+0x502>
    1b58:	28 ad       	ldd	r18, Y+56	; 0x38
    1b5a:	39 ad       	ldd	r19, Y+57	; 0x39
    1b5c:	8e a9       	ldd	r24, Y+54	; 0x36
    1b5e:	9f a9       	ldd	r25, Y+55	; 0x37
    1b60:	41 e0       	ldi	r20, 0x01	; 1
    1b62:	50 e0       	ldi	r21, 0x00	; 0
    1b64:	b9 01       	movw	r22, r18
    1b66:	3b dd       	rcall	.-1418   	; 0x15de <drawTile>
		}
		Tetra landed = t;
		while(!land(&g, &landed)) {
			down(&landed);
		}
		for(short i = 0; i < 4; i++) {
    1b68:	8f 85       	ldd	r24, Y+15	; 0x0f
    1b6a:	98 89       	ldd	r25, Y+16	; 0x10
    1b6c:	01 96       	adiw	r24, 0x01	; 1
    1b6e:	98 8b       	std	Y+16, r25	; 0x10
    1b70:	8f 87       	std	Y+15, r24	; 0x0f
    1b72:	8f 85       	ldd	r24, Y+15	; 0x0f
    1b74:	98 89       	ldd	r25, Y+16	; 0x10
    1b76:	04 97       	sbiw	r24, 0x04	; 4
    1b78:	fc f2       	brlt	.-66     	; 0x1b38 <UpdateGame+0x4d2>
    1b7a:	8a c0       	rjmp	.+276    	; 0x1c90 <UpdateGame+0x62a>
			Point p = getTile(&landed, i);
			if(p.y < HEIGHT) {
				drawTile(p.x, p.y, 1);
			}
		}
	} else if(state == PlayInterval) {
    1b7c:	80 91 0b 03 	lds	r24, 0x030B	; 0x80030b <state.2265>
    1b80:	82 30       	cpi	r24, 0x02	; 2
    1b82:	09 f0       	breq	.+2      	; 0x1b86 <UpdateGame+0x520>
		for(short x = 0; x < WIDTH; x++) {
    1b84:	55 c0       	rjmp	.+170    	; 0x1c30 <UpdateGame+0x5ca>
    1b86:	1a 8a       	std	Y+18, r1	; 0x12
    1b88:	19 8a       	std	Y+17, r1	; 0x11
			for(short y = 0; y < HEIGHT; y++) {
    1b8a:	29 c0       	rjmp	.+82     	; 0x1bde <UpdateGame+0x578>
    1b8c:	1c 8a       	std	Y+20, r1	; 0x14
    1b8e:	1b 8a       	std	Y+19, r1	; 0x13
				drawTile(x, y, g.tiles[x][y]);
    1b90:	1d c0       	rjmp	.+58     	; 0x1bcc <UpdateGame+0x566>
    1b92:	89 89       	ldd	r24, Y+17	; 0x11
    1b94:	9a 89       	ldd	r25, Y+18	; 0x12
    1b96:	45 e1       	ldi	r20, 0x15	; 21
    1b98:	48 9f       	mul	r20, r24
    1b9a:	90 01       	movw	r18, r0
    1b9c:	49 9f       	mul	r20, r25
    1b9e:	30 0d       	add	r19, r0
    1ba0:	11 24       	eor	r1, r1
    1ba2:	8b 89       	ldd	r24, Y+19	; 0x13
    1ba4:	9c 89       	ldd	r25, Y+20	; 0x14
    1ba6:	82 0f       	add	r24, r18
    1ba8:	93 1f       	adc	r25, r19
    1baa:	80 5e       	subi	r24, 0xE0	; 224
    1bac:	9c 4f       	sbci	r25, 0xFC	; 252
    1bae:	fc 01       	movw	r30, r24
    1bb0:	80 81       	ld	r24, Z
    1bb2:	48 2f       	mov	r20, r24
    1bb4:	50 e0       	ldi	r21, 0x00	; 0
    1bb6:	2b 89       	ldd	r18, Y+19	; 0x13
    1bb8:	3c 89       	ldd	r19, Y+20	; 0x14
    1bba:	89 89       	ldd	r24, Y+17	; 0x11
    1bbc:	9a 89       	ldd	r25, Y+18	; 0x12
    1bbe:	b9 01       	movw	r22, r18
				drawTile(p.x, p.y, 1);
			}
		}
	} else if(state == PlayInterval) {
		for(short x = 0; x < WIDTH; x++) {
			for(short y = 0; y < HEIGHT; y++) {
    1bc0:	0e dd       	rcall	.-1508   	; 0x15de <drawTile>
    1bc2:	8b 89       	ldd	r24, Y+19	; 0x13
    1bc4:	9c 89       	ldd	r25, Y+20	; 0x14
    1bc6:	01 96       	adiw	r24, 0x01	; 1
    1bc8:	9c 8b       	std	Y+20, r25	; 0x14
    1bca:	8b 8b       	std	Y+19, r24	; 0x13
    1bcc:	8b 89       	ldd	r24, Y+19	; 0x13
    1bce:	9c 89       	ldd	r25, Y+20	; 0x14
    1bd0:	45 97       	sbiw	r24, 0x15	; 21
			if(p.y < HEIGHT) {
				drawTile(p.x, p.y, 1);
			}
		}
	} else if(state == PlayInterval) {
		for(short x = 0; x < WIDTH; x++) {
    1bd2:	fc f2       	brlt	.-66     	; 0x1b92 <UpdateGame+0x52c>
    1bd4:	89 89       	ldd	r24, Y+17	; 0x11
    1bd6:	9a 89       	ldd	r25, Y+18	; 0x12
    1bd8:	01 96       	adiw	r24, 0x01	; 1
    1bda:	9a 8b       	std	Y+18, r25	; 0x12
    1bdc:	89 8b       	std	Y+17, r24	; 0x11
    1bde:	89 89       	ldd	r24, Y+17	; 0x11
    1be0:	9a 89       	ldd	r25, Y+18	; 0x12
			for(short y = 0; y < HEIGHT; y++) {
				drawTile(x, y, g.tiles[x][y]);
			}
		}
		for(short i = 0; i < 4; i++) {
    1be2:	0c 97       	sbiw	r24, 0x0c	; 12
    1be4:	9c f2       	brlt	.-90     	; 0x1b8c <UpdateGame+0x526>
    1be6:	1e 8a       	std	Y+22, r1	; 0x16
			Point p = getTile(&t, i);
    1be8:	1d 8a       	std	Y+21, r1	; 0x15
    1bea:	1d c0       	rjmp	.+58     	; 0x1c26 <UpdateGame+0x5c0>
    1bec:	8d 89       	ldd	r24, Y+21	; 0x15
    1bee:	9e 89       	ldd	r25, Y+22	; 0x16
    1bf0:	bc 01       	movw	r22, r24
    1bf2:	8c e0       	ldi	r24, 0x0C	; 12
    1bf4:	93 e0       	ldi	r25, 0x03	; 3
    1bf6:	2e d8       	rcall	.-4004   	; 0xc54 <getTile>
    1bf8:	dc 01       	movw	r26, r24
    1bfa:	cb 01       	movw	r24, r22
    1bfc:	8a af       	std	Y+58, r24	; 0x3a
    1bfe:	9b af       	std	Y+59, r25	; 0x3b
    1c00:	ac af       	std	Y+60, r26	; 0x3c
			if(p.y < HEIGHT) {
    1c02:	bd af       	std	Y+61, r27	; 0x3d
    1c04:	8c ad       	ldd	r24, Y+60	; 0x3c
    1c06:	9d ad       	ldd	r25, Y+61	; 0x3d
    1c08:	45 97       	sbiw	r24, 0x15	; 21
				drawTile(p.x, p.y, 1);
    1c0a:	44 f4       	brge	.+16     	; 0x1c1c <UpdateGame+0x5b6>
    1c0c:	2c ad       	ldd	r18, Y+60	; 0x3c
    1c0e:	3d ad       	ldd	r19, Y+61	; 0x3d
    1c10:	8a ad       	ldd	r24, Y+58	; 0x3a
    1c12:	9b ad       	ldd	r25, Y+59	; 0x3b
    1c14:	41 e0       	ldi	r20, 0x01	; 1
    1c16:	50 e0       	ldi	r21, 0x00	; 0
    1c18:	b9 01       	movw	r22, r18
    1c1a:	e1 dc       	rcall	.-1598   	; 0x15de <drawTile>
		for(short x = 0; x < WIDTH; x++) {
			for(short y = 0; y < HEIGHT; y++) {
				drawTile(x, y, g.tiles[x][y]);
			}
		}
		for(short i = 0; i < 4; i++) {
    1c1c:	8d 89       	ldd	r24, Y+21	; 0x15
    1c1e:	9e 89       	ldd	r25, Y+22	; 0x16
    1c20:	01 96       	adiw	r24, 0x01	; 1
    1c22:	9e 8b       	std	Y+22, r25	; 0x16
    1c24:	8d 8b       	std	Y+21, r24	; 0x15
    1c26:	8d 89       	ldd	r24, Y+21	; 0x15
    1c28:	9e 89       	ldd	r25, Y+22	; 0x16
    1c2a:	04 97       	sbiw	r24, 0x04	; 4
    1c2c:	fc f2       	brlt	.-66     	; 0x1bec <UpdateGame+0x586>
				drawTile(p.x, p.y, 1);
			}
		}
	} else {
		//Otherwise just draw the grid
		for(short x = 0; x < WIDTH; x++) {
    1c2e:	30 c0       	rjmp	.+96     	; 0x1c90 <UpdateGame+0x62a>
    1c30:	18 8e       	std	Y+24, r1	; 0x18
    1c32:	1f 8a       	std	Y+23, r1	; 0x17
			for(short y = 0; y < HEIGHT; y++) {
    1c34:	29 c0       	rjmp	.+82     	; 0x1c88 <UpdateGame+0x622>
    1c36:	1a 8e       	std	Y+26, r1	; 0x1a
    1c38:	19 8e       	std	Y+25, r1	; 0x19
				drawTile(x, y, g.tiles[x][y]);
    1c3a:	1d c0       	rjmp	.+58     	; 0x1c76 <UpdateGame+0x610>
    1c3c:	8f 89       	ldd	r24, Y+23	; 0x17
    1c3e:	98 8d       	ldd	r25, Y+24	; 0x18
    1c40:	45 e1       	ldi	r20, 0x15	; 21
    1c42:	48 9f       	mul	r20, r24
    1c44:	90 01       	movw	r18, r0
    1c46:	49 9f       	mul	r20, r25
    1c48:	30 0d       	add	r19, r0
    1c4a:	11 24       	eor	r1, r1
    1c4c:	89 8d       	ldd	r24, Y+25	; 0x19
    1c4e:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1c50:	82 0f       	add	r24, r18
    1c52:	93 1f       	adc	r25, r19
    1c54:	80 5e       	subi	r24, 0xE0	; 224
    1c56:	9c 4f       	sbci	r25, 0xFC	; 252
    1c58:	fc 01       	movw	r30, r24
    1c5a:	80 81       	ld	r24, Z
    1c5c:	48 2f       	mov	r20, r24
    1c5e:	50 e0       	ldi	r21, 0x00	; 0
    1c60:	29 8d       	ldd	r18, Y+25	; 0x19
    1c62:	3a 8d       	ldd	r19, Y+26	; 0x1a
    1c64:	8f 89       	ldd	r24, Y+23	; 0x17
    1c66:	98 8d       	ldd	r25, Y+24	; 0x18
    1c68:	b9 01       	movw	r22, r18
    1c6a:	b9 dc       	rcall	.-1678   	; 0x15de <drawTile>
			}
		}
	} else {
		//Otherwise just draw the grid
		for(short x = 0; x < WIDTH; x++) {
			for(short y = 0; y < HEIGHT; y++) {
    1c6c:	89 8d       	ldd	r24, Y+25	; 0x19
    1c6e:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1c70:	01 96       	adiw	r24, 0x01	; 1
    1c72:	9a 8f       	std	Y+26, r25	; 0x1a
    1c74:	89 8f       	std	Y+25, r24	; 0x19
    1c76:	89 8d       	ldd	r24, Y+25	; 0x19
    1c78:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1c7a:	45 97       	sbiw	r24, 0x15	; 21
    1c7c:	fc f2       	brlt	.-66     	; 0x1c3c <UpdateGame+0x5d6>
				drawTile(p.x, p.y, 1);
			}
		}
	} else {
		//Otherwise just draw the grid
		for(short x = 0; x < WIDTH; x++) {
    1c7e:	8f 89       	ldd	r24, Y+23	; 0x17
    1c80:	98 8d       	ldd	r25, Y+24	; 0x18
    1c82:	01 96       	adiw	r24, 0x01	; 1
    1c84:	98 8f       	std	Y+24, r25	; 0x18
    1c86:	8f 8b       	std	Y+23, r24	; 0x17
    1c88:	8f 89       	ldd	r24, Y+23	; 0x17
    1c8a:	98 8d       	ldd	r25, Y+24	; 0x18
    1c8c:	0c 97       	sbiw	r24, 0x0c	; 12
    1c8e:	9c f2       	brlt	.-90     	; 0x1c36 <UpdateGame+0x5d0>
			for(short y = 0; y < HEIGHT; y++) {
				drawTile(x, y, g.tiles[x][y]);
			}
		}
	}
	nokia_lcd_render();
    1c90:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <nokia_lcd_render>
    1c94:	01 c0       	rjmp	.+2      	; 0x1c98 <UpdateGame+0x632>
	static short time = 0;

	//static char pressed_prev = 0;

	if(--time > 0) {
		return;
    1c96:	00 00       	nop
				drawTile(x, y, g.tiles[x][y]);
			}
		}
	}
	nokia_lcd_render();
}
    1c98:	cf 5a       	subi	r28, 0xAF	; 175
    1c9a:	df 4f       	sbci	r29, 0xFF	; 255
    1c9c:	0f b6       	in	r0, 0x3f	; 63
    1c9e:	f8 94       	cli
    1ca0:	de bf       	out	0x3e, r29	; 62
    1ca2:	0f be       	out	0x3f, r0	; 63
    1ca4:	cd bf       	out	0x3d, r28	; 61
    1ca6:	df 91       	pop	r29
    1ca8:	cf 91       	pop	r28
    1caa:	08 95       	ret

00001cac <main>:

int main(void)
{
    1cac:	cf 93       	push	r28
    1cae:	df 93       	push	r29
    1cb0:	cd b7       	in	r28, 0x3d	; 61
    1cb2:	de b7       	in	r29, 0x3e	; 62
    nokia_lcd_render();

	TimerSet(1000);
	TimerOn();
	*/
	DDR_BUTTONS = 0xFF;
    1cb4:	8a e2       	ldi	r24, 0x2A	; 42
    1cb6:	90 e0       	ldi	r25, 0x00	; 0
    1cb8:	2f ef       	ldi	r18, 0xFF	; 255
    1cba:	fc 01       	movw	r30, r24
    1cbc:	20 83       	st	Z, r18
	PIN_BUTTONS = -1;
    1cbe:	89 e2       	ldi	r24, 0x29	; 41
    1cc0:	90 e0       	ldi	r25, 0x00	; 0
    1cc2:	2f ef       	ldi	r18, 0xFF	; 255
    1cc4:	fc 01       	movw	r30, r24
    1cc6:	20 83       	st	Z, r18
	    nokia_lcd_init();
    1cc8:	0e 94 00 01 	call	0x200	; 0x200 <nokia_lcd_init>
	    nokia_lcd_clear();
    1ccc:	0e 94 75 02 	call	0x4ea	; 0x4ea <nokia_lcd_clear>
		TimerSet(10);
    1cd0:	6a e0       	ldi	r22, 0x0A	; 10
    1cd2:	70 e0       	ldi	r23, 0x00	; 0
    1cd4:	80 e0       	ldi	r24, 0x00	; 0
    1cd6:	90 e0       	ldi	r25, 0x00	; 0
    1cd8:	0e 94 13 03 	call	0x626	; 0x626 <TimerSet>
		TimerOn();
    1cdc:	0e 94 41 03 	call	0x682	; 0x682 <TimerOn>
	while(1) {
		UpdateGame();
    1ce0:	c2 dc       	rcall	.-1660   	; 0x1666 <UpdateGame>
		while(!TimerFlag);
    1ce2:	00 00       	nop
    1ce4:	80 91 04 03 	lds	r24, 0x0304	; 0x800304 <TimerFlag>
    1ce8:	88 23       	and	r24, r24
    1cea:	e1 f3       	breq	.-8      	; 0x1ce4 <main+0x38>
		TimerFlag = 0;
    1cec:	10 92 04 03 	sts	0x0304, r1	; 0x800304 <TimerFlag>
	}
    1cf0:	f7 cf       	rjmp	.-18     	; 0x1ce0 <main+0x34>

00001cf2 <__cmpsf2>:
    1cf2:	2f d0       	rcall	.+94     	; 0x1d52 <__fp_cmp>
    1cf4:	08 f4       	brcc	.+2      	; 0x1cf8 <__cmpsf2+0x6>
    1cf6:	81 e0       	ldi	r24, 0x01	; 1
    1cf8:	08 95       	ret

00001cfa <__fixunssfsi>:
    1cfa:	57 d0       	rcall	.+174    	; 0x1daa <__fp_splitA>
    1cfc:	88 f0       	brcs	.+34     	; 0x1d20 <__fixunssfsi+0x26>
    1cfe:	9f 57       	subi	r25, 0x7F	; 127
    1d00:	90 f0       	brcs	.+36     	; 0x1d26 <__fixunssfsi+0x2c>
    1d02:	b9 2f       	mov	r27, r25
    1d04:	99 27       	eor	r25, r25
    1d06:	b7 51       	subi	r27, 0x17	; 23
    1d08:	a0 f0       	brcs	.+40     	; 0x1d32 <__fixunssfsi+0x38>
    1d0a:	d1 f0       	breq	.+52     	; 0x1d40 <__fixunssfsi+0x46>
    1d0c:	66 0f       	add	r22, r22
    1d0e:	77 1f       	adc	r23, r23
    1d10:	88 1f       	adc	r24, r24
    1d12:	99 1f       	adc	r25, r25
    1d14:	1a f0       	brmi	.+6      	; 0x1d1c <__fixunssfsi+0x22>
    1d16:	ba 95       	dec	r27
    1d18:	c9 f7       	brne	.-14     	; 0x1d0c <__fixunssfsi+0x12>
    1d1a:	12 c0       	rjmp	.+36     	; 0x1d40 <__fixunssfsi+0x46>
    1d1c:	b1 30       	cpi	r27, 0x01	; 1
    1d1e:	81 f0       	breq	.+32     	; 0x1d40 <__fixunssfsi+0x46>
    1d20:	5e d0       	rcall	.+188    	; 0x1dde <__fp_zero>
    1d22:	b1 e0       	ldi	r27, 0x01	; 1
    1d24:	08 95       	ret
    1d26:	5b c0       	rjmp	.+182    	; 0x1dde <__fp_zero>
    1d28:	67 2f       	mov	r22, r23
    1d2a:	78 2f       	mov	r23, r24
    1d2c:	88 27       	eor	r24, r24
    1d2e:	b8 5f       	subi	r27, 0xF8	; 248
    1d30:	39 f0       	breq	.+14     	; 0x1d40 <__fixunssfsi+0x46>
    1d32:	b9 3f       	cpi	r27, 0xF9	; 249
    1d34:	cc f3       	brlt	.-14     	; 0x1d28 <__fixunssfsi+0x2e>
    1d36:	86 95       	lsr	r24
    1d38:	77 95       	ror	r23
    1d3a:	67 95       	ror	r22
    1d3c:	b3 95       	inc	r27
    1d3e:	d9 f7       	brne	.-10     	; 0x1d36 <__fixunssfsi+0x3c>
    1d40:	3e f4       	brtc	.+14     	; 0x1d50 <__fixunssfsi+0x56>
    1d42:	90 95       	com	r25
    1d44:	80 95       	com	r24
    1d46:	70 95       	com	r23
    1d48:	61 95       	neg	r22
    1d4a:	7f 4f       	sbci	r23, 0xFF	; 255
    1d4c:	8f 4f       	sbci	r24, 0xFF	; 255
    1d4e:	9f 4f       	sbci	r25, 0xFF	; 255
    1d50:	08 95       	ret

00001d52 <__fp_cmp>:
    1d52:	99 0f       	add	r25, r25
    1d54:	00 08       	sbc	r0, r0
    1d56:	55 0f       	add	r21, r21
    1d58:	aa 0b       	sbc	r26, r26
    1d5a:	e0 e8       	ldi	r30, 0x80	; 128
    1d5c:	fe ef       	ldi	r31, 0xFE	; 254
    1d5e:	16 16       	cp	r1, r22
    1d60:	17 06       	cpc	r1, r23
    1d62:	e8 07       	cpc	r30, r24
    1d64:	f9 07       	cpc	r31, r25
    1d66:	c0 f0       	brcs	.+48     	; 0x1d98 <__fp_cmp+0x46>
    1d68:	12 16       	cp	r1, r18
    1d6a:	13 06       	cpc	r1, r19
    1d6c:	e4 07       	cpc	r30, r20
    1d6e:	f5 07       	cpc	r31, r21
    1d70:	98 f0       	brcs	.+38     	; 0x1d98 <__fp_cmp+0x46>
    1d72:	62 1b       	sub	r22, r18
    1d74:	73 0b       	sbc	r23, r19
    1d76:	84 0b       	sbc	r24, r20
    1d78:	95 0b       	sbc	r25, r21
    1d7a:	39 f4       	brne	.+14     	; 0x1d8a <__fp_cmp+0x38>
    1d7c:	0a 26       	eor	r0, r26
    1d7e:	61 f0       	breq	.+24     	; 0x1d98 <__fp_cmp+0x46>
    1d80:	23 2b       	or	r18, r19
    1d82:	24 2b       	or	r18, r20
    1d84:	25 2b       	or	r18, r21
    1d86:	21 f4       	brne	.+8      	; 0x1d90 <__fp_cmp+0x3e>
    1d88:	08 95       	ret
    1d8a:	0a 26       	eor	r0, r26
    1d8c:	09 f4       	brne	.+2      	; 0x1d90 <__fp_cmp+0x3e>
    1d8e:	a1 40       	sbci	r26, 0x01	; 1
    1d90:	a6 95       	lsr	r26
    1d92:	8f ef       	ldi	r24, 0xFF	; 255
    1d94:	81 1d       	adc	r24, r1
    1d96:	81 1d       	adc	r24, r1
    1d98:	08 95       	ret

00001d9a <__fp_split3>:
    1d9a:	57 fd       	sbrc	r21, 7
    1d9c:	90 58       	subi	r25, 0x80	; 128
    1d9e:	44 0f       	add	r20, r20
    1da0:	55 1f       	adc	r21, r21
    1da2:	59 f0       	breq	.+22     	; 0x1dba <__fp_splitA+0x10>
    1da4:	5f 3f       	cpi	r21, 0xFF	; 255
    1da6:	71 f0       	breq	.+28     	; 0x1dc4 <__fp_splitA+0x1a>
    1da8:	47 95       	ror	r20

00001daa <__fp_splitA>:
    1daa:	88 0f       	add	r24, r24
    1dac:	97 fb       	bst	r25, 7
    1dae:	99 1f       	adc	r25, r25
    1db0:	61 f0       	breq	.+24     	; 0x1dca <__fp_splitA+0x20>
    1db2:	9f 3f       	cpi	r25, 0xFF	; 255
    1db4:	79 f0       	breq	.+30     	; 0x1dd4 <__fp_splitA+0x2a>
    1db6:	87 95       	ror	r24
    1db8:	08 95       	ret
    1dba:	12 16       	cp	r1, r18
    1dbc:	13 06       	cpc	r1, r19
    1dbe:	14 06       	cpc	r1, r20
    1dc0:	55 1f       	adc	r21, r21
    1dc2:	f2 cf       	rjmp	.-28     	; 0x1da8 <__fp_split3+0xe>
    1dc4:	46 95       	lsr	r20
    1dc6:	f1 df       	rcall	.-30     	; 0x1daa <__fp_splitA>
    1dc8:	08 c0       	rjmp	.+16     	; 0x1dda <__fp_splitA+0x30>
    1dca:	16 16       	cp	r1, r22
    1dcc:	17 06       	cpc	r1, r23
    1dce:	18 06       	cpc	r1, r24
    1dd0:	99 1f       	adc	r25, r25
    1dd2:	f1 cf       	rjmp	.-30     	; 0x1db6 <__fp_splitA+0xc>
    1dd4:	86 95       	lsr	r24
    1dd6:	71 05       	cpc	r23, r1
    1dd8:	61 05       	cpc	r22, r1
    1dda:	08 94       	sec
    1ddc:	08 95       	ret

00001dde <__fp_zero>:
    1dde:	e8 94       	clt

00001de0 <__fp_szero>:
    1de0:	bb 27       	eor	r27, r27
    1de2:	66 27       	eor	r22, r22
    1de4:	77 27       	eor	r23, r23
    1de6:	cb 01       	movw	r24, r22
    1de8:	97 f9       	bld	r25, 7
    1dea:	08 95       	ret

00001dec <__gesf2>:
    1dec:	b2 df       	rcall	.-156    	; 0x1d52 <__fp_cmp>
    1dee:	08 f4       	brcc	.+2      	; 0x1df2 <__gesf2+0x6>
    1df0:	8f ef       	ldi	r24, 0xFF	; 255
    1df2:	08 95       	ret

00001df4 <__mulsf3>:
    1df4:	0b d0       	rcall	.+22     	; 0x1e0c <__mulsf3x>
    1df6:	78 c0       	rjmp	.+240    	; 0x1ee8 <__fp_round>
    1df8:	69 d0       	rcall	.+210    	; 0x1ecc <__fp_pscA>
    1dfa:	28 f0       	brcs	.+10     	; 0x1e06 <__mulsf3+0x12>
    1dfc:	6e d0       	rcall	.+220    	; 0x1eda <__fp_pscB>
    1dfe:	18 f0       	brcs	.+6      	; 0x1e06 <__mulsf3+0x12>
    1e00:	95 23       	and	r25, r21
    1e02:	09 f0       	breq	.+2      	; 0x1e06 <__mulsf3+0x12>
    1e04:	5a c0       	rjmp	.+180    	; 0x1eba <__fp_inf>
    1e06:	5f c0       	rjmp	.+190    	; 0x1ec6 <__fp_nan>
    1e08:	11 24       	eor	r1, r1
    1e0a:	ea cf       	rjmp	.-44     	; 0x1de0 <__fp_szero>

00001e0c <__mulsf3x>:
    1e0c:	c6 df       	rcall	.-116    	; 0x1d9a <__fp_split3>
    1e0e:	a0 f3       	brcs	.-24     	; 0x1df8 <__mulsf3+0x4>

00001e10 <__mulsf3_pse>:
    1e10:	95 9f       	mul	r25, r21
    1e12:	d1 f3       	breq	.-12     	; 0x1e08 <__mulsf3+0x14>
    1e14:	95 0f       	add	r25, r21
    1e16:	50 e0       	ldi	r21, 0x00	; 0
    1e18:	55 1f       	adc	r21, r21
    1e1a:	62 9f       	mul	r22, r18
    1e1c:	f0 01       	movw	r30, r0
    1e1e:	72 9f       	mul	r23, r18
    1e20:	bb 27       	eor	r27, r27
    1e22:	f0 0d       	add	r31, r0
    1e24:	b1 1d       	adc	r27, r1
    1e26:	63 9f       	mul	r22, r19
    1e28:	aa 27       	eor	r26, r26
    1e2a:	f0 0d       	add	r31, r0
    1e2c:	b1 1d       	adc	r27, r1
    1e2e:	aa 1f       	adc	r26, r26
    1e30:	64 9f       	mul	r22, r20
    1e32:	66 27       	eor	r22, r22
    1e34:	b0 0d       	add	r27, r0
    1e36:	a1 1d       	adc	r26, r1
    1e38:	66 1f       	adc	r22, r22
    1e3a:	82 9f       	mul	r24, r18
    1e3c:	22 27       	eor	r18, r18
    1e3e:	b0 0d       	add	r27, r0
    1e40:	a1 1d       	adc	r26, r1
    1e42:	62 1f       	adc	r22, r18
    1e44:	73 9f       	mul	r23, r19
    1e46:	b0 0d       	add	r27, r0
    1e48:	a1 1d       	adc	r26, r1
    1e4a:	62 1f       	adc	r22, r18
    1e4c:	83 9f       	mul	r24, r19
    1e4e:	a0 0d       	add	r26, r0
    1e50:	61 1d       	adc	r22, r1
    1e52:	22 1f       	adc	r18, r18
    1e54:	74 9f       	mul	r23, r20
    1e56:	33 27       	eor	r19, r19
    1e58:	a0 0d       	add	r26, r0
    1e5a:	61 1d       	adc	r22, r1
    1e5c:	23 1f       	adc	r18, r19
    1e5e:	84 9f       	mul	r24, r20
    1e60:	60 0d       	add	r22, r0
    1e62:	21 1d       	adc	r18, r1
    1e64:	82 2f       	mov	r24, r18
    1e66:	76 2f       	mov	r23, r22
    1e68:	6a 2f       	mov	r22, r26
    1e6a:	11 24       	eor	r1, r1
    1e6c:	9f 57       	subi	r25, 0x7F	; 127
    1e6e:	50 40       	sbci	r21, 0x00	; 0
    1e70:	8a f0       	brmi	.+34     	; 0x1e94 <__mulsf3_pse+0x84>
    1e72:	e1 f0       	breq	.+56     	; 0x1eac <__mulsf3_pse+0x9c>
    1e74:	88 23       	and	r24, r24
    1e76:	4a f0       	brmi	.+18     	; 0x1e8a <__mulsf3_pse+0x7a>
    1e78:	ee 0f       	add	r30, r30
    1e7a:	ff 1f       	adc	r31, r31
    1e7c:	bb 1f       	adc	r27, r27
    1e7e:	66 1f       	adc	r22, r22
    1e80:	77 1f       	adc	r23, r23
    1e82:	88 1f       	adc	r24, r24
    1e84:	91 50       	subi	r25, 0x01	; 1
    1e86:	50 40       	sbci	r21, 0x00	; 0
    1e88:	a9 f7       	brne	.-22     	; 0x1e74 <__mulsf3_pse+0x64>
    1e8a:	9e 3f       	cpi	r25, 0xFE	; 254
    1e8c:	51 05       	cpc	r21, r1
    1e8e:	70 f0       	brcs	.+28     	; 0x1eac <__mulsf3_pse+0x9c>
    1e90:	14 c0       	rjmp	.+40     	; 0x1eba <__fp_inf>
    1e92:	a6 cf       	rjmp	.-180    	; 0x1de0 <__fp_szero>
    1e94:	5f 3f       	cpi	r21, 0xFF	; 255
    1e96:	ec f3       	brlt	.-6      	; 0x1e92 <__mulsf3_pse+0x82>
    1e98:	98 3e       	cpi	r25, 0xE8	; 232
    1e9a:	dc f3       	brlt	.-10     	; 0x1e92 <__mulsf3_pse+0x82>
    1e9c:	86 95       	lsr	r24
    1e9e:	77 95       	ror	r23
    1ea0:	67 95       	ror	r22
    1ea2:	b7 95       	ror	r27
    1ea4:	f7 95       	ror	r31
    1ea6:	e7 95       	ror	r30
    1ea8:	9f 5f       	subi	r25, 0xFF	; 255
    1eaa:	c1 f7       	brne	.-16     	; 0x1e9c <__mulsf3_pse+0x8c>
    1eac:	fe 2b       	or	r31, r30
    1eae:	88 0f       	add	r24, r24
    1eb0:	91 1d       	adc	r25, r1
    1eb2:	96 95       	lsr	r25
    1eb4:	87 95       	ror	r24
    1eb6:	97 f9       	bld	r25, 7
    1eb8:	08 95       	ret

00001eba <__fp_inf>:
    1eba:	97 f9       	bld	r25, 7
    1ebc:	9f 67       	ori	r25, 0x7F	; 127
    1ebe:	80 e8       	ldi	r24, 0x80	; 128
    1ec0:	70 e0       	ldi	r23, 0x00	; 0
    1ec2:	60 e0       	ldi	r22, 0x00	; 0
    1ec4:	08 95       	ret

00001ec6 <__fp_nan>:
    1ec6:	9f ef       	ldi	r25, 0xFF	; 255
    1ec8:	80 ec       	ldi	r24, 0xC0	; 192
    1eca:	08 95       	ret

00001ecc <__fp_pscA>:
    1ecc:	00 24       	eor	r0, r0
    1ece:	0a 94       	dec	r0
    1ed0:	16 16       	cp	r1, r22
    1ed2:	17 06       	cpc	r1, r23
    1ed4:	18 06       	cpc	r1, r24
    1ed6:	09 06       	cpc	r0, r25
    1ed8:	08 95       	ret

00001eda <__fp_pscB>:
    1eda:	00 24       	eor	r0, r0
    1edc:	0a 94       	dec	r0
    1ede:	12 16       	cp	r1, r18
    1ee0:	13 06       	cpc	r1, r19
    1ee2:	14 06       	cpc	r1, r20
    1ee4:	05 06       	cpc	r0, r21
    1ee6:	08 95       	ret

00001ee8 <__fp_round>:
    1ee8:	09 2e       	mov	r0, r25
    1eea:	03 94       	inc	r0
    1eec:	00 0c       	add	r0, r0
    1eee:	11 f4       	brne	.+4      	; 0x1ef4 <__fp_round+0xc>
    1ef0:	88 23       	and	r24, r24
    1ef2:	52 f0       	brmi	.+20     	; 0x1f08 <__fp_round+0x20>
    1ef4:	bb 0f       	add	r27, r27
    1ef6:	40 f4       	brcc	.+16     	; 0x1f08 <__fp_round+0x20>
    1ef8:	bf 2b       	or	r27, r31
    1efa:	11 f4       	brne	.+4      	; 0x1f00 <__fp_round+0x18>
    1efc:	60 ff       	sbrs	r22, 0
    1efe:	04 c0       	rjmp	.+8      	; 0x1f08 <__fp_round+0x20>
    1f00:	6f 5f       	subi	r22, 0xFF	; 255
    1f02:	7f 4f       	sbci	r23, 0xFF	; 255
    1f04:	8f 4f       	sbci	r24, 0xFF	; 255
    1f06:	9f 4f       	sbci	r25, 0xFF	; 255
    1f08:	08 95       	ret

00001f0a <__divmodhi4>:
    1f0a:	97 fb       	bst	r25, 7
    1f0c:	07 2e       	mov	r0, r23
    1f0e:	16 f4       	brtc	.+4      	; 0x1f14 <__divmodhi4+0xa>
    1f10:	00 94       	com	r0
    1f12:	06 d0       	rcall	.+12     	; 0x1f20 <__divmodhi4_neg1>
    1f14:	77 fd       	sbrc	r23, 7
    1f16:	08 d0       	rcall	.+16     	; 0x1f28 <__divmodhi4_neg2>
    1f18:	14 d0       	rcall	.+40     	; 0x1f42 <__udivmodhi4>
    1f1a:	07 fc       	sbrc	r0, 7
    1f1c:	05 d0       	rcall	.+10     	; 0x1f28 <__divmodhi4_neg2>
    1f1e:	3e f4       	brtc	.+14     	; 0x1f2e <__divmodhi4_exit>

00001f20 <__divmodhi4_neg1>:
    1f20:	90 95       	com	r25
    1f22:	81 95       	neg	r24
    1f24:	9f 4f       	sbci	r25, 0xFF	; 255
    1f26:	08 95       	ret

00001f28 <__divmodhi4_neg2>:
    1f28:	70 95       	com	r23
    1f2a:	61 95       	neg	r22
    1f2c:	7f 4f       	sbci	r23, 0xFF	; 255

00001f2e <__divmodhi4_exit>:
    1f2e:	08 95       	ret

00001f30 <__tablejump2__>:
    1f30:	ee 0f       	add	r30, r30
    1f32:	ff 1f       	adc	r31, r31
    1f34:	00 24       	eor	r0, r0
    1f36:	00 1c       	adc	r0, r0
    1f38:	0b be       	out	0x3b, r0	; 59
    1f3a:	07 90       	elpm	r0, Z+
    1f3c:	f6 91       	elpm	r31, Z
    1f3e:	e0 2d       	mov	r30, r0
    1f40:	09 94       	ijmp

00001f42 <__udivmodhi4>:
    1f42:	aa 1b       	sub	r26, r26
    1f44:	bb 1b       	sub	r27, r27
    1f46:	51 e1       	ldi	r21, 0x11	; 17
    1f48:	07 c0       	rjmp	.+14     	; 0x1f58 <__udivmodhi4_ep>

00001f4a <__udivmodhi4_loop>:
    1f4a:	aa 1f       	adc	r26, r26
    1f4c:	bb 1f       	adc	r27, r27
    1f4e:	a6 17       	cp	r26, r22
    1f50:	b7 07       	cpc	r27, r23
    1f52:	10 f0       	brcs	.+4      	; 0x1f58 <__udivmodhi4_ep>
    1f54:	a6 1b       	sub	r26, r22
    1f56:	b7 0b       	sbc	r27, r23

00001f58 <__udivmodhi4_ep>:
    1f58:	88 1f       	adc	r24, r24
    1f5a:	99 1f       	adc	r25, r25
    1f5c:	5a 95       	dec	r21
    1f5e:	a9 f7       	brne	.-22     	; 0x1f4a <__udivmodhi4_loop>
    1f60:	80 95       	com	r24
    1f62:	90 95       	com	r25
    1f64:	bc 01       	movw	r22, r24
    1f66:	cd 01       	movw	r24, r26
    1f68:	08 95       	ret

00001f6a <do_rand>:
    1f6a:	8f 92       	push	r8
    1f6c:	9f 92       	push	r9
    1f6e:	af 92       	push	r10
    1f70:	bf 92       	push	r11
    1f72:	cf 92       	push	r12
    1f74:	df 92       	push	r13
    1f76:	ef 92       	push	r14
    1f78:	ff 92       	push	r15
    1f7a:	cf 93       	push	r28
    1f7c:	df 93       	push	r29
    1f7e:	ec 01       	movw	r28, r24
    1f80:	68 81       	ld	r22, Y
    1f82:	79 81       	ldd	r23, Y+1	; 0x01
    1f84:	8a 81       	ldd	r24, Y+2	; 0x02
    1f86:	9b 81       	ldd	r25, Y+3	; 0x03
    1f88:	61 15       	cp	r22, r1
    1f8a:	71 05       	cpc	r23, r1
    1f8c:	81 05       	cpc	r24, r1
    1f8e:	91 05       	cpc	r25, r1
    1f90:	21 f4       	brne	.+8      	; 0x1f9a <do_rand+0x30>
    1f92:	64 e2       	ldi	r22, 0x24	; 36
    1f94:	79 ed       	ldi	r23, 0xD9	; 217
    1f96:	8b e5       	ldi	r24, 0x5B	; 91
    1f98:	97 e0       	ldi	r25, 0x07	; 7
    1f9a:	2d e1       	ldi	r18, 0x1D	; 29
    1f9c:	33 ef       	ldi	r19, 0xF3	; 243
    1f9e:	41 e0       	ldi	r20, 0x01	; 1
    1fa0:	50 e0       	ldi	r21, 0x00	; 0
    1fa2:	38 d0       	rcall	.+112    	; 0x2014 <__divmodsi4>
    1fa4:	49 01       	movw	r8, r18
    1fa6:	5a 01       	movw	r10, r20
    1fa8:	9b 01       	movw	r18, r22
    1faa:	ac 01       	movw	r20, r24
    1fac:	a7 ea       	ldi	r26, 0xA7	; 167
    1fae:	b1 e4       	ldi	r27, 0x41	; 65
    1fb0:	4d d0       	rcall	.+154    	; 0x204c <__muluhisi3>
    1fb2:	6b 01       	movw	r12, r22
    1fb4:	7c 01       	movw	r14, r24
    1fb6:	ac ee       	ldi	r26, 0xEC	; 236
    1fb8:	b4 ef       	ldi	r27, 0xF4	; 244
    1fba:	a5 01       	movw	r20, r10
    1fbc:	94 01       	movw	r18, r8
    1fbe:	52 d0       	rcall	.+164    	; 0x2064 <__mulohisi3>
    1fc0:	dc 01       	movw	r26, r24
    1fc2:	cb 01       	movw	r24, r22
    1fc4:	8c 0d       	add	r24, r12
    1fc6:	9d 1d       	adc	r25, r13
    1fc8:	ae 1d       	adc	r26, r14
    1fca:	bf 1d       	adc	r27, r15
    1fcc:	b7 ff       	sbrs	r27, 7
    1fce:	03 c0       	rjmp	.+6      	; 0x1fd6 <do_rand+0x6c>
    1fd0:	01 97       	sbiw	r24, 0x01	; 1
    1fd2:	a1 09       	sbc	r26, r1
    1fd4:	b0 48       	sbci	r27, 0x80	; 128
    1fd6:	88 83       	st	Y, r24
    1fd8:	99 83       	std	Y+1, r25	; 0x01
    1fda:	aa 83       	std	Y+2, r26	; 0x02
    1fdc:	bb 83       	std	Y+3, r27	; 0x03
    1fde:	9f 77       	andi	r25, 0x7F	; 127
    1fe0:	df 91       	pop	r29
    1fe2:	cf 91       	pop	r28
    1fe4:	ff 90       	pop	r15
    1fe6:	ef 90       	pop	r14
    1fe8:	df 90       	pop	r13
    1fea:	cf 90       	pop	r12
    1fec:	bf 90       	pop	r11
    1fee:	af 90       	pop	r10
    1ff0:	9f 90       	pop	r9
    1ff2:	8f 90       	pop	r8
    1ff4:	08 95       	ret

00001ff6 <rand_r>:
    1ff6:	b9 cf       	rjmp	.-142    	; 0x1f6a <do_rand>

00001ff8 <rand>:
    1ff8:	80 e0       	ldi	r24, 0x00	; 0
    1ffa:	91 e0       	ldi	r25, 0x01	; 1
    1ffc:	b6 cf       	rjmp	.-148    	; 0x1f6a <do_rand>

00001ffe <srand>:
    1ffe:	a0 e0       	ldi	r26, 0x00	; 0
    2000:	b0 e0       	ldi	r27, 0x00	; 0
    2002:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    2006:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
    200a:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
    200e:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
    2012:	08 95       	ret

00002014 <__divmodsi4>:
    2014:	05 2e       	mov	r0, r21
    2016:	97 fb       	bst	r25, 7
    2018:	16 f4       	brtc	.+4      	; 0x201e <__divmodsi4+0xa>
    201a:	00 94       	com	r0
    201c:	0f d0       	rcall	.+30     	; 0x203c <__negsi2>
    201e:	57 fd       	sbrc	r21, 7
    2020:	05 d0       	rcall	.+10     	; 0x202c <__divmodsi4_neg2>
    2022:	24 d0       	rcall	.+72     	; 0x206c <__udivmodsi4>
    2024:	07 fc       	sbrc	r0, 7
    2026:	02 d0       	rcall	.+4      	; 0x202c <__divmodsi4_neg2>
    2028:	46 f4       	brtc	.+16     	; 0x203a <__divmodsi4_exit>
    202a:	08 c0       	rjmp	.+16     	; 0x203c <__negsi2>

0000202c <__divmodsi4_neg2>:
    202c:	50 95       	com	r21
    202e:	40 95       	com	r20
    2030:	30 95       	com	r19
    2032:	21 95       	neg	r18
    2034:	3f 4f       	sbci	r19, 0xFF	; 255
    2036:	4f 4f       	sbci	r20, 0xFF	; 255
    2038:	5f 4f       	sbci	r21, 0xFF	; 255

0000203a <__divmodsi4_exit>:
    203a:	08 95       	ret

0000203c <__negsi2>:
    203c:	90 95       	com	r25
    203e:	80 95       	com	r24
    2040:	70 95       	com	r23
    2042:	61 95       	neg	r22
    2044:	7f 4f       	sbci	r23, 0xFF	; 255
    2046:	8f 4f       	sbci	r24, 0xFF	; 255
    2048:	9f 4f       	sbci	r25, 0xFF	; 255
    204a:	08 95       	ret

0000204c <__muluhisi3>:
    204c:	31 d0       	rcall	.+98     	; 0x20b0 <__umulhisi3>
    204e:	a5 9f       	mul	r26, r21
    2050:	90 0d       	add	r25, r0
    2052:	b4 9f       	mul	r27, r20
    2054:	90 0d       	add	r25, r0
    2056:	a4 9f       	mul	r26, r20
    2058:	80 0d       	add	r24, r0
    205a:	91 1d       	adc	r25, r1
    205c:	11 24       	eor	r1, r1
    205e:	08 95       	ret

00002060 <__mulshisi3>:
    2060:	b7 ff       	sbrs	r27, 7
    2062:	f4 cf       	rjmp	.-24     	; 0x204c <__muluhisi3>

00002064 <__mulohisi3>:
    2064:	f3 df       	rcall	.-26     	; 0x204c <__muluhisi3>
    2066:	82 1b       	sub	r24, r18
    2068:	93 0b       	sbc	r25, r19
    206a:	08 95       	ret

0000206c <__udivmodsi4>:
    206c:	a1 e2       	ldi	r26, 0x21	; 33
    206e:	1a 2e       	mov	r1, r26
    2070:	aa 1b       	sub	r26, r26
    2072:	bb 1b       	sub	r27, r27
    2074:	fd 01       	movw	r30, r26
    2076:	0d c0       	rjmp	.+26     	; 0x2092 <__udivmodsi4_ep>

00002078 <__udivmodsi4_loop>:
    2078:	aa 1f       	adc	r26, r26
    207a:	bb 1f       	adc	r27, r27
    207c:	ee 1f       	adc	r30, r30
    207e:	ff 1f       	adc	r31, r31
    2080:	a2 17       	cp	r26, r18
    2082:	b3 07       	cpc	r27, r19
    2084:	e4 07       	cpc	r30, r20
    2086:	f5 07       	cpc	r31, r21
    2088:	20 f0       	brcs	.+8      	; 0x2092 <__udivmodsi4_ep>
    208a:	a2 1b       	sub	r26, r18
    208c:	b3 0b       	sbc	r27, r19
    208e:	e4 0b       	sbc	r30, r20
    2090:	f5 0b       	sbc	r31, r21

00002092 <__udivmodsi4_ep>:
    2092:	66 1f       	adc	r22, r22
    2094:	77 1f       	adc	r23, r23
    2096:	88 1f       	adc	r24, r24
    2098:	99 1f       	adc	r25, r25
    209a:	1a 94       	dec	r1
    209c:	69 f7       	brne	.-38     	; 0x2078 <__udivmodsi4_loop>
    209e:	60 95       	com	r22
    20a0:	70 95       	com	r23
    20a2:	80 95       	com	r24
    20a4:	90 95       	com	r25
    20a6:	9b 01       	movw	r18, r22
    20a8:	ac 01       	movw	r20, r24
    20aa:	bd 01       	movw	r22, r26
    20ac:	cf 01       	movw	r24, r30
    20ae:	08 95       	ret

000020b0 <__umulhisi3>:
    20b0:	a2 9f       	mul	r26, r18
    20b2:	b0 01       	movw	r22, r0
    20b4:	b3 9f       	mul	r27, r19
    20b6:	c0 01       	movw	r24, r0
    20b8:	a3 9f       	mul	r26, r19
    20ba:	70 0d       	add	r23, r0
    20bc:	81 1d       	adc	r24, r1
    20be:	11 24       	eor	r1, r1
    20c0:	91 1d       	adc	r25, r1
    20c2:	b2 9f       	mul	r27, r18
    20c4:	70 0d       	add	r23, r0
    20c6:	81 1d       	adc	r24, r1
    20c8:	11 24       	eor	r1, r1
    20ca:	91 1d       	adc	r25, r1
    20cc:	08 95       	ret

000020ce <_exit>:
    20ce:	f8 94       	cli

000020d0 <__stop_program>:
    20d0:	ff cf       	rjmp	.-2      	; 0x20d0 <__stop_program>
