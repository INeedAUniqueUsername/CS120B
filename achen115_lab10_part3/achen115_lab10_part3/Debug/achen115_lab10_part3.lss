
achen115_lab10_part3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  0000024c  000002e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000024c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  00800104  00800104  000002e4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000002e4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000314  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a0  00000000  00000000  00000354  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000d1d  00000000  00000000  000003f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008dc  00000000  00000000  00001111  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005fa  00000000  00000000  000019ed  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000178  00000000  00000000  00001fe8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000545  00000000  00000000  00002160  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000539  00000000  00000000  000026a5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000090  00000000  00000000  00002bde  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	6d c0       	rjmp	.+218    	; 0x110 <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ec e4       	ldi	r30, 0x4C	; 76
  a0:	f2 e0       	ldi	r31, 0x02	; 2
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 30       	cpi	r26, 0x04	; 4
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a4 e0       	ldi	r26, 0x04	; 4
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a9 30       	cpi	r26, 0x09	; 9
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	73 d0       	rcall	.+230    	; 0x1aa <main>
  c4:	c1 c0       	rjmp	.+386    	; 0x248 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <TimerOn>:
	TimerSet(length);
	TimerOn();
	while(!TimerFlag);
	TimerFlag = 0;
	TimerOff();
}
  c8:	8b e0       	ldi	r24, 0x0B	; 11
  ca:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
  ce:	8d e7       	ldi	r24, 0x7D	; 125
  d0:	90 e0       	ldi	r25, 0x00	; 0
  d2:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
  d6:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
  da:	82 e0       	ldi	r24, 0x02	; 2
  dc:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
  e0:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
  e4:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
  e8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
  ec:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
  f0:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
  f4:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
  f8:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
  fc:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <__data_end+0x1>
 100:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <__data_end+0x2>
 104:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <__data_end+0x3>
 108:	8f b7       	in	r24, 0x3f	; 63
 10a:	80 68       	ori	r24, 0x80	; 128
 10c:	8f bf       	out	0x3f, r24	; 63
 10e:	08 95       	ret

00000110 <__vector_13>:
 110:	1f 92       	push	r1
 112:	0f 92       	push	r0
 114:	0f b6       	in	r0, 0x3f	; 63
 116:	0f 92       	push	r0
 118:	11 24       	eor	r1, r1
 11a:	8f 93       	push	r24
 11c:	9f 93       	push	r25
 11e:	af 93       	push	r26
 120:	bf 93       	push	r27
 122:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
 126:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <__data_end+0x1>
 12a:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <__data_end+0x2>
 12e:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <__data_end+0x3>
 132:	01 97       	sbiw	r24, 0x01	; 1
 134:	a1 09       	sbc	r26, r1
 136:	b1 09       	sbc	r27, r1
 138:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
 13c:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <__data_end+0x1>
 140:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <__data_end+0x2>
 144:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <__data_end+0x3>
 148:	89 2b       	or	r24, r25
 14a:	8a 2b       	or	r24, r26
 14c:	8b 2b       	or	r24, r27
 14e:	99 f4       	brne	.+38     	; 0x176 <__vector_13+0x66>
 150:	81 e0       	ldi	r24, 0x01	; 1
 152:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <TimerFlag>
 156:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 15a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 15e:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 162:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 166:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
 16a:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <__data_end+0x1>
 16e:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <__data_end+0x2>
 172:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <__data_end+0x3>
 176:	bf 91       	pop	r27
 178:	af 91       	pop	r26
 17a:	9f 91       	pop	r25
 17c:	8f 91       	pop	r24
 17e:	0f 90       	pop	r0
 180:	0f be       	out	0x3f, r0	; 63
 182:	0f 90       	pop	r0
 184:	1f 90       	pop	r1
 186:	18 95       	reti

00000188 <TimerSet>:
 188:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__data_start>
 18c:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__data_start+0x1>
 190:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_start+0x2>
 194:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__data_start+0x3>
 198:	60 93 04 01 	sts	0x0104, r22	; 0x800104 <__data_end>
 19c:	70 93 05 01 	sts	0x0105, r23	; 0x800105 <__data_end+0x1>
 1a0:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <__data_end+0x2>
 1a4:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <__data_end+0x3>
 1a8:	08 95       	ret

000001aa <main>:
int main(void)
{
    /* Replace with your application code */
	DDRA = 0;	PINA = -1;
 1aa:	11 b8       	out	0x01, r1	; 1
 1ac:	8f ef       	ldi	r24, 0xFF	; 255
 1ae:	80 b9       	out	0x00, r24	; 0
	DDRB = 0x1F; PORTB = 0;
 1b0:	8f e1       	ldi	r24, 0x1F	; 31
 1b2:	84 b9       	out	0x04, r24	; 4
 1b4:	15 b8       	out	0x05, r1	; 5
	char three = 1;
	char blink = 0;
	unsigned short tick_sound = 2;
	unsigned short tick_three = 300;
	unsigned short tick_blink = 1000;
	TimerSet(1);
 1b6:	61 e0       	ldi	r22, 0x01	; 1
 1b8:	70 e0       	ldi	r23, 0x00	; 0
 1ba:	80 e0       	ldi	r24, 0x00	; 0
 1bc:	90 e0       	ldi	r25, 0x00	; 0
 1be:	e4 df       	rcall	.-56     	; 0x188 <TimerSet>
	TimerOn();
 1c0:	83 df       	rcall	.-250    	; 0xc8 <TimerOn>
 1c2:	15 b8       	out	0x05, r1	; 5
	PORTB = 0;
 1c4:	48 ee       	ldi	r20, 0xE8	; 232
	char sound = 0;
	char three = 1;
	char blink = 0;
	unsigned short tick_sound = 2;
	unsigned short tick_three = 300;
	unsigned short tick_blink = 1000;
 1c6:	53 e0       	ldi	r21, 0x03	; 3
 1c8:	2c e2       	ldi	r18, 0x2C	; 44
	DDRB = 0x1F; PORTB = 0;
	char sound = 0;
	char three = 1;
	char blink = 0;
	unsigned short tick_sound = 2;
	unsigned short tick_three = 300;
 1ca:	31 e0       	ldi	r19, 0x01	; 1
 1cc:	e0 e0       	ldi	r30, 0x00	; 0
    /* Replace with your application code */
	DDRA = 0;	PINA = -1;
	DDRB = 0x1F; PORTB = 0;
	char sound = 0;
	char three = 1;
	char blink = 0;
 1ce:	91 e0       	ldi	r25, 0x01	; 1
{
    /* Replace with your application code */
	DDRA = 0;	PINA = -1;
	DDRB = 0x1F; PORTB = 0;
	char sound = 0;
	char three = 1;
 1d0:	61 e0       	ldi	r22, 0x01	; 1
	unsigned short tick_blink = 1000;
	TimerSet(1);
	TimerOn();
	PORTB = 0;
	while(1) {
		if(--tick_sound == 0) {
 1d2:	70 e0       	ldi	r23, 0x00	; 0
 1d4:	f0 e0       	ldi	r31, 0x00	; 0
int main(void)
{
    /* Replace with your application code */
	DDRA = 0;	PINA = -1;
	DDRB = 0x1F; PORTB = 0;
	char sound = 0;
 1d6:	a0 e0       	ldi	r26, 0x00	; 0
		}
		if(--tick_blink == 0) {
			tick_blink = 1000;

			if(blink) {
				blink = 0;
 1d8:	b8 e0       	ldi	r27, 0x08	; 8
			} else {
				blink = 8;
 1da:	c0 e1       	ldi	r28, 0x10	; 16
	TimerOn();
	PORTB = 0;
	while(1) {
		if(--tick_sound == 0) {
			if(~PINA & 4) {
				sound = sound ? 0 : 16;
 1dc:	0f c0       	rjmp	.+30     	; 0x1fc <main+0x52>
 1de:	02 99       	sbic	0x00, 2	; 0
	TimerSet(1);
	TimerOn();
	PORTB = 0;
	while(1) {
		if(--tick_sound == 0) {
			if(~PINA & 4) {
 1e0:	06 c0       	rjmp	.+12     	; 0x1ee <main+0x44>
 1e2:	f1 11       	cpse	r31, r1
				sound = sound ? 0 : 16;
 1e4:	08 c0       	rjmp	.+16     	; 0x1f6 <main+0x4c>
 1e6:	62 e0       	ldi	r22, 0x02	; 2
			} else {
				sound = 0;
			}
			
			//set_PWM(sound ? 261.63 : 0);
			tick_sound = 2;
 1e8:	70 e0       	ldi	r23, 0x00	; 0
 1ea:	fc 2f       	mov	r31, r28
	TimerOn();
	PORTB = 0;
	while(1) {
		if(--tick_sound == 0) {
			if(~PINA & 4) {
				sound = sound ? 0 : 16;
 1ec:	07 c0       	rjmp	.+14     	; 0x1fc <main+0x52>
 1ee:	62 e0       	ldi	r22, 0x02	; 2
			} else {
				sound = 0;
			}
			
			//set_PWM(sound ? 261.63 : 0);
			tick_sound = 2;
 1f0:	70 e0       	ldi	r23, 0x00	; 0
 1f2:	fa 2f       	mov	r31, r26
	while(1) {
		if(--tick_sound == 0) {
			if(~PINA & 4) {
				sound = sound ? 0 : 16;
			} else {
				sound = 0;
 1f4:	03 c0       	rjmp	.+6      	; 0x1fc <main+0x52>
 1f6:	62 e0       	ldi	r22, 0x02	; 2
			}
			
			//set_PWM(sound ? 261.63 : 0);
			tick_sound = 2;
 1f8:	70 e0       	ldi	r23, 0x00	; 0
 1fa:	fa 2f       	mov	r31, r26
	TimerOn();
	PORTB = 0;
	while(1) {
		if(--tick_sound == 0) {
			if(~PINA & 4) {
				sound = sound ? 0 : 16;
 1fc:	21 50       	subi	r18, 0x01	; 1
			}
			
			//set_PWM(sound ? 261.63 : 0);
			tick_sound = 2;
		}
		if(--tick_three == 0) {
 1fe:	31 09       	sbc	r19, r1
 200:	49 f4       	brne	.+18     	; 0x214 <main+0x6a>
 202:	94 30       	cpi	r25, 0x04	; 4
			tick_three = 300;
			if(three == 4) {
 204:	21 f0       	breq	.+8      	; 0x20e <main+0x64>
 206:	99 0f       	add	r25, r25
				three = 1;
				} else {
				three <<= 1;
 208:	2c e2       	ldi	r18, 0x2C	; 44
			
			//set_PWM(sound ? 261.63 : 0);
			tick_sound = 2;
		}
		if(--tick_three == 0) {
			tick_three = 300;
 20a:	31 e0       	ldi	r19, 0x01	; 1
 20c:	03 c0       	rjmp	.+6      	; 0x214 <main+0x6a>
 20e:	2c e2       	ldi	r18, 0x2C	; 44
 210:	31 e0       	ldi	r19, 0x01	; 1
 212:	91 e0       	ldi	r25, 0x01	; 1
			if(three == 4) {
				three = 1;
 214:	41 50       	subi	r20, 0x01	; 1
				} else {
				three <<= 1;
			}
		}
		if(--tick_blink == 0) {
 216:	51 09       	sbc	r21, r1
 218:	49 f4       	brne	.+18     	; 0x22c <main+0x82>
 21a:	e1 11       	cpse	r30, r1
			tick_blink = 1000;

			if(blink) {
 21c:	04 c0       	rjmp	.+8      	; 0x226 <main+0x7c>
 21e:	48 ee       	ldi	r20, 0xE8	; 232
				} else {
				three <<= 1;
			}
		}
		if(--tick_blink == 0) {
			tick_blink = 1000;
 220:	53 e0       	ldi	r21, 0x03	; 3
 222:	eb 2f       	mov	r30, r27

			if(blink) {
				blink = 0;
			} else {
				blink = 8;
 224:	03 c0       	rjmp	.+6      	; 0x22c <main+0x82>
 226:	48 ee       	ldi	r20, 0xE8	; 232
				} else {
				three <<= 1;
			}
		}
		if(--tick_blink == 0) {
			tick_blink = 1000;
 228:	53 e0       	ldi	r21, 0x03	; 3
 22a:	ea 2f       	mov	r30, r26

			if(blink) {
				blink = 0;
 22c:	8f 2f       	mov	r24, r31
			} else {
				blink = 8;
			}
		}

		PORTB = three | blink | sound;
 22e:	89 2b       	or	r24, r25
 230:	8e 2b       	or	r24, r30
 232:	85 b9       	out	0x05, r24	; 5
 234:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <TimerFlag>

		while(!TimerFlag);
 238:	88 23       	and	r24, r24
 23a:	e1 f3       	breq	.-8      	; 0x234 <main+0x8a>
 23c:	a0 93 08 01 	sts	0x0108, r26	; 0x800108 <TimerFlag>
		TimerFlag = 0;
 240:	61 50       	subi	r22, 0x01	; 1
	unsigned short tick_blink = 1000;
	TimerSet(1);
	TimerOn();
	PORTB = 0;
	while(1) {
		if(--tick_sound == 0) {
 242:	71 09       	sbc	r23, r1
 244:	61 f2       	breq	.-104    	; 0x1de <main+0x34>
 246:	da cf       	rjmp	.-76     	; 0x1fc <main+0x52>

00000248 <_exit>:
 248:	f8 94       	cli

0000024a <__stop_program>:
 24a:	ff cf       	rjmp	.-2      	; 0x24a <__stop_program>
