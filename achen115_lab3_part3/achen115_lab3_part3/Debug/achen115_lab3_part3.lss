
achen115_lab3_part3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001b4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000160  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001b4  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001e4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000224  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000849  00000000  00000000  00000244  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007a5  00000000  00000000  00000a8d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000320  00000000  00000000  00001232  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  00001554  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003f4  00000000  00000000  00001588  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000048  00000000  00000000  0000197c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  000019c4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	02 d0       	rcall	.+4      	; 0x9e <main>
  9a:	60 c0       	rjmp	.+192    	; 0x15c <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <main>:

#include <avr/io.h>


int main(void)
{
  9e:	cf 93       	push	r28
  a0:	df 93       	push	r29
  a2:	00 d0       	rcall	.+0      	; 0xa4 <main+0x6>
  a4:	cd b7       	in	r28, 0x3d	; 61
  a6:	de b7       	in	r29, 0x3e	; 62
    /* Replace with your application code */
    DDRA = 0;	PINA = -1;
  a8:	81 e2       	ldi	r24, 0x21	; 33
  aa:	90 e0       	ldi	r25, 0x00	; 0
  ac:	fc 01       	movw	r30, r24
  ae:	10 82       	st	Z, r1
  b0:	80 e2       	ldi	r24, 0x20	; 32
  b2:	90 e0       	ldi	r25, 0x00	; 0
  b4:	2f ef       	ldi	r18, 0xFF	; 255
  b6:	fc 01       	movw	r30, r24
  b8:	20 83       	st	Z, r18
    DDRC = -1;	PORTC = 0;
  ba:	87 e2       	ldi	r24, 0x27	; 39
  bc:	90 e0       	ldi	r25, 0x00	; 0
  be:	2f ef       	ldi	r18, 0xFF	; 255
  c0:	fc 01       	movw	r30, r24
  c2:	20 83       	st	Z, r18
  c4:	88 e2       	ldi	r24, 0x28	; 40
  c6:	90 e0       	ldi	r25, 0x00	; 0
  c8:	fc 01       	movw	r30, r24
  ca:	10 82       	st	Z, r1
    while (1)
    {
		char A = PINA;
  cc:	80 e2       	ldi	r24, 0x20	; 32
  ce:	90 e0       	ldi	r25, 0x00	; 0
  d0:	fc 01       	movw	r30, r24
  d2:	80 81       	ld	r24, Z
  d4:	8a 83       	std	Y+2, r24	; 0x02
	    char fuel = fuel & 0x0F;
  d6:	89 81       	ldd	r24, Y+1	; 0x01
  d8:	8f 70       	andi	r24, 0x0F	; 15
  da:	89 83       	std	Y+1, r24	; 0x01
	    PORTC = (((A & 0x70) == 0x30) << 7) |		//A == X011 XXXX
  dc:	88 e2       	ldi	r24, 0x28	; 40
  de:	90 e0       	ldi	r25, 0x00	; 0
  e0:	2a 81       	ldd	r18, Y+2	; 0x02
  e2:	22 2f       	mov	r18, r18
  e4:	30 e0       	ldi	r19, 0x00	; 0
  e6:	20 77       	andi	r18, 0x70	; 112
  e8:	33 27       	eor	r19, r19
  ea:	20 33       	cpi	r18, 0x30	; 48
  ec:	31 05       	cpc	r19, r1
  ee:	11 f4       	brne	.+4      	; 0xf4 <main+0x56>
  f0:	30 e8       	ldi	r19, 0x80	; 128
  f2:	01 c0       	rjmp	.+2      	; 0xf6 <main+0x58>
  f4:	30 e0       	ldi	r19, 0x00	; 0
  f6:	29 81       	ldd	r18, Y+1	; 0x01
  f8:	25 30       	cpi	r18, 0x05	; 5
  fa:	10 f4       	brcc	.+4      	; 0x100 <main+0x62>
  fc:	20 e4       	ldi	r18, 0x40	; 64
  fe:	01 c0       	rjmp	.+2      	; 0x102 <main+0x64>
 100:	20 e0       	ldi	r18, 0x00	; 0
 102:	32 2b       	or	r19, r18
 104:	29 81       	ldd	r18, Y+1	; 0x01
 106:	22 23       	and	r18, r18
 108:	11 f0       	breq	.+4      	; 0x10e <main+0x70>
 10a:	20 e2       	ldi	r18, 0x20	; 32
 10c:	01 c0       	rjmp	.+2      	; 0x110 <main+0x72>
 10e:	20 e0       	ldi	r18, 0x00	; 0
 110:	32 2b       	or	r19, r18
 112:	29 81       	ldd	r18, Y+1	; 0x01
 114:	23 30       	cpi	r18, 0x03	; 3
 116:	10 f0       	brcs	.+4      	; 0x11c <main+0x7e>
 118:	20 e1       	ldi	r18, 0x10	; 16
 11a:	01 c0       	rjmp	.+2      	; 0x11e <main+0x80>
 11c:	20 e0       	ldi	r18, 0x00	; 0
 11e:	32 2b       	or	r19, r18
 120:	29 81       	ldd	r18, Y+1	; 0x01
 122:	25 30       	cpi	r18, 0x05	; 5
 124:	10 f0       	brcs	.+4      	; 0x12a <main+0x8c>
 126:	28 e0       	ldi	r18, 0x08	; 8
 128:	01 c0       	rjmp	.+2      	; 0x12c <main+0x8e>
 12a:	20 e0       	ldi	r18, 0x00	; 0
 12c:	32 2b       	or	r19, r18
 12e:	29 81       	ldd	r18, Y+1	; 0x01
 130:	27 30       	cpi	r18, 0x07	; 7
 132:	10 f0       	brcs	.+4      	; 0x138 <main+0x9a>
 134:	24 e0       	ldi	r18, 0x04	; 4
 136:	01 c0       	rjmp	.+2      	; 0x13a <main+0x9c>
 138:	20 e0       	ldi	r18, 0x00	; 0
 13a:	32 2b       	or	r19, r18
 13c:	29 81       	ldd	r18, Y+1	; 0x01
 13e:	2a 30       	cpi	r18, 0x0A	; 10
 140:	10 f0       	brcs	.+4      	; 0x146 <main+0xa8>
 142:	22 e0       	ldi	r18, 0x02	; 2
 144:	01 c0       	rjmp	.+2      	; 0x148 <main+0xaa>
 146:	20 e0       	ldi	r18, 0x00	; 0
 148:	23 2b       	or	r18, r19
				((fuel > 0) << 5) |
				((fuel > 2) << 4) |
				((fuel > 4) << 3) |
				((fuel > 6) << 2) |
				((fuel > 9) << 1) |
				(fuel > 12);
 14a:	31 e0       	ldi	r19, 0x01	; 1
 14c:	49 81       	ldd	r20, Y+1	; 0x01
 14e:	4d 30       	cpi	r20, 0x0D	; 13
 150:	08 f4       	brcc	.+2      	; 0x154 <main+0xb6>
 152:	30 e0       	ldi	r19, 0x00	; 0
    DDRC = -1;	PORTC = 0;
    while (1)
    {
		char A = PINA;
	    char fuel = fuel & 0x0F;
	    PORTC = (((A & 0x70) == 0x30) << 7) |		//A == X011 XXXX
 154:	23 2b       	or	r18, r19
 156:	fc 01       	movw	r30, r24
 158:	20 83       	st	Z, r18
				((fuel > 2) << 4) |
				((fuel > 4) << 3) |
				((fuel > 6) << 2) |
				((fuel > 9) << 1) |
				(fuel > 12);
    }
 15a:	b8 cf       	rjmp	.-144    	; 0xcc <main+0x2e>

0000015c <_exit>:
 15c:	f8 94       	cli

0000015e <__stop_program>:
 15e:	ff cf       	rjmp	.-2      	; 0x15e <__stop_program>
